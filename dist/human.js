/*
  Human
  homepage: <https://github.com/vladmandic/human>
  author: <https://github.com/vladmandic>'
*/

"use strict";var Human=(()=>{var Bf=Object.defineProperty;var e_=Object.getOwnPropertyDescriptor;var t_=Object.getOwnPropertyNames;var n_=Object.prototype.hasOwnProperty;var s_=(e,t,n)=>t in e?Bf(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var la=(e,t)=>{for(var n in t)Bf(e,n,{get:t[n],enumerable:!0})},r_=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of t_(t))!n_.call(e,r)&&r!==n&&Bf(e,r,{get:()=>t[r],enumerable:!(s=e_(t,r))||s.enumerable});return e};var a_=e=>r_(Bf({},"__esModule",{value:!0}),e);var ge=(e,t,n)=>(s_(e,typeof t!="symbol"?t+"":t,n),n),hv=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)};var Yd=(e,t,n)=>(hv(e,t,"read from private field"),n?n.call(e):t.get(e)),Jd=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},Qd=(e,t,n,s)=>(hv(e,t,"write to private field"),s?s.call(e,n):t.set(e,n),n);var ebe={};la(ebe,{Human:()=>H4,default:()=>H4,defaults:()=>Wa,draw:()=>z4,env:()=>he,match:()=>G4,models:()=>i1});function ae(...e){let t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(n,"Human:",...e)}function fv(e,t){let n=e.endsWith("/")?"":"/",r=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!r.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${r}`);return r}var ie=()=>typeof performance!="undefined"?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function a3(e,t,n="config",s=[]){for(let r of Object.keys(t))if(typeof t[r]=="object")a3(e[r],t[r],r,s);else{let a=e&&typeof e[r]!="undefined";a||s.push({reason:"unknown property",where:`${n}.${r} = ${t[r]}`});let o=e&&typeof e[r]==typeof t[r];a&&!o&&s.push({reason:"property type mismatch",where:`${n}.${r} = ${t[r]}`,expected:typeof e[r]})}return t.debug&&n==="config"&&s.length>0&&ae("invalid configuration",s),s}function Xt(...e){let t=n=>n&&typeof n=="object";return e.reduce((n,s)=>(Object.keys(s||{}).forEach(r=>{let a=n[r],o=s[r];Array.isArray(a)&&Array.isArray(o)?n[r]=a.concat(...o):t(a)&&t(o)?n[r]=Xt(a,o):n[r]=o}),n),{})}var Wa={backend:"",modelBasePath:"",cacheModels:!0,validateModels:!0,wasmPath:"",wasmPlatformFetch:!1,debug:!1,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json",keepInvalid:!1},attention:{enabled:!1,modelPath:"facemesh-attention.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}};var Ye={};la(Ye,{Abs:()=>ll,Acos:()=>fc,Acosh:()=>mc,AdadeltaOptimizer:()=>X0,AdagradOptimizer:()=>K0,AdamOptimizer:()=>Z0,AdamaxOptimizer:()=>Y0,Add:()=>ba,AddN:()=>ho,All:()=>gc,Any:()=>yc,ArgMax:()=>fo,ArgMin:()=>Ac,Asin:()=>xc,Asinh:()=>bc,Atan:()=>vc,Atan2:()=>kc,Atanh:()=>wc,AvgPool:()=>mo,AvgPool3D:()=>Lp,AvgPool3DGrad:()=>qm,AvgPoolGrad:()=>jm,BackendWasm:()=>jC,BatchMatMul:()=>go,BatchToSpaceND:()=>ul,Bincount:()=>Xm,BroadcastArgs:()=>Km,BroadcastTo:()=>m6,Callback:()=>Nk,CallbackList:()=>D8,Cast:()=>yo,Ceil:()=>Ao,ClipByValue:()=>va,Complex:()=>Bp,ComplexAbs:()=>Wp,Concat:()=>cl,Conv2D:()=>xo,Conv2DBackpropFilter:()=>Zm,Conv2DBackpropInput:()=>bo,Conv3D:()=>Vp,Conv3DBackpropFilterV2:()=>Ym,Conv3DBackpropInputV2:()=>Jm,Cos:()=>vo,Cosh:()=>wo,CropAndResize:()=>pl,Cumprod:()=>dl,Cumsum:()=>ko,CustomCallback:()=>P8,DataStorage:()=>zp,DenseBincount:()=>Qm,DepthToSpace:()=>hl,DepthwiseConv2dNative:()=>Io,DepthwiseConv2dNativeBackpropFilter:()=>e0,DepthwiseConv2dNativeBackpropInput:()=>t0,Diag:()=>n0,Dilation2D:()=>Up,Dilation2DBackpropFilter:()=>mm,Dilation2DBackpropInput:()=>fm,ENV:()=>Ty,EarlyStopping:()=>Ek,Einsum:()=>Gp,Elu:()=>Co,EluGrad:()=>s0,Environment:()=>h6,Equal:()=>fl,Erf:()=>Ic,Exp:()=>To,ExpandDims:()=>ml,Expm1:()=>gl,FFT:()=>r0,Fill:()=>Sc,FlipLeftRight:()=>yl,Floor:()=>No,FloorDiv:()=>Eo,FromPixels:()=>vp,FusedBatchNorm:()=>Ro,FusedConv2D:()=>eo,FusedDepthwiseConv2D:()=>to,GPGPUContext:()=>Xu,GatherNd:()=>xl,GatherV2:()=>Al,GraphModel:()=>Ph,Greater:()=>bl,GreaterEqual:()=>_o,History:()=>$8,IFFT:()=>a0,Identity:()=>Do,Imag:()=>Hp,InputSpec:()=>sn,IsFinite:()=>Cc,IsInf:()=>Tc,IsNan:()=>Nc,KernelBackend:()=>pc,LRN:()=>jp,LRNGrad:()=>i0,LayerVariable:()=>S8,LayersModel:()=>fa,LeakyRelu:()=>$o,Less:()=>vl,LessEqual:()=>wl,LinSpace:()=>o0,Log:()=>Po,Log1p:()=>Ec,LogSoftmax:()=>y6,LogicalAnd:()=>kl,LogicalNot:()=>Il,LogicalOr:()=>Rc,LogicalXor:()=>g6,LowerBound:()=>Z_,MathBackendWebGL:()=>ud,Max:()=>Fo,MaxPool:()=>Mo,MaxPool3D:()=>qp,MaxPool3DGrad:()=>u0,MaxPoolGrad:()=>l0,MaxPoolWithArgmax:()=>c0,Maximum:()=>Oo,Mean:()=>zo,Min:()=>Lo,Minimum:()=>Bo,MirrorPad:()=>Wo,Mod:()=>_c,MomentumOptimizer:()=>J0,Multinomial:()=>d0,Multiply:()=>Vo,Neg:()=>Sl,NonMaxSuppressionV3:()=>Tl,NonMaxSuppressionV4:()=>Dc,NonMaxSuppressionV5:()=>Nl,NotEqual:()=>Cl,OP_SCOPE_SUFFIX:()=>_y,OneHot:()=>Rl,OnesLike:()=>El,Optimizer:()=>Ia,OptimizerConstructors:()=>Va,Pack:()=>_l,PadV2:()=>Uo,Pool:()=>Y_,Pow:()=>Go,Prelu:()=>Ho,Prod:()=>jo,RMSPropOptimizer:()=>Q0,RNN:()=>ea,Range:()=>$c,Rank:()=>w3,Real:()=>Xp,RealDiv:()=>So,Reciprocal:()=>Pc,Reduction:()=>es,Relu:()=>qo,Relu6:()=>Zo,Reshape:()=>Dl,ResizeBilinear:()=>Ko,ResizeBilinearGrad:()=>h0,ResizeNearestNeighbor:()=>Xo,ResizeNearestNeighborGrad:()=>p0,Reverse:()=>$l,RotateWithOffset:()=>ql,Round:()=>Pl,Rsqrt:()=>Yo,SGDOptimizer:()=>wh,ScatterNd:()=>Fl,SearchSorted:()=>f0,Select:()=>Ol,Selu:()=>Fc,Sequential:()=>ac,Sigmoid:()=>Qo,Sign:()=>Oc,Sin:()=>Jo,Sinh:()=>zl,Slice:()=>Ml,Softmax:()=>ni,Softplus:()=>Mc,SpaceToBatchND:()=>Ll,SparseFillEmptyRows:()=>Kp,SparseReshape:()=>zc,SparseSegmentMean:()=>Zp,SparseSegmentSum:()=>Yp,SparseToDense:()=>Jp,SplitV:()=>Bl,Sqrt:()=>ei,Square:()=>Lc,SquaredDifference:()=>si,Step:()=>oi,StridedSlice:()=>Wl,StringNGrams:()=>Bc,StringSplit:()=>Qp,StringToHashBucketFast:()=>eh,Sub:()=>ri,Sum:()=>ti,SymbolicTensor:()=>Nr,Tan:()=>Vl,Tanh:()=>ai,Tensor:()=>nt,TensorBuffer:()=>pn,Tile:()=>wa,TopK:()=>Ul,Transform:()=>Gl,Transpose:()=>jr,Unique:()=>m0,Unpack:()=>Hl,UnsortedSegmentSum:()=>th,UpperBound:()=>J_,Variable:()=>Ip,ZerosLike:()=>jl,_FusedMatMul:()=>Qa,abs:()=>en,acos:()=>Zy,acosh:()=>Yy,add:()=>ue,addN:()=>y0,all:()=>A0,any:()=>Tp,argMax:()=>Rs,argMin:()=>Jy,asin:()=>Qy,asinh:()=>eA,atan:()=>tA,atan2:()=>nA,atanh:()=>sA,avgPool:()=>uh,avgPool3d:()=>aA,backend:()=>Bn,backend_util:()=>T,basicLSTMCell:()=>lw,batchNorm:()=>Uc,batchNorm2d:()=>oA,batchNorm3d:()=>iA,batchNorm4d:()=>lA,batchToSpaceND:()=>ch,bincount:()=>uA,booleanMaskAsync:()=>Uw,broadcastArgs:()=>uw,broadcastTo:()=>ju,broadcast_util:()=>Kl,browser:()=>Ks,buffer:()=>We,callbacks:()=>nj,cast:()=>ye,ceil:()=>cA,clipByValue:()=>ms,clone:()=>On,complex:()=>ma,concat:()=>St,concat1d:()=>dA,concat2d:()=>Zl,concat3d:()=>pA,concat4d:()=>hA,constraints:()=>N8,conv1d:()=>x0,conv2d:()=>ga,conv2dTranspose:()=>b0,conv3d:()=>mA,conv3dTranspose:()=>gA,copyRegisteredKernels:()=>nD,cos:()=>dh,cosh:()=>v0,cosineWindow:()=>U0,cumprod:()=>Np,cumsum:()=>w0,customGrad:()=>Zr,data:()=>Qk,denseBincount:()=>dw,deprecationWarn:()=>Ly,depthToSpace:()=>yA,depthwiseConv2d:()=>Gc,deregisterOp:()=>aj,device_util:()=>ah,diag:()=>pw,dilation2d:()=>AA,disableDeprecationWarnings:()=>E$,dispose:()=>J,disposeVariables:()=>R$,div:()=>fe,divNoNan:()=>xA,dot:()=>bA,dropout:()=>jA,einsum:()=>hw,elu:()=>Hc,enableDebugMode:()=>N$,enableProdMode:()=>zy,enclosingPowerOfTwo:()=>qA,engine:()=>nn,env:()=>j,equal:()=>_s,erf:()=>vA,euclideanNorm:()=>IA,exp:()=>Ds,expandDims:()=>Lt,expm1:()=>SA,eye:()=>k0,fft:()=>bh,fill:()=>qc,findBackend:()=>Wy,findBackendFactory:()=>P$,floor:()=>Xc,floorDiv:()=>Vc,forceHalfFloat:()=>p9,fused:()=>nc,gather:()=>Kc,gatherND:()=>qw,gather_util:()=>Uy,getBackend:()=>Ln,getGradient:()=>b3,getKernel:()=>gm,getKernelsForBackend:()=>Xr,getThreadsCount:()=>_me,gpgpu_util:()=>GS,grad:()=>tO,grads:()=>nO,greater:()=>As,greaterEqual:()=>ui,ifft:()=>tc,imag:()=>ih,image:()=>Se,inTopKAsync:()=>Xw,initializers:()=>E8,input:()=>X8,io:()=>Ns,irfft:()=>L0,isFinite:()=>CA,isInf:()=>TA,isNaN:()=>NA,keep:()=>An,kernel_impls:()=>cr,layers:()=>R8,leakyRelu:()=>ph,less:()=>I0,lessEqual:()=>ci,linalg:()=>ZA,linspace:()=>Aw,loadGraphModel:()=>lq,loadGraphModelSync:()=>uq,loadLayersModel:()=>pG,localResponseNormalization:()=>EA,log:()=>$s,log1p:()=>hh,logSigmoid:()=>RA,logSoftmax:()=>C0,logSumExp:()=>T0,logicalAnd:()=>ir,logicalNot:()=>fh,logicalOr:()=>N0,logicalXor:()=>_A,losses:()=>o8,lowerBound:()=>bw,matMul:()=>Qe,math:()=>W6,max:()=>hn,maxPool:()=>mh,maxPool3d:()=>DA,maxPoolWithArgmax:()=>vw,maximum:()=>Qr,mean:()=>Bt,memory:()=>xm,meshgrid:()=>ww,metrics:()=>Sk,min:()=>ya,minimum:()=>Zc,mirrorPad:()=>$A,mod:()=>Jl,model:()=>cG,models:()=>Ck,moments:()=>gh,movingAverage:()=>Gw,mul:()=>z,multiRNNCell:()=>kw,multinomial:()=>Iw,neg:()=>Dt,nextFrame:()=>YA,norm:()=>jc,notEqual:()=>el,oneHot:()=>Ju,ones:()=>Es,onesLike:()=>Ps,op:()=>B,outerProduct:()=>Sw,pad:()=>Zs,pad1d:()=>Cw,pad2d:()=>Tw,pad3d:()=>Nw,pad4d:()=>Ew,pool:()=>PA,pow:()=>Aa,prelu:()=>Ah,print:()=>Fy,prod:()=>FA,profile:()=>_$,rand:()=>Rw,randomGamma:()=>_w,randomNormal:()=>R0,randomStandardNormal:()=>Dw,randomUniform:()=>Yc,range:()=>ec,ready:()=>Wc,real:()=>Qu,reciprocal:()=>zA,registerBackend:()=>Xl,registerCallbackConstructor:()=>hG,registerGradient:()=>A6,registerKernel:()=>ur,registerOp:()=>rj,regularizers:()=>Tk,relu:()=>Fr,relu6:()=>_0,removeBackend:()=>$$,reshape:()=>V,reverse:()=>Xs,reverse1d:()=>$w,reverse2d:()=>Pw,reverse3d:()=>Fw,reverse4d:()=>Ow,rfft:()=>vh,round:()=>D0,rsqrt:()=>$0,scalar:()=>Ce,scatterND:()=>Hw,scatter_util:()=>Gy,searchSorted:()=>E0,selu:()=>P0,separableConv2d:()=>F0,sequential:()=>dG,serialization:()=>de,setBackend:()=>By,setPlatform:()=>F$,setThreadsCount:()=>Rme,setWasmPath:()=>Eme,setWasmPaths:()=>E2,setWebGLContext:()=>v2,setdiff1dAsync:()=>Mw,sigmoid:()=>Cn,sign:()=>LA,signal:()=>a8,sin:()=>O0,sinh:()=>M0,slice:()=>ze,slice1d:()=>xh,slice2d:()=>z0,slice3d:()=>di,slice4d:()=>so,slice_util:()=>Ut,softmax:()=>Ql,softplus:()=>Yl,spaceToBatchND:()=>yh,sparse:()=>i8,sparseToDense:()=>jw,spectral:()=>r8,split:()=>Kt,sqrt:()=>Nn,square:()=>bt,squaredDifference:()=>B0,squeeze:()=>st,stack:()=>an,step:()=>eu,stridedSlice:()=>BA,string:()=>l8,sub:()=>me,sum:()=>ke,sumOutType:()=>rh,tan:()=>WA,tanh:()=>Ji,tensor:()=>ct,tensor1d:()=>Pt,tensor2d:()=>ar,tensor3d:()=>Vy,tensor4d:()=>zw,tensor5d:()=>Lw,tensor6d:()=>Bw,tensor_util:()=>Er,test_util:()=>nw,tidy:()=>Z,tile:()=>Hs,time:()=>D$,topk:()=>VA,train:()=>Oi,transpose:()=>et,truncatedNormal:()=>W0,unique:()=>UA,unregisterGradient:()=>tD,unregisterKernel:()=>eD,unsortedSegmentSum:()=>V0,unstack:()=>En,upcastType:()=>Mn,upperBound:()=>Ww,util:()=>v,valueAndGrad:()=>sO,valueAndGrads:()=>rO,variable:()=>GA,variableGrads:()=>xw,version:()=>Gh,version_converter:()=>dq,version_core:()=>Ky,version_layers:()=>x5,version_wasm:()=>Dme,version_webgl:()=>Cne,webgl:()=>Tne,webgl_util:()=>fS,webgpu:()=>xT,where:()=>zn,whereAsync:()=>HA,zeros:()=>Wt,zerosLike:()=>it});var o_=Object.create,wy=Object.defineProperty,i_=Object.getOwnPropertyDescriptor,t6=Object.getOwnPropertyNames,l_=Object.getPrototypeOf,u_=Object.prototype.hasOwnProperty,on=(e,t)=>function(){return t||(0,e[t6(e)[0]])((t={exports:{}}).exports,t),t.exports},Ge=(e,t)=>{for(var n in t)wy(e,n,{get:t[n],enumerable:!0})},c_=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of t6(t))!u_.call(e,r)&&r!==n&&wy(e,r,{get:()=>t[r],enumerable:!(s=i_(t,r))||s.enumerable});return e},co=(e,t,n)=>(n=e!=null?o_(l_(e)):{},c_(t||!e||!e.__esModule?wy(n,"default",{value:e,enumerable:!0}):n,e)),d_=on({"node_modules/.pnpm/long@4.0.0/node_modules/long/src/long.js"(e,t){t.exports=s;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(P){}function s(P,C,M){this.low=P|0,this.high=C|0,this.unsigned=!!M}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0});function r(P){return(P&&P.__isLong__)===!0}s.isLong=r;var a={},o={};function i(P,C){var M,W,G;return C?(P>>>=0,(G=0<=P&&P<256)&&(W=o[P],W)?W:(M=u(P,(P|0)<0?-1:0,!0),G&&(o[P]=M),M)):(P|=0,(G=-128<=P&&P<128)&&(W=a[P],W)?W:(M=u(P,P<0?-1:0,!1),G&&(a[P]=M),M))}s.fromInt=i;function l(P,C){if(isNaN(P))return C?b:A;if(C){if(P<0)return b;if(P>=g)return _}else{if(P<=-y)return D;if(P+1>=y)return R}return P<0?l(-P,C).neg():u(P%m|0,P/m|0,C)}s.fromNumber=l;function u(P,C,M){return new s(P,C,M)}s.fromBits=u;var c=Math.pow;function p(P,C,M){if(P.length===0)throw Error("empty string");if(P==="NaN"||P==="Infinity"||P==="+Infinity"||P==="-Infinity")return A;if(typeof C=="number"?(M=C,C=!1):C=!!C,M=M||10,M<2||36<M)throw RangeError("radix");var W;if((W=P.indexOf("-"))>0)throw Error("interior hyphen");if(W===0)return p(P.substring(1),C,M).neg();for(var G=l(c(M,8)),X=A,K=0;K<P.length;K+=8){var Y=Math.min(8,P.length-K),se=parseInt(P.substring(K,K+Y),M);if(Y<8){var ee=l(c(M,Y));X=X.mul(ee).add(l(se))}else X=X.mul(G),X=X.add(l(se))}return X.unsigned=C,X}s.fromString=p;function d(P,C){return typeof P=="number"?l(P,C):typeof P=="string"?p(P,C):u(P.low,P.high,typeof C=="boolean"?C:P.unsigned)}s.fromValue=d;var h=1<<16,f=1<<24,m=h*h,g=m*m,y=g/2,x=i(f),A=i(0);s.ZERO=A;var b=i(0,!0);s.UZERO=b;var w=i(1);s.ONE=w;var I=i(1,!0);s.UONE=I;var k=i(-1);s.NEG_ONE=k;var R=u(-1,2147483647,!1);s.MAX_VALUE=R;var _=u(-1,-1,!0);s.MAX_UNSIGNED_VALUE=_;var D=u(0,-2147483648,!1);s.MIN_VALUE=D;var E=s.prototype;E.toInt=function(){return this.unsigned?this.low>>>0:this.low},E.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},E.toString=function(C){if(C=C||10,C<2||36<C)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(D)){var M=l(C),W=this.div(M),G=W.mul(M).sub(this);return W.toString(C)+G.toInt().toString(C)}else return"-"+this.neg().toString(C);for(var X=l(c(C,6),this.unsigned),K=this,Y="";;){var se=K.div(X),ee=K.sub(se.mul(X)).toInt()>>>0,le=ee.toString(C);if(K=se,K.isZero())return le+Y;for(;le.length<6;)le="0"+le;Y=""+le+Y}},E.getHighBits=function(){return this.high},E.getHighBitsUnsigned=function(){return this.high>>>0},E.getLowBits=function(){return this.low},E.getLowBitsUnsigned=function(){return this.low>>>0},E.getNumBitsAbs=function(){if(this.isNegative())return this.eq(D)?64:this.neg().getNumBitsAbs();for(var C=this.high!=0?this.high:this.low,M=31;M>0&&(C&1<<M)==0;M--);return this.high!=0?M+33:M+1},E.isZero=function(){return this.high===0&&this.low===0},E.eqz=E.isZero,E.isNegative=function(){return!this.unsigned&&this.high<0},E.isPositive=function(){return this.unsigned||this.high>=0},E.isOdd=function(){return(this.low&1)===1},E.isEven=function(){return(this.low&1)===0},E.equals=function(C){return r(C)||(C=d(C)),this.unsigned!==C.unsigned&&this.high>>>31===1&&C.high>>>31===1?!1:this.high===C.high&&this.low===C.low},E.eq=E.equals,E.notEquals=function(C){return!this.eq(C)},E.neq=E.notEquals,E.ne=E.notEquals,E.lessThan=function(C){return this.comp(C)<0},E.lt=E.lessThan,E.lessThanOrEqual=function(C){return this.comp(C)<=0},E.lte=E.lessThanOrEqual,E.le=E.lessThanOrEqual,E.greaterThan=function(C){return this.comp(C)>0},E.gt=E.greaterThan,E.greaterThanOrEqual=function(C){return this.comp(C)>=0},E.gte=E.greaterThanOrEqual,E.ge=E.greaterThanOrEqual,E.compare=function(C){if(r(C)||(C=d(C)),this.eq(C))return 0;var M=this.isNegative(),W=C.isNegative();return M&&!W?-1:!M&&W?1:this.unsigned?C.high>>>0>this.high>>>0||C.high===this.high&&C.low>>>0>this.low>>>0?-1:1:this.sub(C).isNegative()?-1:1},E.comp=E.compare,E.negate=function(){return!this.unsigned&&this.eq(D)?D:this.not().add(w)},E.neg=E.negate,E.add=function(C){r(C)||(C=d(C));var M=this.high>>>16,W=this.high&65535,G=this.low>>>16,X=this.low&65535,K=C.high>>>16,Y=C.high&65535,se=C.low>>>16,ee=C.low&65535,le=0,re=0,pe=0,ce=0;return ce+=X+ee,pe+=ce>>>16,ce&=65535,pe+=G+se,re+=pe>>>16,pe&=65535,re+=W+Y,le+=re>>>16,re&=65535,le+=M+K,le&=65535,u(pe<<16|ce,le<<16|re,this.unsigned)},E.subtract=function(C){return r(C)||(C=d(C)),this.add(C.neg())},E.sub=E.subtract,E.multiply=function(C){if(this.isZero())return A;if(r(C)||(C=d(C)),n){var M=n.mul(this.low,this.high,C.low,C.high);return u(M,n.get_high(),this.unsigned)}if(C.isZero())return A;if(this.eq(D))return C.isOdd()?D:A;if(C.eq(D))return this.isOdd()?D:A;if(this.isNegative())return C.isNegative()?this.neg().mul(C.neg()):this.neg().mul(C).neg();if(C.isNegative())return this.mul(C.neg()).neg();if(this.lt(x)&&C.lt(x))return l(this.toNumber()*C.toNumber(),this.unsigned);var W=this.high>>>16,G=this.high&65535,X=this.low>>>16,K=this.low&65535,Y=C.high>>>16,se=C.high&65535,ee=C.low>>>16,le=C.low&65535,re=0,pe=0,ce=0,Ae=0;return Ae+=K*le,ce+=Ae>>>16,Ae&=65535,ce+=X*le,pe+=ce>>>16,ce&=65535,ce+=K*ee,pe+=ce>>>16,ce&=65535,pe+=G*le,re+=pe>>>16,pe&=65535,pe+=X*ee,re+=pe>>>16,pe&=65535,pe+=K*se,re+=pe>>>16,pe&=65535,re+=W*le+G*ee+X*se+K*Y,re&=65535,u(ce<<16|Ae,re<<16|pe,this.unsigned)},E.mul=E.multiply,E.divide=function(C){if(r(C)||(C=d(C)),C.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&C.low===-1&&C.high===-1)return this;var M=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,C.low,C.high);return u(M,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:A;var W,G,X;if(this.unsigned){if(C.unsigned||(C=C.toUnsigned()),C.gt(this))return b;if(C.gt(this.shru(1)))return I;X=b}else{if(this.eq(D)){if(C.eq(w)||C.eq(k))return D;if(C.eq(D))return w;var K=this.shr(1);return W=K.div(C).shl(1),W.eq(A)?C.isNegative()?w:k:(G=this.sub(C.mul(W)),X=W.add(G.div(C)),X)}else if(C.eq(D))return this.unsigned?b:A;if(this.isNegative())return C.isNegative()?this.neg().div(C.neg()):this.neg().div(C).neg();if(C.isNegative())return this.div(C.neg()).neg();X=A}for(G=this;G.gte(C);){W=Math.max(1,Math.floor(G.toNumber()/C.toNumber()));for(var Y=Math.ceil(Math.log(W)/Math.LN2),se=Y<=48?1:c(2,Y-48),ee=l(W),le=ee.mul(C);le.isNegative()||le.gt(G);)W-=se,ee=l(W,this.unsigned),le=ee.mul(C);ee.isZero()&&(ee=w),X=X.add(ee),G=G.sub(le)}return X},E.div=E.divide,E.modulo=function(C){if(r(C)||(C=d(C)),n){var M=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,C.low,C.high);return u(M,n.get_high(),this.unsigned)}return this.sub(this.div(C).mul(C))},E.mod=E.modulo,E.rem=E.modulo,E.not=function(){return u(~this.low,~this.high,this.unsigned)},E.and=function(C){return r(C)||(C=d(C)),u(this.low&C.low,this.high&C.high,this.unsigned)},E.or=function(C){return r(C)||(C=d(C)),u(this.low|C.low,this.high|C.high,this.unsigned)},E.xor=function(C){return r(C)||(C=d(C)),u(this.low^C.low,this.high^C.high,this.unsigned)},E.shiftLeft=function(C){return r(C)&&(C=C.toInt()),(C&=63)===0?this:C<32?u(this.low<<C,this.high<<C|this.low>>>32-C,this.unsigned):u(0,this.low<<C-32,this.unsigned)},E.shl=E.shiftLeft,E.shiftRight=function(C){return r(C)&&(C=C.toInt()),(C&=63)===0?this:C<32?u(this.low>>>C|this.high<<32-C,this.high>>C,this.unsigned):u(this.high>>C-32,this.high>=0?0:-1,this.unsigned)},E.shr=E.shiftRight,E.shiftRightUnsigned=function(C){if(r(C)&&(C=C.toInt()),C&=63,C===0)return this;var M=this.high;if(C<32){var W=this.low;return u(W>>>C|M<<32-C,M>>>C,this.unsigned)}else return C===32?u(M,0,this.unsigned):u(M>>>C-32,0,this.unsigned)},E.shru=E.shiftRightUnsigned,E.shr_u=E.shiftRightUnsigned,E.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},E.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},E.toBytes=function(C){return C?this.toBytesLE():this.toBytesBE()},E.toBytesLE=function(){var C=this.high,M=this.low;return[M&255,M>>>8&255,M>>>16&255,M>>>24,C&255,C>>>8&255,C>>>16&255,C>>>24]},E.toBytesBE=function(){var C=this.high,M=this.low;return[C>>>24,C>>>16&255,C>>>8&255,C&255,M>>>24,M>>>16&255,M>>>8&255,M&255]},s.fromBytes=function(C,M,W){return W?s.fromBytesLE(C,M):s.fromBytesBE(C,M)},s.fromBytesLE=function(C,M){return new s(C[0]|C[1]<<8|C[2]<<16|C[3]<<24,C[4]|C[5]<<8|C[6]<<16|C[7]<<24,M)},s.fromBytesBE=function(C,M){return new s(C[4]<<24|C[5]<<16|C[6]<<8|C[7],C[0]<<24|C[1]<<16|C[2]<<8|C[3],M)}}}),p_=on({"(disabled):node_modules/.pnpm/node-fetch@2.6.7/node_modules/node-fetch/browser.js"(){}}),h_=on({"(disabled):util"(){}}),f_=on({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(u){var c=this,p=l();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=p(" "),c.s1=p(" "),c.s2=p(" "),c.s0-=p(u),c.s0<0&&(c.s0+=1),c.s1-=p(u),c.s1<0&&(c.s1+=1),c.s2-=p(u),c.s2<0&&(c.s2+=1),p=null}function o(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function i(u,c){var p=new a(u),d=c&&c.state,h=p.next;return h.int32=function(){return p.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&o(d,p),h.state=function(){return o(p,{})}),h}function l(){var u=4022871197,c=function(p){p=String(p);for(var d=0;d<p.length;d++){u+=p.charCodeAt(d);var h=.02519603282416938*u;u=h>>>0,h-=u,h*=u,u=h>>>0,h-=u,u+=h*4294967296}return(u>>>0)*23283064365386963e-26};return c}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),m_=on({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(l){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},l===(l|0)?u.x=l:c+=l;for(var p=0;p<c.length+64;p++)u.x^=c.charCodeAt(p)|0,u.next()}function o(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function i(l,u){var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),g_=on({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(l){var u=this,c="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:c+=l;for(var p=0;p<c.length+64;p++)u.x^=c.charCodeAt(p)|0,p==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function i(l,u){var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),y_=on({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(l){var u=this;u.next=function(){var p=u.x,d=u.i,h,f,m;return h=p[d],h^=h>>>7,f=h^h<<24,h=p[d+1&7],f^=h^h>>>10,h=p[d+3&7],f^=h^h>>>3,h=p[d+4&7],f^=h^h<<7,h=p[d+7&7],h=h^h<<13,f^=h^h<<9,p[d]=f,u.i=d+1&7,f};function c(p,d){var h,f,m=[];if(d===(d|0))f=m[0]=d;else for(d=""+d,h=0;h<d.length;++h)m[h&7]=m[h&7]<<15^d.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],p.x=m,p.i=0,h=256;h>0;--h)p.next()}c(u,l)}function o(l,u){return u.x=l.x.slice(),u.i=l.i,u}function i(l,u){l==null&&(l=+new Date);var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(p.x&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),A_=on({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(l){var u=this;u.next=function(){var p=u.w,d=u.X,h=u.i,f,m;return u.w=p=p+1640531527|0,m=d[h+34&127],f=d[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=d[h]=m^f,u.i=h,m+(p^p>>>16)|0};function c(p,d){var h,f,m,g,y,x=[],A=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,A=Math.max(A,d.length)),m=0,g=-32;g<A;++g)d&&(f^=d.charCodeAt((g+32)%d.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,h=x[g&127]^=f+y,m=h==0?m+1:0);for(m>=128&&(x[(d&&d.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=x[m+34&127],h=x[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,x[m]=f^h;p.w=y,p.X=x,p.i=m}c(u,l)}function o(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function i(l,u){l==null&&(l=+new Date);var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(p.X&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),x_=on({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(l){var u=this,c="";u.next=function(){var d=u.b,h=u.c,f=u.d,m=u.a;return d=d<<25^d>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-d|0,u.b=d=d<<20^d>>>12^h,u.c=h=h-f|0,u.d=f<<16^h>>>16^m,u.a=m-d|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):c+=l;for(var p=0;p<c.length+20;p++)u.b^=c.charCodeAt(p)|0,u.next()}function o(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function i(l,u){var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),b_=on({"(disabled):crypto"(){}}),v_=on({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s,r){var a=256,o=6,i=52,l="random",u=r.pow(a,o),c=r.pow(2,i),p=c*2,d=a-1,h;function f(w,I,k){var R=[];I=I==!0?{entropy:!0}:I||{};var _=x(y(I.entropy?[w,b(s)]:w==null?A():w,3),R),D=new m(R),E=function(){for(var P=D.g(o),C=u,M=0;P<c;)P=(P+M)*a,C*=a,M=D.g(1);for(;P>=p;)P/=2,C/=2,M>>>=1;return(P+M)/C};return E.int32=function(){return D.g(4)|0},E.quick=function(){return D.g(4)/4294967296},E.double=E,x(b(D.S),s),(I.pass||k||function(P,C,M,W){return W&&(W.S&&g(W,D),P.state=function(){return g(D,{})}),M?(r[l]=P,C):P})(E,_,"global"in I?I.global:this==r,I.state)}function m(w){var I,k=w.length,R=this,_=0,D=R.i=R.j=0,E=R.S=[];for(k||(w=[k++]);_<a;)E[_]=_++;for(_=0;_<a;_++)E[_]=E[D=d&D+w[_%k]+(I=E[_])],E[D]=I;(R.g=function(P){for(var C,M=0,W=R.i,G=R.j,X=R.S;P--;)C=X[W=d&W+1],M=M*a+X[d&(X[W]=X[G=d&G+C])+(X[G]=C)];return R.i=W,R.j=G,M})(a)}function g(w,I){return I.i=w.i,I.j=w.j,I.S=w.S.slice(),I}function y(w,I){var k=[],R=typeof w,_;if(I&&R=="object")for(_ in w)try{k.push(y(w[_],I-1))}catch(D){}return k.length?k:R=="string"?w:w+"\0"}function x(w,I){for(var k=w+"",R,_=0;_<k.length;)I[d&_]=d&(R^=I[d&_]*19)+k.charCodeAt(_++);return b(I)}function A(){try{var w;return h&&(w=h.randomBytes)?w=w(a):(w=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(w)),b(w)}catch(R){var I=n.navigator,k=I&&I.plugins;return[+new Date,n,k,n.screen,b(s)]}}function b(w){return String.fromCharCode.apply(0,w)}if(x(r.random(),s),typeof t=="object"&&t.exports){t.exports=f;try{h=b_()}catch(w){}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+l]=f})(typeof self!="undefined"?self:e,[],Math)}}),Um=on({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/index.js"(e,t){var n=f_(),s=m_(),r=g_(),a=y_(),o=A_(),i=x_(),l=v_();l.alea=n,l.xor128=s,l.xorwow=r,l.xorshift7=a,l.xor4096=o,l.tychei=i,t.exports=l}}),n6=on({"(disabled):node_modules/.pnpm/string_decoder@1.3.0/node_modules/string_decoder/lib/string_decoder.js"(){}}),ky=on({"(disabled):fs"(){}}),dm=on({"(disabled):path"(){}}),w_=on({"(disabled):worker_threads"(){}}),k_=on({"(disabled):perf_hooks"(){}}),I_=on({"(disabled):os"(){}}),S_=on({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.19.0_hek32lflchivueqv5i4vgonghu/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=(()=>{var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};function a(){return Pe.buffer!=Kn&&xr(Pe.buffer),af}function o(){return Pe.buffer!=Kn&&xr(Pe.buffer),of}function i(){return Pe.buffer!=Kn&&xr(Pe.buffer),Ld}function l(){return Pe.buffer!=Kn&&xr(Pe.buffer),lf}function u(){return Pe.buffer!=Kn&&xr(Pe.buffer),uf}function c(){return Pe.buffer!=Kn&&xr(Pe.buffer),cf}function p(){return Pe.buffer!=Kn&&xr(Pe.buffer),df}var d=typeof r!="undefined"?r:{},h,f;d.ready=new Promise(function(N,F){h=N,f=F});var m;typeof process!="undefined"&&process.listeners&&(m={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var g=Object.assign({},d),y=[],x="./this.program",A=(N,F)=>{throw F},b=typeof window=="object",w=typeof importScripts=="function",I=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",k=d.ENVIRONMENT_IS_PTHREAD||!1,R="";function _(N){return d.locateFile?d.locateFile(N,R):R+N}var D,E,P,C;function M(N){if(N instanceof Kd)return;ee("exiting due to exception: "+N)}var W,G,X;if(I){w?R=dm().dirname(R)+"/":R=__dirname+"/",X=()=>{G||(W=ky(),G=dm())},D=function(U,Q){return X(),U=G.normalize(U),W.readFileSync(U,Q?void 0:"utf8")},P=F=>{var U=D(F,!0);return U.buffer||(U=new Uint8Array(U)),U},E=(F,U,Q)=>{X(),F=G.normalize(F),W.readFile(F,function(xe,we){xe?Q(xe):U(we.buffer)})},process.argv.length>1&&(x=process.argv[1].replace(/\\/g,"/")),y=process.argv.slice(2),process.on("uncaughtException",function(F){if(!(F instanceof Kd))throw F}),process.on("unhandledRejection",function(F){throw F}),A=(F,U)=>{if(Ni())throw process.exitCode=F,U;M(U),process.exit(F)},d.inspect=function(){return"[Emscripten Module object]"};let N;try{N=w_()}catch(F){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),F}global.Worker=N.Worker}else(b||w)&&(w?R=self.location.href:typeof document!="undefined"&&document.currentScript&&(R=document.currentScript.src),typeof s!="undefined"&&s&&(R=s),R.indexOf("blob:")!==0?R=R.substr(0,R.replace(/[?#].*/,"").lastIndexOf("/")+1):R="",I||(D=N=>{var F=new XMLHttpRequest;return F.open("GET",N,!1),F.send(null),F.responseText},w&&(P=N=>{var F=new XMLHttpRequest;return F.open("GET",N,!1),F.responseType="arraybuffer",F.send(null),new Uint8Array(F.response)}),E=(N,F,U)=>{var Q=new XMLHttpRequest;Q.open("GET",N,!0),Q.responseType="arraybuffer",Q.onload=()=>{if(Q.status==200||Q.status==0&&Q.response){F(Q.response);return}U()},Q.onerror=U,Q.send(null)}),C=N=>document.title=N);I&&typeof performance=="undefined"&&(global.performance=k_().performance);var K=console.log.bind(console),Y=console.warn.bind(console);I&&(X(),K=N=>W.writeSync(1,N+`
`),Y=N=>W.writeSync(2,N+`
`));var se=d.print||K,ee=d.printErr||Y;Object.assign(d,g),g=null,d.arguments&&(y=d.arguments),d.thisProgram&&(x=d.thisProgram),d.quit&&(A=d.quit);var le=4;function re(N){re.shown||(re.shown={}),re.shown[N]||(re.shown[N]=1,ee(N))}function pe(N,F){if(typeof WebAssembly.Function=="function"){for(var U={i:"i32",j:"i64",f:"f32",d:"f64"},Q={parameters:[],results:F[0]=="v"?[]:[U[F[0]]]},xe=1;xe<F.length;++xe)Q.parameters.push(U[F[xe]]);return new WebAssembly.Function(Q,N)}var we=[1,0,1,96],Ne=F.slice(0,1),Le=F.slice(1),zt={i:127,j:126,f:125,d:124};we.push(Le.length);for(var xe=0;xe<Le.length;++xe)we.push(zt[Le[xe]]);Ne=="v"?we.push(0):we=we.concat([1,zt[Ne]]),we[1]=we.length-2;var kr=new Uint8Array([0,97,115,109,1,0,0,0].concat(we,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),Ir=new WebAssembly.Module(kr),Lf=new WebAssembly.Instance(Ir,{e:{f:N}}),Zd=Lf.exports.f;return Zd}var ce=[],Ae;function oe(){if(ce.length)return ce.pop();try{Vs.grow(1)}catch(N){throw N instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":N}return Vs.length-1}function Re(N,F){for(var U=N;U<N+F;U++){var Q=Tu(U);Q&&Ae.set(Q,U)}}var _e=0,Ve=N=>{_e=N},Fe=Atomics.load,ot=Atomics.store,gt=Atomics.compareExchange,pt;d.wasmBinary&&(pt=d.wasmBinary);var yt=d.noExitRuntime||!0;typeof WebAssembly!="object"&&Iu("no native wasm support detected");var Pe,Ct,kt=!1,jn;function Jt(N,F){N||Iu(F)}function vs(N){var F=d["_"+N];return F}function cn(N,F,U,Q,xe){var we={string:function(Is){var Pu=0;if(Is!=null&&Is!==0){var pv=(Is.length<<2)+1;Pu=$u(pv),oa(Is,Pu,pv)}return Pu},array:function(Is){var Pu=$u(Is.length);return ia(Is,Pu),Pu}};function Ne(Is){return F==="string"?Xn(Is):F==="boolean"?Boolean(Is):Is}var Le=vs(N),zt=[],kr=0;if(Q)for(var Ir=0;Ir<Q.length;Ir++){var Lf=we[U[Ir]];Lf?(kr===0&&(kr=s3()),zt[Ir]=Lf(Q[Ir])):zt[Ir]=Q[Ir]}var Zd=Le.apply(null,zt);function QR(Is){return kr!==0&&Ff(kr),Ne(Is)}return Zd=QR(Zd),Zd}function qn(N,F,U,Q){U=U||[];var xe=U.every(function(Ne){return Ne==="number"}),we=F!=="string";return we&&xe&&!Q?vs(N):function(){return cn(N,F,U,arguments,Q)}}var ws=1;function ks(N){var F=new TextDecoder(N);this.decode=U=>(U.buffer instanceof SharedArrayBuffer&&(U=new Uint8Array(U)),F.decode.call(F,U))}var Pn=typeof TextDecoder!="undefined"?new ks("utf8"):void 0;function Ws(N,F,U){for(var Q=F+U,xe=F;N[xe]&&!(xe>=Q);)++xe;if(xe-F>16&&N.subarray&&Pn)return Pn.decode(N.subarray(F,xe));for(var we="";F<xe;){var Ne=N[F++];if(!(Ne&128)){we+=String.fromCharCode(Ne);continue}var Le=N[F++]&63;if((Ne&224)==192){we+=String.fromCharCode((Ne&31)<<6|Le);continue}var zt=N[F++]&63;if((Ne&240)==224?Ne=(Ne&15)<<12|Le<<6|zt:Ne=(Ne&7)<<18|Le<<12|zt<<6|N[F++]&63,Ne<65536)we+=String.fromCharCode(Ne);else{var kr=Ne-65536;we+=String.fromCharCode(55296|kr>>10,56320|kr&1023)}}return we}function Xn(N,F){return N?Ws(o(),N,F):""}function aa(N,F,U,Q){if(!(Q>0))return 0;for(var xe=U,we=U+Q-1,Ne=0;Ne<N.length;++Ne){var Le=N.charCodeAt(Ne);if(Le>=55296&&Le<=57343){var zt=N.charCodeAt(++Ne);Le=65536+((Le&1023)<<10)|zt&1023}if(Le<=127){if(U>=we)break;F[U++]=Le}else if(Le<=2047){if(U+1>=we)break;F[U++]=192|Le>>6,F[U++]=128|Le&63}else if(Le<=65535){if(U+2>=we)break;F[U++]=224|Le>>12,F[U++]=128|Le>>6&63,F[U++]=128|Le&63}else{if(U+3>=we)break;F[U++]=240|Le>>18,F[U++]=128|Le>>12&63,F[U++]=128|Le>>6&63,F[U++]=128|Le&63}}return F[U]=0,U-xe}function oa(N,F,U){return aa(N,o(),F,U)}function vu(N){for(var F=0,U=0;U<N.length;++U){var Q=N.charCodeAt(U);Q>=55296&&Q<=57343&&(Q=65536+((Q&1023)<<10)|N.charCodeAt(++U)&1023),Q<=127?++F:Q<=2047?F+=2:Q<=65535?F+=3:F+=4}return F}var Ma=typeof TextDecoder!="undefined"?new ks("utf-16le"):void 0;function ia(N,F){a().set(N,F)}function zd(N,F,U){for(var Q=0;Q<N.length;++Q)a()[F++>>0]=N.charCodeAt(Q);U||(a()[F>>0]=0)}function wu(N,F){return N%F>0&&(N+=F-N%F),N}var Kn,af,of,Ld,lf,uf,j4,cf,df;k&&(Kn=d.buffer);function xr(N){Kn=N,d.HEAP8=af=new Int8Array(N),d.HEAP16=Ld=new Int16Array(N),d.HEAP32=uf=new Int32Array(N),d.HEAPU8=of=new Uint8Array(N),d.HEAPU16=lf=new Uint16Array(N),d.HEAPU32=j4=new Uint32Array(N),d.HEAPF32=cf=new Float32Array(N),d.HEAPF64=df=new Float64Array(N)}var pf=d.INITIAL_MEMORY||16777216;if(k)Pe=d.wasmMemory,Kn=d.buffer;else if(d.wasmMemory)Pe=d.wasmMemory;else if(Pe=new WebAssembly.Memory({initial:pf/65536,maximum:32768,shared:!0}),!(Pe.buffer instanceof SharedArrayBuffer))throw ee("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),I&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");Pe&&(Kn=Pe.buffer),pf=Kn.byteLength,xr(Kn);var Vs,ku=[],za=[],I1=[],hf=[],Ti=!1,S1=!1,ff=0;function Ni(){return yt||ff>0}function Zn(){if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)q4(d.preRun.shift());Af(ku)}function Bd(){Ti=!0,!k&&Af(za)}function C1(){k||(Be.terminateAllThreads(),S1=!0)}function T1(){if(!k){if(d.postRun)for(typeof d.postRun=="function"&&(d.postRun=[d.postRun]);d.postRun.length;)Wd(d.postRun.shift());Af(hf)}}function q4(N){ku.unshift(N)}function X4(N){za.unshift(N)}function Wd(N){hf.unshift(N)}var La=0,mf=null,br=null;function Vd(N){La++,d.monitorRunDependencies&&d.monitorRunDependencies(La)}function K4(N){if(La--,d.monitorRunDependencies&&d.monitorRunDependencies(La),La==0&&(mf!==null&&(clearInterval(mf),mf=null),br)){var F=br;br=null,F()}}d.preloadedImages={},d.preloadedAudios={};function Iu(N){k?postMessage({cmd:"onAbort",arg:N}):d.onAbort&&d.onAbort(N),N="Aborted("+N+")",ee(N),kt=!0,jn=1,N+=". Build with -s ASSERTIONS=1 for more info.";var F=new WebAssembly.RuntimeError(N);throw f(F),F}var N1="data:application/octet-stream;base64,";function Ud(N){return N.startsWith(N1)}function gf(N){return N.startsWith("file://")}var Yn;Yn="tfjs-backend-wasm-threaded-simd.wasm",Ud(Yn)||(Yn=_(Yn));function yf(N){try{if(N==Yn&&pt)return new Uint8Array(pt);if(P)return P(N);throw"both async and sync fetching of the wasm failed"}catch(F){Iu(F)}}function Su(){if(!pt&&(b||w)){if(typeof fetch=="function"&&!gf(Yn))return fetch(Yn,{credentials:"same-origin"}).then(function(N){if(!N.ok)throw"failed to load wasm binary file at '"+Yn+"'";return N.arrayBuffer()}).catch(function(){return yf(Yn)});if(E)return new Promise(function(N,F){E(Yn,function(U){N(new Uint8Array(U))},F)})}return Promise.resolve().then(function(){return yf(Yn)})}function E1(){var N={env:Rf,wasi_snapshot_preview1:Rf};function F(Ne,Le){var zt=Ne.exports;if(d.asm=zt,O1(d.asm.emscripten_tls_init),Vs=d.asm.__indirect_function_table,X4(d.asm.__wasm_call_ctors),Ct=Le,!k){var kr=Be.unusedWorkers.length;Be.unusedWorkers.forEach(function(Ir){Be.loadWasmModuleToWorker(Ir,function(){--kr||K4("wasm-instantiate")})})}}k||Vd("wasm-instantiate");function U(Ne){F(Ne.instance,Ne.module)}function Q(Ne){return Su().then(function(Le){return WebAssembly.instantiate(Le,N)}).then(function(Le){return Le}).then(Ne,function(Le){ee("failed to asynchronously prepare wasm: "+Le),Iu(Le)})}function xe(){return!pt&&typeof WebAssembly.instantiateStreaming=="function"&&!Ud(Yn)&&!gf(Yn)&&typeof fetch=="function"?fetch(Yn,{credentials:"same-origin"}).then(function(Ne){var Le=WebAssembly.instantiateStreaming(Ne,N);return Le.then(U,function(zt){return ee("wasm streaming compile failed: "+zt),ee("falling back to ArrayBuffer instantiation"),Q(U)})}):Q(U)}if(d.instantiateWasm)try{var we=d.instantiateWasm(N,F);return we}catch(Ne){return ee("Module.instantiateWasm callback failed with error: "+Ne),!1}return xe().catch(f),{}}var Z4,Y4,R1={};function Af(N){for(;N.length>0;){var F=N.shift();if(typeof F=="function"){F(d);continue}var U=F.func;typeof U=="number"?F.arg===void 0?Tu(U)():Tu(U)(F.arg):U(F.arg===void 0?null:F.arg)}}function Cu(N){var F=s3(),U=N();return Ff(F),U}function iR(N){return N}function J4(N){var F=/\b_Z[\w\d_]+/g;return N.replace(F,function(U){var Q=U;return U===Q?U:Q+" ["+U+"]"})}function _1(N){u()[N>>2]=0;var F=Be.pthreads[N];delete Be.pthreads[N],F.worker.terminate(),n3(N),Be.runningWorkers.splice(Be.runningWorkers.indexOf(F.worker),1),F.worker.pthread=void 0}function D1(N){var F=Be.pthreads[N];F.worker.postMessage({cmd:"cancel"})}function xf(N){var F=Be.pthreads[N];if(F){u()[N>>2]=0;var U=F.worker;Be.returnWorkerToPool(U)}}function bf(N){ZR(N)}function $1(N){if(N instanceof Kd||N=="unwind")return jn;A(1,N)}var Be={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){k?Be.initWorker():Be.initMainThread()},initMainThread:function(){for(var N=8,F=0;F<N;++F)Be.allocateUnusedWorker()},initWorker:function(){yt=!1},pthreads:{},setExitStatus:function(N){jn=N},terminateAllThreads:function(){for(var N in Be.pthreads){var F=Be.pthreads[N];F&&F.worker&&Be.returnWorkerToPool(F.worker)}for(var U=0;U<Be.unusedWorkers.length;++U){var Q=Be.unusedWorkers[U];Q.terminate()}Be.unusedWorkers=[]},returnWorkerToPool:function(N){Be.runWithoutMainThreadQueuedCalls(function(){delete Be.pthreads[N.pthread.threadInfoStruct],Be.unusedWorkers.push(N),Be.runningWorkers.splice(Be.runningWorkers.indexOf(N),1),n3(N.pthread.threadInfoStruct),N.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(N){u()[dv>>2]=0;try{N()}finally{u()[dv>>2]=1}},receiveObjectTransfer:function(N){},threadInit:function(){for(var N in Be.tlsInitFunctions)Be.tlsInitFunctions[N]()},loadWasmModuleToWorker:function(N,F){N.onmessage=U=>{var Q=U.data,xe=Q.cmd;if(N.pthread&&(Be.currentProxiedOperationCallerThread=N.pthread.threadInfoStruct),Q.targetThread&&Q.targetThread!=Pf()){var we=Be.pthreads[Q.targetThread];we?we.worker.postMessage(Q,Q.transferList):ee('Internal error! Worker sent a message "'+xe+'" to target pthread '+Q.targetThread+", but that thread no longer exists!"),Be.currentProxiedOperationCallerThread=void 0;return}xe==="processQueuedMainThreadWork"?ov():xe==="spawnThread"?wf(Q):xe==="cleanupThread"?xf(Q.thread):xe==="killThread"?_1(Q.thread):xe==="cancelThread"?D1(Q.thread):xe==="loaded"?(N.loaded=!0,F&&F(N),N.runPthread&&(N.runPthread(),delete N.runPthread)):xe==="print"?se("Thread "+Q.threadId+": "+Q.text):xe==="printErr"?ee("Thread "+Q.threadId+": "+Q.text):xe==="alert"?alert("Thread "+Q.threadId+": "+Q.text):Q.target==="setimmediate"?N.postMessage(Q):xe==="onAbort"?d.onAbort&&d.onAbort(Q.arg):ee("worker sent an unknown command "+xe),Be.currentProxiedOperationCallerThread=void 0},N.onerror=U=>{var Q="worker sent an error!";throw ee(Q+" "+U.filename+":"+U.lineno+": "+U.message),U},I&&(N.on("message",function(U){N.onmessage({data:U})}),N.on("error",function(U){N.onerror(U)}),N.on("detachedExit",function(){})),N.postMessage({cmd:"load",urlOrBlob:d.mainScriptUrlOrBlob||s,wasmMemory:Pe,wasmModule:Ct})},allocateUnusedWorker:function(){var N=_("tfjs-backend-wasm-threaded-simd.worker.js");Be.unusedWorkers.push(new Worker(N))},getNewWorker:function(){return Be.unusedWorkers.length==0&&(Be.allocateUnusedWorker(),Be.loadWasmModuleToWorker(Be.unusedWorkers[0])),Be.unusedWorkers.pop()}};function P1(){var N=Pf(),F=u()[N+44>>2],U=u()[N+48>>2],Q=F-U;cv(F,Q),Ff(F)}d.establishStackSpace=P1;function vf(N){if(k)return _i(1,0,N);try{bf(N)}catch(F){$1(F)}}var Ei=[];function Tu(N){var F=Ei[N];return F||(N>=Ei.length&&(Ei.length=N+1),Ei[N]=F=Vs.get(N)),F}function F1(N,F){return Tu(N)(F)}d.invokeEntryPoint=F1;function Q4(){var N=new Error;if(!N.stack){try{throw new Error}catch(F){N=F}if(!N.stack)return"(no stack trace available)"}return N.stack.toString()}function O1(N,F,U){Be.tlsInitFunctions.push(N)}function ev(N,F){Vs.set(N,F),Ei[N]=F}var Ri;I?Ri=()=>{var N=process.hrtime();return N[0]*1e3+N[1]/1e6}:k?Ri=()=>performance.now()-d.__performance_now_clock_drift:Ri=()=>performance.now();var M1=!0;function z1(N){return u()[av()>>2]=N,N}function L1(N,F){var U;if(N===0)U=Date.now();else if((N===1||N===4)&&M1)U=Ri();else return z1(28),-1;return u()[F>>2]=U/1e3|0,u()[F+4>>2]=U%1e3*1e3*1e3|0,0}function B1(N,F){return L1(N,F)}function W1(N){iv(N,!w,1,!b),Be.threadInit()}function V1(N){k?postMessage({cmd:"cleanupThread",thread:N}):xf(N)}function wf(N){var F=Be.getNewWorker();if(!F)return 6;Be.runningWorkers.push(F);var U=Be.pthreads[N.pthread_ptr]={worker:F,threadInfoStruct:N.pthread_ptr};F.pthread=U;var Q={cmd:"run",start_routine:N.startRoutine,arg:N.arg,threadInfoStruct:N.pthread_ptr};return F.runPthread=()=>{Q.time=performance.now(),F.postMessage(Q,N.transferList)},F.loaded&&(F.runPthread(),delete F.runPthread),0}function U1(N,F,U,Q){if(typeof SharedArrayBuffer=="undefined")return ee("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var xe=[],we=0;if(k&&(xe.length===0||we))return lv(687865856,N,F,U,Q);if(we)return we;var Ne={startRoutine:U,pthread_ptr:N,arg:Q,transferList:xe};return k?(Ne.cmd="spawnThread",postMessage(Ne,xe),0):wf(Ne)}function G1(){return 2097152}function H1(N,F){if(N==F)postMessage({cmd:"processQueuedMainThreadWork"});else if(k)postMessage({targetThread:N,cmd:"processThreadQueue"});else{var U=Be.pthreads[N],Q=U&&U.worker;if(!Q)return;Q.postMessage({cmd:"processThreadQueue"})}return 1}function j1(){Iu("")}function q1(){I||w||re("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function kf(){return 2147483648}function X1(N,F,U){o().copyWithin(N,F,F+U)}function K1(){return I?I_().cpus().length:navigator.hardwareConcurrency}function _i(N,F){var U=arguments.length-2,Q=arguments;return Cu(function(){for(var xe=U,we=$u(xe*8),Ne=we>>3,Le=0;Le<U;Le++){var zt=Q[2+Le];p()[Ne+Le]=zt}return uv(N,xe,we,F)})}var Gd=[];function Z1(N,F,U){Gd.length=F;for(var Q=U>>3,xe=0;xe<F;xe++)Gd[xe]=p()[Q+xe];var we=N<0,Ne=we?R1[-N-1]:mg[N];return Ne.apply(null,Gd)}function Y1(N){try{return Pe.grow(N-Kn.byteLength+65535>>>16),xr(Pe.buffer),1}catch(F){}}function J1(N){var F=o().length;if(N=N>>>0,N<=F)return!1;var U=kf();if(N>U)return!1;for(var Q=1;Q<=4;Q*=2){var xe=F*(1+.2/Q);xe=Math.min(xe,N+100663296);var we=Math.min(U,wu(Math.max(N,xe),65536)),Ne=Y1(we);if(Ne)return!0}return!1}var Je={inEventHandler:0,removeAllEventListeners:function(){for(var N=Je.eventHandlers.length-1;N>=0;--N)Je._removeHandler(N);Je.eventHandlers=[],Je.deferredCalls=[]},registerRemoveEventListeners:function(){Je.removeEventListenersRegistered||(I1.push(Je.removeAllEventListeners),Je.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(N,F,U){function Q(Ne,Le){if(Ne.length!=Le.length)return!1;for(var zt in Ne)if(Ne[zt]!=Le[zt])return!1;return!0}for(var xe in Je.deferredCalls){var we=Je.deferredCalls[xe];if(we.targetFunction==N&&Q(we.argsList,U))return}Je.deferredCalls.push({targetFunction:N,precedence:F,argsList:U}),Je.deferredCalls.sort(function(Ne,Le){return Ne.precedence<Le.precedence})},removeDeferredCalls:function(N){for(var F=0;F<Je.deferredCalls.length;++F)Je.deferredCalls[F].targetFunction==N&&(Je.deferredCalls.splice(F,1),--F)},canPerformEventHandlerRequests:function(){return Je.inEventHandler&&Je.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Je.canPerformEventHandlerRequests())for(var N=0;N<Je.deferredCalls.length;++N){var F=Je.deferredCalls[N];Je.deferredCalls.splice(N,1),--N,F.targetFunction.apply(null,F.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(N,F){for(var U=0;U<Je.eventHandlers.length;++U)Je.eventHandlers[U].target==N&&(!F||F==Je.eventHandlers[U].eventTypeString)&&Je._removeHandler(U--)},_removeHandler:function(N){var F=Je.eventHandlers[N];F.target.removeEventListener(F.eventTypeString,F.eventListenerFunc,F.useCapture),Je.eventHandlers.splice(N,1)},registerOrRemoveHandler:function(N){var F=function(xe){++Je.inEventHandler,Je.currentEventHandler=N,Je.runDeferredCalls(),N.handlerFunc(xe),Je.runDeferredCalls(),--Je.inEventHandler};if(N.callbackfunc)N.eventListenerFunc=F,N.target.addEventListener(N.eventTypeString,F,N.useCapture),Je.eventHandlers.push(N),Je.registerRemoveEventListeners();else for(var U=0;U<Je.eventHandlers.length;++U)Je.eventHandlers[U].target==N.target&&Je.eventHandlers[U].eventTypeString==N.eventTypeString&&Je._removeHandler(U--)},queueEventHandlerOnThread_iiii:function(N,F,U,Q,xe){Cu(function(){var we=$u(12);u()[we>>2]=U,u()[we+4>>2]=Q,u()[we+8>>2]=xe,t3(N,637534208,F,Q,we)})},getTargetThreadForEventCallback:function(N){switch(N){case 1:return 0;case 2:return Be.currentProxiedOperationCallerThread;default:return N}},getNodeNameForTarget:function(N){return N?N==window?"#window":N==screen?"#screen":N&&N.nodeName?N.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Q1(N){var F=vu(N)+1,U=e3(F);return oa(N,U,F),U}function eg(N,F,U,Q){Cu(function(){var xe=$u(12),we=0;F&&(we=Q1(F)),u()[xe>>2]=we,u()[xe+4>>2]=U,u()[xe+8>>2]=Q,t3(N,657457152,0,we,xe)})}function tg(N,F,U,Q){F=F?Xn(F):"",eg(N,F,U,Q)}function ng(N){return N>2?Xn(N):N}var sg=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function rg(N){N=ng(N);var F=sg[N]||(typeof document!="undefined"?document.querySelector(N):void 0);return F}function Hd(N){return rg(N)}function If(N,F,U){var Q=Hd(N);if(!Q)return-4;if(Q.canvasSharedPtr&&(u()[Q.canvasSharedPtr>>2]=F,u()[Q.canvasSharedPtr+4>>2]=U),Q.offscreenCanvas||!Q.controlTransferredOffscreen){Q.offscreenCanvas&&(Q=Q.offscreenCanvas);var xe=!1;if(Q.GLctxObject&&Q.GLctxObject.GLctx){var we=Q.GLctxObject.GLctx.getParameter(2978);xe=we[0]===0&&we[1]===0&&we[2]===Q.width&&we[3]===Q.height}Q.width=F,Q.height=U,xe&&Q.GLctxObject.GLctx.viewport(0,0,F,U)}else if(Q.canvasSharedPtr){var Ne=u()[Q.canvasSharedPtr+8>>2];return tg(Ne,N,F,U),1}else return-4;return 0}function Sf(N,F,U){return k?_i(2,1,N,F,U):If(N,F,U)}function ag(N,F,U){var Q=Hd(N);return Q?If(N,F,U):Sf(N,F,U)}function og(){throw"unwind"}function ig(N){var F=N.getExtension("ANGLE_instanced_arrays");if(F)return N.vertexAttribDivisor=function(U,Q){F.vertexAttribDivisorANGLE(U,Q)},N.drawArraysInstanced=function(U,Q,xe,we){F.drawArraysInstancedANGLE(U,Q,xe,we)},N.drawElementsInstanced=function(U,Q,xe,we,Ne){F.drawElementsInstancedANGLE(U,Q,xe,we,Ne)},1}function lg(N){var F=N.getExtension("OES_vertex_array_object");if(F)return N.createVertexArray=function(){return F.createVertexArrayOES()},N.deleteVertexArray=function(U){F.deleteVertexArrayOES(U)},N.bindVertexArray=function(U){F.bindVertexArrayOES(U)},N.isVertexArray=function(U){return F.isVertexArrayOES(U)},1}function ug(N){var F=N.getExtension("WEBGL_draw_buffers");if(F)return N.drawBuffers=function(U,Q){F.drawBuffersWEBGL(U,Q)},1}function cg(N){return!!(N.multiDrawWebgl=N.getExtension("WEBGL_multi_draw"))}var Mt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(F){Mt.lastError||(Mt.lastError=F)},getNewId:function(N){for(var F=Mt.counter++,U=N.length;U<F;U++)N[U]=null;return F},getSource:function(N,F,U,Q){for(var xe="",we=0;we<F;++we){var Ne=Q?u()[Q+we*4>>2]:-1;xe+=Xn(u()[U+we*4>>2],Ne<0?void 0:Ne)}return xe},createContext:function(N,F){N.getContextSafariWebGL2Fixed||(N.getContextSafariWebGL2Fixed=N.getContext,N.getContext=function(xe,we){var Ne=N.getContextSafariWebGL2Fixed(xe,we);return xe=="webgl"==Ne instanceof WebGLRenderingContext?Ne:null});var U=N.getContext("webgl",F);if(!U)return 0;var Q=Mt.registerContext(U,F);return Q},registerContext:function(N,F){var U=e3(8);u()[U+4>>2]=Pf();var Q={handle:U,attributes:F,version:F.majorVersion,GLctx:N};return N.canvas&&(N.canvas.GLctxObject=Q),Mt.contexts[U]=Q,(typeof F.enableExtensionsByDefault=="undefined"||F.enableExtensionsByDefault)&&Mt.initExtensions(Q),U},makeContextCurrent:function(N){return Mt.currentContext=Mt.contexts[N],d.ctx=Ef=Mt.currentContext&&Mt.currentContext.GLctx,!(N&&!Ef)},getContext:function(N){return Mt.contexts[N]},deleteContext:function(N){Mt.currentContext===Mt.contexts[N]&&(Mt.currentContext=null),typeof Je=="object"&&Je.removeAllHandlersOnTarget(Mt.contexts[N].GLctx.canvas),Mt.contexts[N]&&Mt.contexts[N].GLctx.canvas&&(Mt.contexts[N].GLctx.canvas.GLctxObject=void 0),rv(Mt.contexts[N].handle),Mt.contexts[N]=null},initExtensions:function(N){if(N||(N=Mt.currentContext),!N.initExtensionsDone){N.initExtensionsDone=!0;var F=N.GLctx;ig(F),lg(F),ug(F),F.disjointTimerQueryExt=F.getExtension("EXT_disjoint_timer_query"),cg(F);var U=F.getSupportedExtensions()||[];U.forEach(function(Q){!Q.includes("lose_context")&&!Q.includes("debug")&&F.getExtension(Q)})}}},dg=["default","low-power","high-performance"];function pg(N,F){var U=F>>2,Q=u()[U+6],xe={alpha:!!u()[U+0],depth:!!u()[U+1],stencil:!!u()[U+2],antialias:!!u()[U+3],premultipliedAlpha:!!u()[U+4],preserveDrawingBuffer:!!u()[U+5],powerPreference:dg[Q],failIfMajorPerformanceCaveat:!!u()[U+7],majorVersion:u()[U+8],minorVersion:u()[U+9],enableExtensionsByDefault:u()[U+10],explicitSwapControl:u()[U+11],proxyContextToMainThread:u()[U+12],renderViaOffscreenBackBuffer:u()[U+13]},we=Hd(N);if(!we||xe.explicitSwapControl)return 0;var Ne=Mt.createContext(we,xe);return Ne}function hg(N,F){return pg(N,F)}var Nu={mappings:{},buffers:[null,[],[]],printChar:function(N,F){var U=Nu.buffers[N];F===0||F===10?((N===1?se:ee)(Ws(U,0)),U.length=0):U.push(F)},varargs:void 0,get:function(){Nu.varargs+=4;var N=u()[Nu.varargs-4>>2];return N},getStr:function(N){var F=Xn(N);return F},get64:function(N,F){return N}};function Cf(N){return k?_i(3,1,N):0}function Tf(N,F,U,Q,xe){if(k)return _i(4,1,N,F,U,Q,xe)}function Nf(N,F,U,Q){if(k)return _i(5,1,N,F,U,Q);for(var xe=0,we=0;we<U;we++){var Ne=u()[F>>2],Le=u()[F+4>>2];F+=8;for(var zt=0;zt<Le;zt++)Nu.printChar(N,o()[Ne+zt]);xe+=Le}return u()[Q>>2]=xe,0}function fg(N){Ve(N)}Be.init();var Ef,mg=[null,vf,Sf,Cf,Tf,Nf],tv=!1,Rf={__clock_gettime:B1,__emscripten_init_main_thread_js:W1,__emscripten_thread_cleanup:V1,__pthread_create_js:U1,_emscripten_default_pthread_stack_size:G1,_emscripten_notify_thread_queue:H1,abort:j1,emscripten_check_blocking_allowed:q1,emscripten_get_heap_max:kf,emscripten_get_now:Ri,emscripten_memcpy_big:X1,emscripten_num_logical_cores:K1,emscripten_receive_on_main_thread_js:Z1,emscripten_resize_heap:J1,emscripten_set_canvas_element_size:ag,emscripten_unwind_to_js_event_loop:og,emscripten_webgl_create_context:hg,exit:bf,fd_close:Cf,fd_seek:Tf,fd_write:Nf,memory:Pe||d.wasmMemory,setTempRet0:fg},nv=E1(),gg=d.___wasm_call_ctors=function(){return(gg=d.___wasm_call_ctors=d.asm.__wasm_call_ctors).apply(null,arguments)},yg=d._init=function(){return(yg=d._init=d.asm.init).apply(null,arguments)},Ag=d._init_with_threads_count=function(){return(Ag=d._init_with_threads_count=d.asm.init_with_threads_count).apply(null,arguments)},xg=d._get_threads_count=function(){return(xg=d._get_threads_count=d.asm.get_threads_count).apply(null,arguments)},bg=d._register_tensor=function(){return(bg=d._register_tensor=d.asm.register_tensor).apply(null,arguments)},vg=d._dispose_data=function(){return(vg=d._dispose_data=d.asm.dispose_data).apply(null,arguments)},wg=d._dispose=function(){return(wg=d._dispose=d.asm.dispose).apply(null,arguments)},kg=d._Abs=function(){return(kg=d._Abs=d.asm.Abs).apply(null,arguments)},Ig=d._Add=function(){return(Ig=d._Add=d.asm.Add).apply(null,arguments)},Sg=d._AddN=function(){return(Sg=d._AddN=d.asm.AddN).apply(null,arguments)},Cg=d._All=function(){return(Cg=d._All=d.asm.All).apply(null,arguments)},Tg=d._Any=function(){return(Tg=d._Any=d.asm.Any).apply(null,arguments)},Ng=d._ArgMax=function(){return(Ng=d._ArgMax=d.asm.ArgMax).apply(null,arguments)},Eg=d._AvgPool=function(){return(Eg=d._AvgPool=d.asm.AvgPool).apply(null,arguments)},Rg=d._BatchMatMul=function(){return(Rg=d._BatchMatMul=d.asm.BatchMatMul).apply(null,arguments)},_g=d._Ceil=function(){return(_g=d._Ceil=d.asm.Ceil).apply(null,arguments)},Dg=d._ClipByValue=function(){return(Dg=d._ClipByValue=d.asm.ClipByValue).apply(null,arguments)},$g=d._Conv2D=function(){return($g=d._Conv2D=d.asm.Conv2D).apply(null,arguments)},Pg=d._Conv2DBackpropInput=function(){return(Pg=d._Conv2DBackpropInput=d.asm.Conv2DBackpropInput).apply(null,arguments)},Fg=d._Cos=function(){return(Fg=d._Cos=d.asm.Cos).apply(null,arguments)},Og=d._Cosh=function(){return(Og=d._Cosh=d.asm.Cosh).apply(null,arguments)},Mg=d._CropAndResize=function(){return(Mg=d._CropAndResize=d.asm.CropAndResize).apply(null,arguments)},zg=d._Cumprod=function(){return(zg=d._Cumprod=d.asm.Cumprod).apply(null,arguments)},Lg=d._Cumsum=function(){return(Lg=d._Cumsum=d.asm.Cumsum).apply(null,arguments)},Bg=d._DepthToSpace=function(){return(Bg=d._DepthToSpace=d.asm.DepthToSpace).apply(null,arguments)},Wg=d._DepthwiseConv2dNative=function(){return(Wg=d._DepthwiseConv2dNative=d.asm.DepthwiseConv2dNative).apply(null,arguments)},Vg=d._Elu=function(){return(Vg=d._Elu=d.asm.Elu).apply(null,arguments)},Ug=d._Equal=function(){return(Ug=d._Equal=d.asm.Equal).apply(null,arguments)},Gg=d._Exp=function(){return(Gg=d._Exp=d.asm.Exp).apply(null,arguments)},Hg=d._FlipLeftRight=function(){return(Hg=d._FlipLeftRight=d.asm.FlipLeftRight).apply(null,arguments)},jg=d._Floor=function(){return(jg=d._Floor=d.asm.Floor).apply(null,arguments)},qg=d._FloorDiv=function(){return(qg=d._FloorDiv=d.asm.FloorDiv).apply(null,arguments)},Xg=d._FusedBatchNorm=function(){return(Xg=d._FusedBatchNorm=d.asm.FusedBatchNorm).apply(null,arguments)},Kg=d._FusedConv2D=function(){return(Kg=d._FusedConv2D=d.asm.FusedConv2D).apply(null,arguments)},_f=d._FusedDepthwiseConv2D=function(){return(_f=d._FusedDepthwiseConv2D=d.asm.FusedDepthwiseConv2D).apply(null,arguments)},Df=d._Gather=function(){return(Df=d._Gather=d.asm.Gather).apply(null,arguments)},jd=d._GatherNd=function(){return(jd=d._GatherNd=d.asm.GatherNd).apply(null,arguments)},Zg=d._Greater=function(){return(Zg=d._Greater=d.asm.Greater).apply(null,arguments)},Yg=d._GreaterEqual=function(){return(Yg=d._GreaterEqual=d.asm.GreaterEqual).apply(null,arguments)},Eu=d._LeakyRelu=function(){return(Eu=d._LeakyRelu=d.asm.LeakyRelu).apply(null,arguments)},qd=d._Less=function(){return(qd=d._Less=d.asm.Less).apply(null,arguments)},Xd=d._LessEqual=function(){return(Xd=d._LessEqual=d.asm.LessEqual).apply(null,arguments)},sv=d._Log=function(){return(sv=d._Log=d.asm.Log).apply(null,arguments)},Ru=d._LogicalAnd=function(){return(Ru=d._LogicalAnd=d.asm.LogicalAnd).apply(null,arguments)},_u=d._LogicalNot=function(){return(_u=d._LogicalNot=d.asm.LogicalNot).apply(null,arguments)},Jg=d._LogicalOr=function(){return(Jg=d._LogicalOr=d.asm.LogicalOr).apply(null,arguments)},q=d._LogicalXor=function(){return(q=d._LogicalXor=d.asm.LogicalXor).apply(null,arguments)},te=d._Max=function(){return(te=d._Max=d.asm.Max).apply(null,arguments)},be=d._MaxPool=function(){return(be=d._MaxPool=d.asm.MaxPool).apply(null,arguments)},De=d._Maximum=function(){return(De=d._Maximum=d.asm.Maximum).apply(null,arguments)},ht=d._Mean=function(){return(ht=d._Mean=d.asm.Mean).apply(null,arguments)},mt=d._Min=function(){return(mt=d._Min=d.asm.Min).apply(null,arguments)},tt=d._Minimum=function(){return(tt=d._Minimum=d.asm.Minimum).apply(null,arguments)},Ke=d._MirrorPad=function(){return(Ke=d._MirrorPad=d.asm.MirrorPad).apply(null,arguments)},Qt=d._Multiply=function(){return(Qt=d._Multiply=d.asm.Multiply).apply(null,arguments)},vr=d._Neg=function(){return(vr=d._Neg=d.asm.Neg).apply(null,arguments)},wr=d._NonMaxSuppressionV3=function(){return(wr=d._NonMaxSuppressionV3=d.asm.NonMaxSuppressionV3).apply(null,arguments)},Du=d._NonMaxSuppressionV4=function(){return(Du=d._NonMaxSuppressionV4=d.asm.NonMaxSuppressionV4).apply(null,arguments)},Di=d._NonMaxSuppressionV5=function(){return(Di=d._NonMaxSuppressionV5=d.asm.NonMaxSuppressionV5).apply(null,arguments)},Qg=d._NotEqual=function(){return(Qg=d._NotEqual=d.asm.NotEqual).apply(null,arguments)},Jn=d._OneHot=function(){return(Jn=d._OneHot=d.asm.OneHot).apply(null,arguments)},Ba=d._PadV2=function(){return(Ba=d._PadV2=d.asm.PadV2).apply(null,arguments)},$f=d._Pow=function(){return($f=d._Pow=d.asm.Pow).apply(null,arguments)},lR=d._Prelu=function(){return(lR=d._Prelu=d.asm.Prelu).apply(null,arguments)},uR=d._Prod=function(){return(uR=d._Prod=d.asm.Prod).apply(null,arguments)},cR=d._RealDiv=function(){return(cR=d._RealDiv=d.asm.RealDiv).apply(null,arguments)},dR=d._Relu=function(){return(dR=d._Relu=d.asm.Relu).apply(null,arguments)},pR=d._Relu6=function(){return(pR=d._Relu6=d.asm.Relu6).apply(null,arguments)},hR=d._ResizeBilinear=function(){return(hR=d._ResizeBilinear=d.asm.ResizeBilinear).apply(null,arguments)},fR=d._ResizeNearestNeighbor=function(){return(fR=d._ResizeNearestNeighbor=d.asm.ResizeNearestNeighbor).apply(null,arguments)},mR=d._Reverse=function(){return(mR=d._Reverse=d.asm.Reverse).apply(null,arguments)},gR=d._RotateWithOffset=function(){return(gR=d._RotateWithOffset=d.asm.RotateWithOffset).apply(null,arguments)},yR=d._Round=function(){return(yR=d._Round=d.asm.Round).apply(null,arguments)},AR=d._Rsqrt=function(){return(AR=d._Rsqrt=d.asm.Rsqrt).apply(null,arguments)},xR=d._ScatterNd=function(){return(xR=d._ScatterNd=d.asm.ScatterNd).apply(null,arguments)},bR=d._SelectV2=function(){return(bR=d._SelectV2=d.asm.SelectV2).apply(null,arguments)},vR=d._Sigmoid=function(){return(vR=d._Sigmoid=d.asm.Sigmoid).apply(null,arguments)},wR=d._Sin=function(){return(wR=d._Sin=d.asm.Sin).apply(null,arguments)},kR=d._Softmax=function(){return(kR=d._Softmax=d.asm.Softmax).apply(null,arguments)},IR=d._SparseFillEmptyRows=function(){return(IR=d._SparseFillEmptyRows=d.asm.SparseFillEmptyRows).apply(null,arguments)},SR=d._SparseReshape=function(){return(SR=d._SparseReshape=d.asm.SparseReshape).apply(null,arguments)},CR=d._SparseSegmentReduction=function(){return(CR=d._SparseSegmentReduction=d.asm.SparseSegmentReduction).apply(null,arguments)},TR=d._Sqrt=function(){return(TR=d._Sqrt=d.asm.Sqrt).apply(null,arguments)},NR=d._Square=function(){return(NR=d._Square=d.asm.Square).apply(null,arguments)},ER=d._SquaredDifference=function(){return(ER=d._SquaredDifference=d.asm.SquaredDifference).apply(null,arguments)},RR=d._Step=function(){return(RR=d._Step=d.asm.Step).apply(null,arguments)},_R=d._StridedSlice=function(){return(_R=d._StridedSlice=d.asm.StridedSlice).apply(null,arguments)},DR=d._Sub=function(){return(DR=d._Sub=d.asm.Sub).apply(null,arguments)},$R=d._Sum=function(){return($R=d._Sum=d.asm.Sum).apply(null,arguments)},PR=d._Tan=function(){return(PR=d._Tan=d.asm.Tan).apply(null,arguments)},FR=d._Tanh=function(){return(FR=d._Tanh=d.asm.Tanh).apply(null,arguments)},OR=d._Tile=function(){return(OR=d._Tile=d.asm.Tile).apply(null,arguments)},MR=d._TopK=function(){return(MR=d._TopK=d.asm.TopK).apply(null,arguments)},zR=d._Transform=function(){return(zR=d._Transform=d.asm.Transform).apply(null,arguments)},LR=d._Transpose=function(){return(LR=d._Transpose=d.asm.Transpose).apply(null,arguments)},BR=d.__FusedMatMul=function(){return(BR=d.__FusedMatMul=d.asm._FusedMatMul).apply(null,arguments)},e3=d._malloc=function(){return(e3=d._malloc=d.asm.malloc).apply(null,arguments)},rv=d._free=function(){return(rv=d._free=d.asm.free).apply(null,arguments)},WR=d._emscripten_tls_init=function(){return(WR=d._emscripten_tls_init=d.asm.emscripten_tls_init).apply(null,arguments)},av=d.___errno_location=function(){return(av=d.___errno_location=d.asm.__errno_location).apply(null,arguments)},Pf=d._pthread_self=function(){return(Pf=d._pthread_self=d.asm.pthread_self).apply(null,arguments)},ov=d._emscripten_main_thread_process_queued_calls=function(){return(ov=d._emscripten_main_thread_process_queued_calls=d.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},VR=d.__emscripten_thread_crashed=function(){return(VR=d.__emscripten_thread_crashed=d.asm._emscripten_thread_crashed).apply(null,arguments)},iv=d.__emscripten_thread_init=function(){return(iv=d.__emscripten_thread_init=d.asm._emscripten_thread_init).apply(null,arguments)},UR=d._emscripten_current_thread_process_queued_calls=function(){return(UR=d._emscripten_current_thread_process_queued_calls=d.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},GR=d._emscripten_main_browser_thread_id=function(){return(GR=d._emscripten_main_browser_thread_id=d.asm.emscripten_main_browser_thread_id).apply(null,arguments)},HR=d._emscripten_sync_run_in_main_thread_2=function(){return(HR=d._emscripten_sync_run_in_main_thread_2=d.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},lv=d._emscripten_sync_run_in_main_thread_4=function(){return(lv=d._emscripten_sync_run_in_main_thread_4=d.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)},uv=d._emscripten_run_in_main_runtime_thread_js=function(){return(uv=d._emscripten_run_in_main_runtime_thread_js=d.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},t3=d._emscripten_dispatch_to_thread_=function(){return(t3=d._emscripten_dispatch_to_thread_=d.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},n3=d.__emscripten_thread_free_data=function(){return(n3=d.__emscripten_thread_free_data=d.asm._emscripten_thread_free_data).apply(null,arguments)},jR=d.__emscripten_thread_exit=function(){return(jR=d.__emscripten_thread_exit=d.asm._emscripten_thread_exit).apply(null,arguments)},qR=d._memalign=function(){return(qR=d._memalign=d.asm.memalign).apply(null,arguments)},cv=d._emscripten_stack_set_limits=function(){return(cv=d._emscripten_stack_set_limits=d.asm.emscripten_stack_set_limits).apply(null,arguments)},s3=d.stackSave=function(){return(s3=d.stackSave=d.asm.stackSave).apply(null,arguments)},Ff=d.stackRestore=function(){return(Ff=d.stackRestore=d.asm.stackRestore).apply(null,arguments)},$u=d.stackAlloc=function(){return($u=d.stackAlloc=d.asm.stackAlloc).apply(null,arguments)},XR=d.dynCall_iijjiiii=function(){return(XR=d.dynCall_iijjiiii=d.asm.dynCall_iijjiiii).apply(null,arguments)},KR=d.dynCall_jiji=function(){return(KR=d.dynCall_jiji=d.asm.dynCall_jiji).apply(null,arguments)},dv=d.__emscripten_allow_main_runtime_queued_calls=21672;d.cwrap=qn,d.keepRuntimeAlive=Ni,d.PThread=Be,d.PThread=Be,d.wasmMemory=Pe,d.ExitStatus=Kd;var Of;function Kd(N){this.name="ExitStatus",this.message="Program terminated with exit("+N+")",this.status=N}br=function N(){Of||r3(),Of||(br=N)};function r3(N){if(N=N||y,La>0)return;if(k){h(d),Bd(),postMessage({cmd:"loaded"});return}if(Zn(),La>0)return;function F(){Of||(Of=!0,d.calledRun=!0,!kt&&(Bd(),h(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),T1()))}d.setStatus?(d.setStatus("Running..."),setTimeout(function(){setTimeout(function(){d.setStatus("")},1),F()},1)):F()}d.run=r3;function ZR(N,F){if(jn=N,!F&&k)throw vf(N),"unwind";Ni()||C1(),YR(N)}function YR(N){jn=N,Ni()||(Be.terminateAllThreads(),d.onExit&&d.onExit(N),kt=!0),A(N,new Kd(N))}if(d.preInit)for(typeof d.preInit=="function"&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();r3();var Mf;m&&(Mf={uncaughtException:process.listeners("uncaughtException").filter(function(N){return!m.uncaughtException.indexOf(N)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(N){return!m.unhandledRejection.indexOf(N)>-1})});var zf;if(typeof WasmBackendModule!="undefined")zf=WasmBackendModule;else if(typeof r!="undefined")zf=r;else throw new Error("Could not find wasm module in post.js");if(Mf){var JR=zf._dispose;zf._dispose=function(){JR(),Mf.uncaughtException.forEach(function(N){process.removeListener("uncaughtException",N)}),Mf.unhandledRejection.forEach(function(N){process.removeListener("unhandledRejection",N)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),C_=on({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.19.0_hek32lflchivueqv5i4vgonghu/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.worker.js"(e,t){t.exports.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});`}}),T_=on({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.19.0_hek32lflchivueqv5i4vgonghu/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=(()=>{var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};var a=typeof r!="undefined"?r:{},o,i;a.ready=new Promise(function(q,te){o=q,i=te});var l;typeof process!="undefined"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var u=Object.assign({},a),c=[],p="./this.program",d=(q,te)=>{throw te},h=typeof window=="object",f=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g="";function y(q){return a.locateFile?a.locateFile(q,g):g+q}var x,A,b,w;function I(q){if(q instanceof qd)return;E("exiting due to exception: "+q)}var k,R,_;m?(f?g=dm().dirname(g)+"/":g=__dirname+"/",_=()=>{R||(k=ky(),R=dm())},x=function(te,be){return _(),te=R.normalize(te),k.readFileSync(te,be?void 0:"utf8")},b=q=>{var te=x(q,!0);return te.buffer||(te=new Uint8Array(te)),te},A=(q,te,be)=>{_(),q=R.normalize(q),k.readFile(q,function(De,ht){De?be(De):te(ht.buffer)})},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),c=process.argv.slice(2),process.on("uncaughtException",function(q){if(!(q instanceof qd))throw q}),process.on("unhandledRejection",function(q){throw q}),d=(q,te)=>{if(Ld())throw process.exitCode=q,te;I(te),process.exit(q)},a.inspect=function(){return"[Emscripten Module object]"}):(h||f)&&(f?g=self.location.href:typeof document!="undefined"&&document.currentScript&&(g=document.currentScript.src),s&&(g=s),g.indexOf("blob:")!==0?g=g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):g="",x=q=>{var te=new XMLHttpRequest;return te.open("GET",q,!1),te.send(null),te.responseText},f&&(b=q=>{var te=new XMLHttpRequest;return te.open("GET",q,!1),te.responseType="arraybuffer",te.send(null),new Uint8Array(te.response)}),A=(q,te,be)=>{var De=new XMLHttpRequest;De.open("GET",q,!0),De.responseType="arraybuffer",De.onload=()=>{if(De.status==200||De.status==0&&De.response){te(De.response);return}be()},De.onerror=be,De.send(null)},w=q=>document.title=q);var D=a.print||console.log.bind(console),E=a.printErr||console.warn.bind(console);Object.assign(a,u),u=null,a.arguments&&(c=a.arguments),a.thisProgram&&(p=a.thisProgram),a.quit&&(d=a.quit);var P=4;function C(q){C.shown||(C.shown={}),C.shown[q]||(C.shown[q]=1,E(q))}function M(q,te){if(typeof WebAssembly.Function=="function"){for(var be={i:"i32",j:"i64",f:"f32",d:"f64"},De={parameters:[],results:te[0]=="v"?[]:[be[te[0]]]},ht=1;ht<te.length;++ht)De.parameters.push(be[te[ht]]);return new WebAssembly.Function(De,q)}var mt=[1,0,1,96],tt=te.slice(0,1),Ke=te.slice(1),Qt={i:127,j:126,f:125,d:124};mt.push(Ke.length);for(var ht=0;ht<Ke.length;++ht)mt.push(Qt[Ke[ht]]);tt=="v"?mt.push(0):mt=mt.concat([1,Qt[tt]]),mt[1]=mt.length-2;var vr=new Uint8Array([0,97,115,109,1,0,0,0].concat(mt,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),wr=new WebAssembly.Module(vr),Du=new WebAssembly.Instance(wr,{e:{f:q}}),Di=Du.exports.f;return Di}var W=[],G;function X(){if(W.length)return W.pop();try{Ma.grow(1)}catch(q){throw q instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":q}return Ma.length-1}function K(q,te){for(var be=q;be<q+te;be++){var De=Vd(be);De&&G.set(De,be)}}var Y=0,se=q=>{Y=q},ee;a.wasmBinary&&(ee=a.wasmBinary);var le=a.noExitRuntime||!0;typeof WebAssembly!="object"&&Ti("no native wasm support detected");var re,pe=!1,ce;function Ae(q,te){q||Ti(te)}function oe(q){var te=a["_"+q];return te}function Re(q,te,be,De,ht){var mt={string:function(Jn){var Ba=0;if(Jn!=null&&Jn!==0){var $f=(Jn.length<<2)+1;Ba=jd($f),yt(Jn,Ba,$f)}return Ba},array:function(Jn){var Ba=jd(Jn.length);return kt(Jn,Ba),Ba}};function tt(Jn){return te==="string"?gt(Jn):te==="boolean"?Boolean(Jn):Jn}var Ke=oe(q),Qt=[],vr=0;if(De)for(var wr=0;wr<De.length;wr++){var Du=mt[be[wr]];Du?(vr===0&&(vr=_f()),Qt[wr]=Du(De[wr])):Qt[wr]=De[wr]}var Di=Ke.apply(null,Qt);function Qg(Jn){return vr!==0&&Df(vr),tt(Jn)}return Di=Qg(Di),Di}function _e(q,te,be,De){be=be||[];var ht=be.every(function(tt){return tt==="number"}),mt=te!=="string";return mt&&ht&&!De?oe(q):function(){return Re(q,te,be,arguments,De)}}var Ve=1,Fe=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function ot(q,te,be){for(var De=te+be,ht=te;q[ht]&&!(ht>=De);)++ht;if(ht-te>16&&q.subarray&&Fe)return Fe.decode(q.subarray(te,ht));for(var mt="";te<ht;){var tt=q[te++];if(!(tt&128)){mt+=String.fromCharCode(tt);continue}var Ke=q[te++]&63;if((tt&224)==192){mt+=String.fromCharCode((tt&31)<<6|Ke);continue}var Qt=q[te++]&63;if((tt&240)==224?tt=(tt&15)<<12|Ke<<6|Qt:tt=(tt&7)<<18|Ke<<12|Qt<<6|q[te++]&63,tt<65536)mt+=String.fromCharCode(tt);else{var vr=tt-65536;mt+=String.fromCharCode(55296|vr>>10,56320|vr&1023)}}return mt}function gt(q,te){return q?ot(qn,q,te):""}function pt(q,te,be,De){if(!(De>0))return 0;for(var ht=be,mt=be+De-1,tt=0;tt<q.length;++tt){var Ke=q.charCodeAt(tt);if(Ke>=55296&&Ke<=57343){var Qt=q.charCodeAt(++tt);Ke=65536+((Ke&1023)<<10)|Qt&1023}if(Ke<=127){if(be>=mt)break;te[be++]=Ke}else if(Ke<=2047){if(be+1>=mt)break;te[be++]=192|Ke>>6,te[be++]=128|Ke&63}else if(Ke<=65535){if(be+2>=mt)break;te[be++]=224|Ke>>12,te[be++]=128|Ke>>6&63,te[be++]=128|Ke&63}else{if(be+3>=mt)break;te[be++]=240|Ke>>18,te[be++]=128|Ke>>12&63,te[be++]=128|Ke>>6&63,te[be++]=128|Ke&63}}return te[be]=0,be-ht}function yt(q,te,be){return pt(q,qn,te,be)}function Pe(q){for(var te=0,be=0;be<q.length;++be){var De=q.charCodeAt(be);De>=55296&&De<=57343&&(De=65536+((De&1023)<<10)|q.charCodeAt(++be)&1023),De<=127?++te:De<=2047?te+=2:De<=65535?te+=3:te+=4}return te}var Ct=typeof TextDecoder!="undefined"?new TextDecoder("utf-16le"):void 0;function kt(q,te){cn.set(q,te)}function jn(q,te,be){for(var De=0;De<q.length;++De)cn[te++>>0]=q.charCodeAt(De);be||(cn[te>>0]=0)}function Jt(q,te){return q%te>0&&(q+=te-q%te),q}var vs,cn,qn,ws,ks,Pn,Ws,Xn,aa;function oa(q){vs=q,a.HEAP8=cn=new Int8Array(q),a.HEAP16=ws=new Int16Array(q),a.HEAP32=Pn=new Int32Array(q),a.HEAPU8=qn=new Uint8Array(q),a.HEAPU16=ks=new Uint16Array(q),a.HEAPU32=Ws=new Uint32Array(q),a.HEAPF32=Xn=new Float32Array(q),a.HEAPF64=aa=new Float64Array(q)}var vu=a.INITIAL_MEMORY||16777216,Ma,ia=[],zd=[],wu=[],Kn=!1,af=!1,of=0;function Ld(){return le||of>0}function lf(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)df(a.preRun.shift());Wd(ia)}function uf(){Kn=!0,Wd(zd)}function j4(){af=!0}function cf(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)pf(a.postRun.shift());Wd(wu)}function df(q){ia.unshift(q)}function xr(q){zd.unshift(q)}function pf(q){wu.unshift(q)}var Vs=0,ku=null,za=null;function I1(q){Vs++,a.monitorRunDependencies&&a.monitorRunDependencies(Vs)}function hf(q){if(Vs--,a.monitorRunDependencies&&a.monitorRunDependencies(Vs),Vs==0&&(ku!==null&&(clearInterval(ku),ku=null),za)){var te=za;za=null,te()}}a.preloadedImages={},a.preloadedAudios={};function Ti(q){a.onAbort&&a.onAbort(q),q="Aborted("+q+")",E(q),pe=!0,ce=1,q+=". Build with -s ASSERTIONS=1 for more info.";var te=new WebAssembly.RuntimeError(q);throw i(te),te}var S1="data:application/octet-stream;base64,";function ff(q){return q.startsWith(S1)}function Ni(q){return q.startsWith("file://")}var Zn;Zn="tfjs-backend-wasm.wasm",ff(Zn)||(Zn=y(Zn));function Bd(q){try{if(q==Zn&&ee)return new Uint8Array(ee);if(b)return b(q);throw"both async and sync fetching of the wasm failed"}catch(te){Ti(te)}}function C1(){if(!ee&&(h||f)){if(typeof fetch=="function"&&!Ni(Zn))return fetch(Zn,{credentials:"same-origin"}).then(function(q){if(!q.ok)throw"failed to load wasm binary file at '"+Zn+"'";return q.arrayBuffer()}).catch(function(){return Bd(Zn)});if(A)return new Promise(function(q,te){A(Zn,function(be){q(new Uint8Array(be))},te)})}return Promise.resolve().then(function(){return Bd(Zn)})}function T1(){var q={env:Cu,wasi_snapshot_preview1:Cu};function te(tt,Ke){var Qt=tt.exports;a.asm=Qt,re=a.asm.memory,oa(re.buffer),Ma=a.asm.__indirect_function_table,xr(a.asm.__wasm_call_ctors),hf("wasm-instantiate")}I1("wasm-instantiate");function be(tt){te(tt.instance)}function De(tt){return C1().then(function(Ke){return WebAssembly.instantiate(Ke,q)}).then(function(Ke){return Ke}).then(tt,function(Ke){E("failed to asynchronously prepare wasm: "+Ke),Ti(Ke)})}function ht(){return!ee&&typeof WebAssembly.instantiateStreaming=="function"&&!ff(Zn)&&!Ni(Zn)&&typeof fetch=="function"?fetch(Zn,{credentials:"same-origin"}).then(function(tt){var Ke=WebAssembly.instantiateStreaming(tt,q);return Ke.then(be,function(Qt){return E("wasm streaming compile failed: "+Qt),E("falling back to ArrayBuffer instantiation"),De(be)})}):De(be)}if(a.instantiateWasm)try{var mt=a.instantiateWasm(q,te);return mt}catch(tt){return E("Module.instantiateWasm callback failed with error: "+tt),!1}return ht().catch(i),{}}var q4,X4;function Wd(q){for(;q.length>0;){var te=q.shift();if(typeof te=="function"){te(a);continue}var be=te.func;typeof be=="number"?te.arg===void 0?Vd(be)():Vd(be)(te.arg):be(te.arg===void 0?null:te.arg)}}function La(q){return q}function mf(q){var te=/\b_Z[\w\d_]+/g;return q.replace(te,function(be){var De=be;return be===De?be:De+" ["+be+"]"})}var br=[];function Vd(q){var te=br[q];return te||(q>=br.length&&(br.length=q+1),br[q]=te=Ma.get(q)),te}function K4(){var q=new Error;if(!q.stack){try{throw new Error}catch(te){q=te}if(!q.stack)return"(no stack trace available)"}return q.stack.toString()}function Iu(q,te){Ma.set(q,te),br[q]=te}function N1(){Ti("")}function Ud(){return 2147483648}function gf(q,te,be){qn.copyWithin(q,te,te+be)}function Yn(q){try{return re.grow(q-vs.byteLength+65535>>>16),oa(re.buffer),1}catch(te){}}function yf(q){var te=qn.length;q=q>>>0;var be=Ud();if(q>be)return!1;for(var De=1;De<=4;De*=2){var ht=te*(1+.2/De);ht=Math.min(ht,q+100663296);var mt=Math.min(be,Jt(Math.max(q,ht),65536)),tt=Yn(mt);if(tt)return!0}return!1}var Su={mappings:{},buffers:[null,[],[]],printChar:function(q,te){var be=Su.buffers[q];te===0||te===10?((q===1?D:E)(ot(be,0)),be.length=0):be.push(te)},varargs:void 0,get:function(){Su.varargs+=4;var q=Pn[Su.varargs-4>>2];return q},getStr:function(q){var te=gt(q);return te},get64:function(q,te){return q}};function E1(q){return 0}function Z4(q,te,be,De,ht){}function Y4(q,te,be,De){for(var ht=0,mt=0;mt<be;mt++){var tt=Pn[te>>2],Ke=Pn[te+4>>2];te+=8;for(var Qt=0;Qt<Ke;Qt++)Su.printChar(q,qn[tt+Qt]);ht+=Ke}return Pn[De>>2]=ht,0}function R1(q){se(q)}var Af=!1,Cu={abort:N1,emscripten_get_heap_max:Ud,emscripten_memcpy_big:gf,emscripten_resize_heap:yf,fd_close:E1,fd_seek:Z4,fd_write:Y4,setTempRet0:R1},iR=T1(),J4=a.___wasm_call_ctors=function(){return(J4=a.___wasm_call_ctors=a.asm.__wasm_call_ctors).apply(null,arguments)},_1=a._init=function(){return(_1=a._init=a.asm.init).apply(null,arguments)},D1=a._init_with_threads_count=function(){return(D1=a._init_with_threads_count=a.asm.init_with_threads_count).apply(null,arguments)},xf=a._get_threads_count=function(){return(xf=a._get_threads_count=a.asm.get_threads_count).apply(null,arguments)},bf=a._register_tensor=function(){return(bf=a._register_tensor=a.asm.register_tensor).apply(null,arguments)},$1=a._dispose_data=function(){return($1=a._dispose_data=a.asm.dispose_data).apply(null,arguments)},Be=a._dispose=function(){return(Be=a._dispose=a.asm.dispose).apply(null,arguments)},P1=a._Abs=function(){return(P1=a._Abs=a.asm.Abs).apply(null,arguments)},vf=a._Add=function(){return(vf=a._Add=a.asm.Add).apply(null,arguments)},Ei=a._AddN=function(){return(Ei=a._AddN=a.asm.AddN).apply(null,arguments)},Tu=a._All=function(){return(Tu=a._All=a.asm.All).apply(null,arguments)},F1=a._Any=function(){return(F1=a._Any=a.asm.Any).apply(null,arguments)},Q4=a._ArgMax=function(){return(Q4=a._ArgMax=a.asm.ArgMax).apply(null,arguments)},O1=a._AvgPool=function(){return(O1=a._AvgPool=a.asm.AvgPool).apply(null,arguments)},ev=a._BatchMatMul=function(){return(ev=a._BatchMatMul=a.asm.BatchMatMul).apply(null,arguments)},Ri=a._Ceil=function(){return(Ri=a._Ceil=a.asm.Ceil).apply(null,arguments)},M1=a._ClipByValue=function(){return(M1=a._ClipByValue=a.asm.ClipByValue).apply(null,arguments)},z1=a._Conv2D=function(){return(z1=a._Conv2D=a.asm.Conv2D).apply(null,arguments)},L1=a._Conv2DBackpropInput=function(){return(L1=a._Conv2DBackpropInput=a.asm.Conv2DBackpropInput).apply(null,arguments)},B1=a._Cos=function(){return(B1=a._Cos=a.asm.Cos).apply(null,arguments)},W1=a._Cosh=function(){return(W1=a._Cosh=a.asm.Cosh).apply(null,arguments)},V1=a._CropAndResize=function(){return(V1=a._CropAndResize=a.asm.CropAndResize).apply(null,arguments)},wf=a._Cumprod=function(){return(wf=a._Cumprod=a.asm.Cumprod).apply(null,arguments)},U1=a._Cumsum=function(){return(U1=a._Cumsum=a.asm.Cumsum).apply(null,arguments)},G1=a._DepthToSpace=function(){return(G1=a._DepthToSpace=a.asm.DepthToSpace).apply(null,arguments)},H1=a._DepthwiseConv2dNative=function(){return(H1=a._DepthwiseConv2dNative=a.asm.DepthwiseConv2dNative).apply(null,arguments)},j1=a._Elu=function(){return(j1=a._Elu=a.asm.Elu).apply(null,arguments)},q1=a._Equal=function(){return(q1=a._Equal=a.asm.Equal).apply(null,arguments)},kf=a._Exp=function(){return(kf=a._Exp=a.asm.Exp).apply(null,arguments)},X1=a._FlipLeftRight=function(){return(X1=a._FlipLeftRight=a.asm.FlipLeftRight).apply(null,arguments)},K1=a._Floor=function(){return(K1=a._Floor=a.asm.Floor).apply(null,arguments)},_i=a._FloorDiv=function(){return(_i=a._FloorDiv=a.asm.FloorDiv).apply(null,arguments)},Gd=a._FusedBatchNorm=function(){return(Gd=a._FusedBatchNorm=a.asm.FusedBatchNorm).apply(null,arguments)},Z1=a._FusedConv2D=function(){return(Z1=a._FusedConv2D=a.asm.FusedConv2D).apply(null,arguments)},Y1=a._FusedDepthwiseConv2D=function(){return(Y1=a._FusedDepthwiseConv2D=a.asm.FusedDepthwiseConv2D).apply(null,arguments)},J1=a._Gather=function(){return(J1=a._Gather=a.asm.Gather).apply(null,arguments)},Je=a._GatherNd=function(){return(Je=a._GatherNd=a.asm.GatherNd).apply(null,arguments)},Q1=a._Greater=function(){return(Q1=a._Greater=a.asm.Greater).apply(null,arguments)},eg=a._GreaterEqual=function(){return(eg=a._GreaterEqual=a.asm.GreaterEqual).apply(null,arguments)},tg=a._LeakyRelu=function(){return(tg=a._LeakyRelu=a.asm.LeakyRelu).apply(null,arguments)},ng=a._Less=function(){return(ng=a._Less=a.asm.Less).apply(null,arguments)},sg=a._LessEqual=function(){return(sg=a._LessEqual=a.asm.LessEqual).apply(null,arguments)},rg=a._Log=function(){return(rg=a._Log=a.asm.Log).apply(null,arguments)},Hd=a._LogicalAnd=function(){return(Hd=a._LogicalAnd=a.asm.LogicalAnd).apply(null,arguments)},If=a._LogicalNot=function(){return(If=a._LogicalNot=a.asm.LogicalNot).apply(null,arguments)},Sf=a._LogicalOr=function(){return(Sf=a._LogicalOr=a.asm.LogicalOr).apply(null,arguments)},ag=a._LogicalXor=function(){return(ag=a._LogicalXor=a.asm.LogicalXor).apply(null,arguments)},og=a._Max=function(){return(og=a._Max=a.asm.Max).apply(null,arguments)},ig=a._MaxPool=function(){return(ig=a._MaxPool=a.asm.MaxPool).apply(null,arguments)},lg=a._Maximum=function(){return(lg=a._Maximum=a.asm.Maximum).apply(null,arguments)},ug=a._Mean=function(){return(ug=a._Mean=a.asm.Mean).apply(null,arguments)},cg=a._Min=function(){return(cg=a._Min=a.asm.Min).apply(null,arguments)},Mt=a._Minimum=function(){return(Mt=a._Minimum=a.asm.Minimum).apply(null,arguments)},dg=a._MirrorPad=function(){return(dg=a._MirrorPad=a.asm.MirrorPad).apply(null,arguments)},pg=a._Multiply=function(){return(pg=a._Multiply=a.asm.Multiply).apply(null,arguments)},hg=a._Neg=function(){return(hg=a._Neg=a.asm.Neg).apply(null,arguments)},Nu=a._NonMaxSuppressionV3=function(){return(Nu=a._NonMaxSuppressionV3=a.asm.NonMaxSuppressionV3).apply(null,arguments)},Cf=a._NonMaxSuppressionV4=function(){return(Cf=a._NonMaxSuppressionV4=a.asm.NonMaxSuppressionV4).apply(null,arguments)},Tf=a._NonMaxSuppressionV5=function(){return(Tf=a._NonMaxSuppressionV5=a.asm.NonMaxSuppressionV5).apply(null,arguments)},Nf=a._NotEqual=function(){return(Nf=a._NotEqual=a.asm.NotEqual).apply(null,arguments)},fg=a._OneHot=function(){return(fg=a._OneHot=a.asm.OneHot).apply(null,arguments)},Ef=a._PadV2=function(){return(Ef=a._PadV2=a.asm.PadV2).apply(null,arguments)},mg=a._Pow=function(){return(mg=a._Pow=a.asm.Pow).apply(null,arguments)},tv=a._Prelu=function(){return(tv=a._Prelu=a.asm.Prelu).apply(null,arguments)},Rf=a._Prod=function(){return(Rf=a._Prod=a.asm.Prod).apply(null,arguments)},nv=a._RealDiv=function(){return(nv=a._RealDiv=a.asm.RealDiv).apply(null,arguments)},gg=a._Relu=function(){return(gg=a._Relu=a.asm.Relu).apply(null,arguments)},yg=a._Relu6=function(){return(yg=a._Relu6=a.asm.Relu6).apply(null,arguments)},Ag=a._ResizeBilinear=function(){return(Ag=a._ResizeBilinear=a.asm.ResizeBilinear).apply(null,arguments)},xg=a._ResizeNearestNeighbor=function(){return(xg=a._ResizeNearestNeighbor=a.asm.ResizeNearestNeighbor).apply(null,arguments)},bg=a._Reverse=function(){return(bg=a._Reverse=a.asm.Reverse).apply(null,arguments)},vg=a._RotateWithOffset=function(){return(vg=a._RotateWithOffset=a.asm.RotateWithOffset).apply(null,arguments)},wg=a._Round=function(){return(wg=a._Round=a.asm.Round).apply(null,arguments)},kg=a._Rsqrt=function(){return(kg=a._Rsqrt=a.asm.Rsqrt).apply(null,arguments)},Ig=a._ScatterNd=function(){return(Ig=a._ScatterNd=a.asm.ScatterNd).apply(null,arguments)},Sg=a._SelectV2=function(){return(Sg=a._SelectV2=a.asm.SelectV2).apply(null,arguments)},Cg=a._Sigmoid=function(){return(Cg=a._Sigmoid=a.asm.Sigmoid).apply(null,arguments)},Tg=a._Sin=function(){return(Tg=a._Sin=a.asm.Sin).apply(null,arguments)},Ng=a._Softmax=function(){return(Ng=a._Softmax=a.asm.Softmax).apply(null,arguments)},Eg=a._SparseFillEmptyRows=function(){return(Eg=a._SparseFillEmptyRows=a.asm.SparseFillEmptyRows).apply(null,arguments)},Rg=a._SparseReshape=function(){return(Rg=a._SparseReshape=a.asm.SparseReshape).apply(null,arguments)},_g=a._SparseSegmentReduction=function(){return(_g=a._SparseSegmentReduction=a.asm.SparseSegmentReduction).apply(null,arguments)},Dg=a._Sqrt=function(){return(Dg=a._Sqrt=a.asm.Sqrt).apply(null,arguments)},$g=a._Square=function(){return($g=a._Square=a.asm.Square).apply(null,arguments)},Pg=a._SquaredDifference=function(){return(Pg=a._SquaredDifference=a.asm.SquaredDifference).apply(null,arguments)},Fg=a._Step=function(){return(Fg=a._Step=a.asm.Step).apply(null,arguments)},Og=a._StridedSlice=function(){return(Og=a._StridedSlice=a.asm.StridedSlice).apply(null,arguments)},Mg=a._Sub=function(){return(Mg=a._Sub=a.asm.Sub).apply(null,arguments)},zg=a._Sum=function(){return(zg=a._Sum=a.asm.Sum).apply(null,arguments)},Lg=a._Tan=function(){return(Lg=a._Tan=a.asm.Tan).apply(null,arguments)},Bg=a._Tanh=function(){return(Bg=a._Tanh=a.asm.Tanh).apply(null,arguments)},Wg=a._Tile=function(){return(Wg=a._Tile=a.asm.Tile).apply(null,arguments)},Vg=a._TopK=function(){return(Vg=a._TopK=a.asm.TopK).apply(null,arguments)},Ug=a._Transform=function(){return(Ug=a._Transform=a.asm.Transform).apply(null,arguments)},Gg=a._Transpose=function(){return(Gg=a._Transpose=a.asm.Transpose).apply(null,arguments)},Hg=a.__FusedMatMul=function(){return(Hg=a.__FusedMatMul=a.asm._FusedMatMul).apply(null,arguments)},jg=a._malloc=function(){return(jg=a._malloc=a.asm.malloc).apply(null,arguments)},qg=a._free=function(){return(qg=a._free=a.asm.free).apply(null,arguments)},Xg=a.___errno_location=function(){return(Xg=a.___errno_location=a.asm.__errno_location).apply(null,arguments)},Kg=a._emscripten_main_thread_process_queued_calls=function(){return(Kg=a._emscripten_main_thread_process_queued_calls=a.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},_f=a.stackSave=function(){return(_f=a.stackSave=a.asm.stackSave).apply(null,arguments)},Df=a.stackRestore=function(){return(Df=a.stackRestore=a.asm.stackRestore).apply(null,arguments)},jd=a.stackAlloc=function(){return(jd=a.stackAlloc=a.asm.stackAlloc).apply(null,arguments)},Zg=a.dynCall_iijjiiii=function(){return(Zg=a.dynCall_iijjiiii=a.asm.dynCall_iijjiiii).apply(null,arguments)},Yg=a.dynCall_jiji=function(){return(Yg=a.dynCall_jiji=a.asm.dynCall_jiji).apply(null,arguments)};a.cwrap=_e;var Eu;function qd(q){this.name="ExitStatus",this.message="Program terminated with exit("+q+")",this.status=q}za=function q(){Eu||Xd(),Eu||(za=q)};function Xd(q){if(q=q||c,Vs>0||(lf(),Vs>0))return;function te(){Eu||(Eu=!0,a.calledRun=!0,!pe&&(uf(),o(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),cf()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),te()},1)):te()}a.run=Xd;function sv(q){ce=q,Ld()||(a.onExit&&a.onExit(q),pe=!0),d(q,new qd(q))}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();Xd();var Ru;l&&(Ru={uncaughtException:process.listeners("uncaughtException").filter(function(q){return!l.uncaughtException.indexOf(q)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(q){return!l.unhandledRejection.indexOf(q)>-1})});var _u;if(typeof r!="undefined")_u=r;else if(typeof WasmBackendModuleThreadedSimd!="undefined")_u=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Ru){var Jg=_u._dispose;_u._dispose=function(){Jg(),Ru.uncaughtException.forEach(function(q){process.removeListener("uncaughtException",q)}),Ru.unhandledRejection.forEach(function(q){process.removeListener("unhandledRejection",q)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),N_=1e-7,E_=1e-4,zp=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},pc=class{refCount(e){return Us("refCount")}incRef(e){return Us("incRef")}timerAvailable(){return!0}time(e){return Us("time")}read(e){return Us("read")}readSync(e){return Us("readSync")}readToGPU(e,t){return Us("readToGPU")}numDataIds(){return Us("numDataIds")}disposeData(e,t){return Us("disposeData")}write(e,t,n){return Us("write")}move(e,t,n,s,r){return Us("move")}memory(){return Us("memory")}floatPrecision(){return Us("floatPrecision")}epsilon(){return this.floatPrecision()===32?N_:E_}dispose(){return Us("dispose")}};function Us(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function s6(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,pm(e,t,n)}function R_(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,pm(e,n,s),pm(t,n,s)}function bp(e,t,n){return Math.max(e,Math.min(t,n))}function __(e){return e%2===0?e:e+1}function pm(e,t,n){let s=e[t];e[t]=e[n],e[n]=s}function D_(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function $_(e,t){let n=Math.random();return t*n+(1-n)*e}function P_(e,t){let n=0;for(let s=0;s<e.length;s++){let r=Number(e[s])-Number(t[s]);n+=r*r}return n}function O(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function rs(e,t,n=""){O(po(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function il(e){O(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Ki(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||Fn(e)&&!n)for(let s=0;s<e.length;++s)Ki(e[s],t,n);else t.push(e);return t}function Nt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function F_(e){return e.length===0}function po(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Ku(e){return e%1===0}function O_(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function M_(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function z_(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return s6(t),t}function mp(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function L_(e,t=s=>0,n){return new Promise((s,r)=>{let a=0,o=()=>{if(e()){s();return}a++;let i=t(a);if(n!=null&&a>=n){r();return}setTimeout(o,i)};o()})}function B_(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[s]=t/n,r}function lr(e,t){let n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),O(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),O(e.every(s=>Ku(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function r6(e,t){let n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||r?null:lr(t,e).sort(),o=0;for(let i=0;i<e.length;++i){if(a!=null){if(a[o]===i&&e[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(a[o]==null||a[o]>i)&&e[i]===1&&(n.push(e[i]),s.push(i)),a[o]<=i&&o++}e[i]!==1&&(n.push(e[i]),s.push(i))}return{newShape:n,keptDims:s}}function a6(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function o6(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function i6(e,t){for(let n=0;n<e.length;n++){let s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function l6(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function W_(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function Fn(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function x3(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function u6(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Ha(e){return typeof e=="string"||e instanceof String}function c6(e){return typeof e=="boolean"}function d6(e){return typeof e=="number"}function Gm(e){return Array.isArray(e)?Gm(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":d6(e)?"float32":Ha(e)?"string":c6(e)?"bool":"float32"}function Ja(e){return!!(e&&e.constructor&&e.call&&e.apply)}function hm(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function hc(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function p6(e,t,n,s=!1){let r=new Array;if(t.length===1){let a=t[0]*(s?2:1);for(let o=0;o<a;o++)r[o]=n[e+o]}else{let a=t[0],o=t.slice(1),i=o.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<a;l++)r[l]=p6(e+l*i,o,n,s)}return r}function Uu(e,t,n=!1){if(e.length===0)return t[0];let s=e.reduce((r,a)=>r*a)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return p6(0,e,t,n)}function Iy(e,t){let n=Hm(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function Hm(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function V_(e,t){let n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return Uu(e,new Float32Array(n));if(t==="int32")return Uu(e,new Int32Array(n));if(t==="bool")return Uu(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Sy(e){e.forEach(t=>{O(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function U_(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function G_(e,t,n){if(t===0)return[];if(t===1)return[e];let s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function Cy(e){return e&&e.then&&typeof e.then=="function"}var mv="tfjsflags",h6=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=H_,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(j().getBool("IS_TEST")||j().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let s=this.urlFlags[e];j().getBool("IS_TEST")||j().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Cy(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);mv in e&&e[mv].split(",").forEach(n=>{let[s,r]=n.split(":");this.urlFlags[s]=q_(s,r)})}};function H_(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(j_(t,s[0],s[1]),s.join("="))),t}function j_(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function q_(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function j(){return Ty}var Ty=null;function X_(e){Ty=e}var o3;function f6(){if(o3==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");o3=e}return o3}function K_(){let e=f6();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function Ny(e,t){let n=K_();if(n.has(e))return n.get(e);{let s=t();return n.set(e,s),n.get(e)}}var ll="Abs",fc="Acos",mc="Acosh",ba="Add",ho="AddN",gc="All",yc="Any",fo="ArgMax",Ac="ArgMin",xc="Asin",bc="Asinh",vc="Atan",wc="Atanh",kc="Atan2",mo="AvgPool",jm="AvgPoolGrad",Lp="AvgPool3D",qm="AvgPool3DGrad",go="BatchMatMul",ul="BatchToSpaceND",Xm="Bincount",m6="BroadcastTo",Km="BroadcastArgs",yo="Cast",Ao="Ceil",va="ClipByValue",Bp="Complex",Wp="ComplexAbs",cl="Concat",xo="Conv2D",Zm="Conv2DBackpropFilter",bo="Conv2DBackpropInput",Vp="Conv3D",Ym="Conv3DBackpropFilterV2",Jm="Conv3DBackpropInputV2",vo="Cos",wo="Cosh",dl="Cumprod",ko="Cumsum",pl="CropAndResize",Qm="DenseBincount",hl="DepthToSpace",Io="DepthwiseConv2dNative",e0="DepthwiseConv2dNativeBackpropFilter",t0="DepthwiseConv2dNativeBackpropInput",n0="Diag",Up="Dilation2D",fm="Dilation2DBackpropInput",mm="Dilation2DBackpropFilter",So="RealDiv",Gp="Einsum",Co="Elu",s0="EluGrad",Ic="Erf",fl="Equal",To="Exp",ml="ExpandDims",gl="Expm1",r0="FFT",Sc="Fill",yl="FlipLeftRight",No="Floor",Eo="FloorDiv",Ro="FusedBatchNorm",Al="GatherV2",xl="GatherNd",bl="Greater",_o="GreaterEqual",Do="Identity",a0="IFFT",Hp="Imag",Cc="IsFinite",Tc="IsInf",Nc="IsNan",$o="LeakyRelu",vl="Less",wl="LessEqual",o0="LinSpace",Po="Log",Ec="Log1p",kl="LogicalAnd",Il="LogicalNot",Rc="LogicalOr",g6="LogicalXor",y6="LogSoftmax",Z_="LowerBound",jp="LRN",i0="LRNGrad",Fo="Max",Oo="Maximum",Mo="MaxPool",l0="MaxPoolGrad",qp="MaxPool3D",u0="MaxPool3DGrad",c0="MaxPoolWithArgmax",zo="Mean",Lo="Min",Bo="Minimum",Wo="MirrorPad",_c="Mod",d0="Multinomial",Vo="Multiply",Sl="Neg",Cl="NotEqual",Tl="NonMaxSuppressionV3",Dc="NonMaxSuppressionV4",Nl="NonMaxSuppressionV5",El="OnesLike",Rl="OneHot",_l="Pack",Uo="PadV2",Y_="Pool",Go="Pow",Ho="Prelu",jo="Prod",$c="Range",Xp="Real",Pc="Reciprocal",qo="Relu",Dl="Reshape",Xo="ResizeNearestNeighbor",p0="ResizeNearestNeighborGrad",Ko="ResizeBilinear",h0="ResizeBilinearGrad",Zo="Relu6",$l="Reverse",Pl="Round",Yo="Rsqrt",Fl="ScatterNd",f0="SearchSorted",Ol="Select",Fc="Selu",Ml="Slice",Jo="Sin",zl="Sinh",Oc="Sign",Qo="Sigmoid",Mc="Softplus",ei="Sqrt",ti="Sum",Ll="SpaceToBatchND",Bl="SplitV",ni="Softmax",Kp="SparseFillEmptyRows",zc="SparseReshape",Zp="SparseSegmentMean",Yp="SparseSegmentSum",Jp="SparseToDense",si="SquaredDifference",Lc="Square",Wl="StridedSlice",Bc="StringNGrams",Qp="StringSplit",eh="StringToHashBucketFast",ri="Sub",Vl="Tan",ai="Tanh",wa="Tile",Ul="TopK",Gl="Transform",jr="Transpose",m0="Unique",Hl="Unpack",th="UnsortedSegmentSum",J_="UpperBound",jl="ZerosLike",oi="Step",vp="FromPixels",ql="RotateWithOffset",Qa="_FusedMatMul",eo="FusedConv2D",to="FusedDepthwiseConv2D";function Ga(...e){j().getBool("IS_TEST")||j().getBool("PROD")||console.warn(...e)}function Q_(...e){j().getBool("IS_TEST")||j().getBool("PROD")||console.log(...e)}var Zu=Ny("kernelRegistry",()=>new Map),wp=Ny("gradRegistry",()=>new Map);function gm(e,t){let n=Ey(e,t);return Zu.get(n)}function b3(e){return wp.get(e)}function Xr(e){let t=Zu.entries(),n=[];for(;;){let{done:s,value:r}=t.next();if(s)break;let[a,o]=r,[i]=a.split("_");i===e&&n.push(o)}return n}function ur(e){let{kernelName:t,backendName:n}=e,s=Ey(t,n);Zu.has(s)&&Ga(`The kernel '${t}' for backend '${n}' is already registered`),Zu.set(s,e)}function A6(e){let{kernelName:t}=e;wp.has(t)&&j().getBool("DEBUG")&&Ga(`Overriding the gradient for '${t}'`),wp.set(t,e)}function eD(e,t){let n=Ey(e,t);if(!Zu.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Zu.delete(n)}function tD(e){if(!wp.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);wp.delete(e)}function nD(e,t){Xr(e).forEach(s=>{let r=Object.assign({},s,{backendName:t});ur(r)})}function Ey(e,t){return`${t}_${e}`}var v={};Ge(v,{arraysEqual:()=>po,assert:()=>O,assertNonNegativeIntegerDimensions:()=>Sy,assertNonNull:()=>il,assertShapesMatch:()=>rs,bytesFromStringArray:()=>u6,bytesPerElement:()=>x3,checkConversionForErrors:()=>i6,clamp:()=>bp,computeStrides:()=>hc,createScalarValue:()=>lD,createShuffledIndices:()=>z_,decodeString:()=>ym,distSquared:()=>P_,encodeString:()=>sh,fetch:()=>cD,fingerPrint64:()=>iD,flatten:()=>Ki,getArrayFromDType:()=>o6,getTypedArrayFromDType:()=>a6,hasEncodingLoss:()=>W_,hexToLong:()=>nh,indexToLoc:()=>G_,inferDtype:()=>Gm,inferFromImplicitShape:()=>B_,isBoolean:()=>c6,isFunction:()=>Ja,isInt:()=>Ku,isNumber:()=>d6,isPromise:()=>Cy,isScalarShape:()=>F_,isString:()=>Ha,isTypedArray:()=>Fn,isValidDtype:()=>l6,locToIndex:()=>U_,makeOnesTypedArray:()=>Iy,makeZerosNestedTypedArray:()=>V_,makeZerosTypedArray:()=>Hm,nearestDivisor:()=>hm,nearestLargerEven:()=>__,now:()=>kp,parseAxisParam:()=>lr,randUniform:()=>$_,repeatedTry:()=>L_,rightPad:()=>mp,shuffle:()=>s6,shuffleCombo:()=>R_,sizeFromShape:()=>Nt,sizeToSquarishShape:()=>M_,squeezeShape:()=>r6,sum:()=>D_,swap:()=>pm,tanh:()=>O_,toNestedArray:()=>Uu,toTypedArray:()=>g0});var gv=co(d_()),zi=gv.default||gv;function nh(e){return zi.fromString(e,!0,16)}var x6=nh("c3a5c85c97cb3127"),Fi=nh("b492b66fbe98f273"),Qn=nh("9ae16a3b2f90404f");function v3(e){return e.xor(e.shru(47))}function b6(e,t,n){let s=e.slice(t,t+n);return zi.fromBytes(Array.from(s),!0,!0)}function Tt(e,t){return b6(e,t,8)}function yv(e,t){return b6(e,t,4)}function yn(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function Xa(e,t,n=nh("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function sD(e,t,n,s,r,a){r=r.add(e),a=yn(a.add(r).add(s),21);let o=r;return r=r.add(t),r=r.add(n),a=a.add(yn(r,44)),[r.add(s),a.add(o)]}function Wf(e,t,n,s){return sD(Tt(e,t),Tt(e,t+8),Tt(e,t+16),Tt(e,t+24),n,s)}function rD(e,t=e.length){if(t>=8){let n=Qn.add(t*2),s=Tt(e,0).add(Qn),r=Tt(e,t-8),a=yn(r,37).mul(n).add(s),o=yn(s,25).add(r).mul(n);return Xa(a,o,n)}if(t>=4){let n=Qn.add(t*2),s=yv(e,0);return Xa(s.shl(3).add(t),yv(e,t-4),n)}if(t>0){let n=e[0],s=e[t>>1],r=e[t-1],a=n+(s<<8),o=t+(r<<2);return v3(Qn.mul(a).xor(x6.mul(o))).mul(Qn)}return Qn}function aD(e,t=e.length){let n=Qn.add(t*2),s=Tt(e,0).mul(Fi),r=Tt(e,8),a=Tt(e,t-8).mul(n),o=Tt(e,t-16).mul(Qn);return Xa(yn(s.add(r),43).add(yn(a,30)).add(o),s.add(yn(r.add(Qn),18)).add(a),n)}function oD(e,t=e.length){let n=Qn.add(t*2),s=Tt(e,0).mul(Qn),r=Tt(e,8),a=Tt(e,t-8).mul(n),o=Tt(e,t-16).mul(Qn),i=yn(s.add(r),43).add(yn(a,30)).add(o),l=Xa(i,s.add(yn(r.add(Qn),18)).add(a),n),u=Tt(e,16).mul(n),c=Tt(e,24),p=i.add(Tt(e,t-32)).mul(n),d=l.add(Tt(e,t-24)).mul(n);return Xa(yn(u.add(c),43).add(yn(p,30)).add(d),u.add(yn(c.add(s),18)).add(p),n)}function iD(e,t=e.length){let n=zi.fromNumber(81,!0);if(t<=32)return t<=16?rD(e,t):aD(e,t);if(t<=64)return oD(e,t);let s=n,r=n.mul(Fi).add(113),a=v3(r.mul(Qn).add(113)).mul(Qn),o=[zi.UZERO,zi.UZERO],i=[zi.UZERO,zi.UZERO];s=s.mul(Qn).add(Tt(e,0));let l=0,u=(t-1>>6)*64,c=u+(t-1&63)-63;do s=yn(s.add(r).add(o[0]).add(Tt(e,l+8)),37).mul(Fi),r=yn(r.add(o[1]).add(Tt(e,l+48)),42).mul(Fi),s=s.xor(i[1]),r=r.add(o[0]).add(Tt(e,l+40)),a=yn(a.add(i[0]),33).mul(Fi),o=Wf(e,l,o[1].mul(Fi),s.add(i[0])),i=Wf(e,l+32,a.add(i[1]),r.add(Tt(e,l+16))),[a,s]=[s,a],l+=64;while(l!==u);let p=Fi.add(a.and(255).shl(1));return l=c,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),s=yn(s.add(r).add(o[0]).add(Tt(e,l+8)),37).mul(p),r=yn(r.add(o[1]).add(Tt(e,l+48)),42).mul(p),s=s.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(Tt(e,l+40))),a=yn(a.add(i[0]),33).mul(p),o=Wf(e,l,o[1].mul(p),s.add(i[0])),i=Wf(e,l+32,a.add(i[1]),r.add(Tt(e,l+16))),[a,s]=[s,a],Xa(Xa(o[0],i[0],p).add(v3(r).mul(x6)).add(a),Xa(o[1],i[1],p).add(s),p)}function lD(e,t){return t==="string"?sh(e):g0([e],t)}function uD(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function g0(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Ki(e)),j().getBool("DEBUG")&&i6(e,t),uD(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function kp(){return j().platform.now()}function cD(e,t){return j().platform.fetch(e,t)}function sh(e,t="utf-8"){return t=t||"utf-8",j().platform.encode(e,t)}function ym(e,t="utf-8"){return t=t||"utf-8",j().platform.decode(e,t)}var dD=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new hD)}profileKernel(e,t,n){let s,r=()=>{s=n()},a,o=kp();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(let l of s)l.dataSync();a=Promise.resolve({kernelMs:kp()-o})}if(j().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){let u=s[l];u.data().then(c=>{pD(c,u.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach(o=>{Promise.all([o.data(),s,a]).then(i=>{this.logger.logKernelProfile(t,o,i[0],i[1],r,i[2])})})}};function pD(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){let r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var hD=class{logKernelProfile(e,t,n,s,r,a){let o=typeof s=="number"?mp(`${s}ms`,9):s.error,i=mp(e,25),l=t.rank,u=t.size,c=mp(t.shape.toString(),14),p="";for(let d in r){let h=r[d];if(h!=null){let f=h.shape||t.shape,m=f.length;p+=`${d}: ${m}D ${m>0?f:""} `}}console.log(`%c${i}	%c${o}	%c${l}D ${c}	%c${u}	%c${p}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function fD(e,t,n){let s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<e.length;l++){let u=e[l],c=u.inputs;for(let p in c){let d=c[p],h=!1;for(let f=0;f<t.length;f++)if(s[d.id]){u.outputs.forEach(m=>s[m.id]=!0),h=!0,r[u.id]=!0;break}if(h)break}}let a={};a[n.id]=!0;let o={};for(let l=e.length-1;l>=0;l--){let u=e[l],c=u.inputs;for(let p=0;p<u.outputs.length;p++)if(a[u.outputs[p].id]){for(let d in c)a[c[d].id]=!0,o[u.id]=!0;break}}let i=[];for(let l=0;l<e.length;l++){let u=e[l];if(r[u.id]&&o[u.id]){let c={};for(let d in u.inputs){let h=u.inputs[d];s[h.id]&&(c[d]=h)}let p=Object.assign({},u);p.inputs=c,p.outputs=u.outputs,i.push(p)}}return i}function mD(e,t,n,s){for(let r=t.length-1;r>=0;r--){let a=t[r],o=[];if(a.outputs.forEach(l=>{let u=e[l.id];u!=null?o.push(u):o.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let i=a.gradient(o);for(let l in a.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);let u=n(()=>i[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=a.inputs[l];if(!po(u.shape,c.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(e[c.id]==null)e[c.id]=u;else{let p=e[c.id];e[c.id]=s(p,u),p.dispose()}}}}var Av=20,ep=3,i3=7;function gD(e,t,n,s){let r=hc(t),a=yD(e,t,n,r),o=t.length,i=tm(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(u=>"    "+u).join(`
`)),l.join(`
`)}function yD(e,t,n,s){let r=Nt(t),a=s[s.length-1],o=new Array(a).fill(0),i=t.length,l=n==="complex64"?ap(e):e;if(i>1)for(let u=0;u<r/a;u++){let c=u*a;for(let p=0;p<a;p++)o[p]=Math.max(o[p],rp(l[c+p],0,n).length)}return o}function rp(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(i3))} + ${parseFloat(e[1].toFixed(i3))}j`:Ha(e)?s=`'${e}'`:n==="bool"?s=v6(e):s=parseFloat(e.toFixed(i3)).toString(),mp(s,t)}function v6(e){return e===0?"false":"true"}function tm(e,t,n,s,r,a=!0){let o=n==="complex64"?2:1,i=t[0],l=t.length;if(l===0){if(n==="complex64"){let m=ap(e);return[rp(m[0],0,n)]}return n==="bool"?[v6(e[0])]:[e[0].toString()]}if(l===1){if(i>Av){let g=ep*o,y=Array.from(e.slice(0,g)),x=Array.from(e.slice((i-ep)*o,i*o));return n==="complex64"&&(y=ap(y),x=ap(x)),["["+y.map((A,b)=>rp(A,r[b],n)).join(", ")+", ..., "+x.map((A,b)=>rp(A,r[i-ep+b],n)).join(", ")+"]"]}let m=n==="complex64"?ap(e):Array.from(e);return["["+m.map((g,y)=>rp(g,r[y],n)).join(", ")+"]"]}let u=t.slice(1),c=s.slice(1),p=s[0]*o,d=[];if(i>Av){for(let m=0;m<ep;m++){let g=m*p,y=g+p;d.push(...tm(e.slice(g,y),u,n,c,r,!1))}d.push("...");for(let m=i-ep;m<i;m++){let g=m*p,y=g+p;d.push(...tm(e.slice(g,y),u,n,c,r,m===i-1))}}else for(let m=0;m<i;m++){let g=m*p,y=g+p;d.push(...tm(e.slice(g,y),u,n,c,r,m===i-1))}let h=l===2?",":"";d[0]="["+d[0]+h;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+h;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function ap(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var pn=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Nt(e),n!=null){let s=n.length;O(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||o6(t,this.size),this.strides=hc(e)}set(e,...t){t.length===0&&(t=[0]),O(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let s of e){if(s<0||s>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Sr().makeTensor(this.values,this.shape,this.dtype)}},Sr=null,Bu=null,AD=null;function xD(e){Sr=e}function bD(e){Bu=e}function vD(e){AD=e}var nt=class{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Nt(e),this.strides=hc(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Bu.buffer(this.shape,this.dtype,e)}bufferSync(){return Bu.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Uu(this.shape,e,this.dtype==="complex64")}arraySync(){return Uu(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Sr().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>ym(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Sr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Sr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>ym(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Sr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Sr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Bu.print(this,e)}clone(){return this.throwIfDisposed(),Bu.clone(this)}toString(e=!1){let t=this.dataSync();return gD(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Bu.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Sr().makeVariable(this,e,t,n)}};Object.defineProperty(nt,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function ne(){return Ny("Tensor",()=>nt)}ne();var Ip=class extends nt{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!po(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Sr().disposeTensor(this),this.dataId=e.dataId,Sr().incRef(this,null)}dispose(){Sr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Ip,Symbol.hasInstance,{value:e=>e instanceof nt&&e.assign!=null&&e.assign instanceof Function});var Er={};Ge(Er,{assertTypesMatch:()=>w6,getTensorsInContainer:()=>Ry,isTensorInList:()=>kD,makeTypesMatch:()=>Gt});var w3;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(w3||(w3={}));var k3;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(k3||(k3={}));var I3;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(I3||(I3={}));var S3;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(S3||(S3={}));var C3;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(C3||(C3={}));var wD={float32:S3,int32:k3,bool:I3,complex64:C3};function Mn(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return wD[e][t]}function rh(e){return Mn(e,"int32")}function Gt(e,t){if(e.dtype===t.dtype)return[e,t];let n=Mn(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function w6(e,t){O(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function kD(e,t){return t.some(n=>n.id===e.id)}function Ry(e){let t=[];return k6(e,t,new Set),t}function k6(e,t,n){if(e==null)return;if(e instanceof nt){t.push(e);return}if(!ID(e))return;let s=e;for(let r in s){let a=s[r];n.has(a)||(n.add(a),k6(a,t,n))}}function ID(e){return Array.isArray(e)||typeof e=="object"}function l3(e){return e.kernelName!=null}var xv=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Sp=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new xv}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Ga(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new dD(this.backendInstance),!0}setupRegisteredKernels(){Xr(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Xr(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof pc)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,r=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Ga(`Initialization of backend ${e} failed`),Ga(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return Ga(`Initialization of backend ${e} failed`),Ga(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,n){e();try{let s=n();return t(),s}catch(s){throw t(),s}}nextTensorId(){return Sp.nextTensorId++}nextVariableId(){return Sp.nextVariableId++}clone(e){let t=L.runKernel(Do,{x:e}),n={x:e},s=a=>({x:()=>{let o="float32",i={x:a},l={dtype:o};return L.runKernel(yo,i,l)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(gm(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let s=this.backend.numDataIds(),r=0;n.forEach(i=>{r+=i.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=s-t-r-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let i,l=l3(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(l3(e)){let{kernelName:h,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=gm(h,this.backendName);O(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),o=()=>{let y=this.backend.numDataIds();i=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let x=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,y,x);let A=x.map(b=>b.rank!=null?b:this.makeTensorFromTensorInfo(b));if(s){let b=this.getTensorsForGradient(h,f,A);n=this.saveTensorsForBackwardMode(b)}return A}}else{let{forwardFunc:h}=e,f=m=>{!s||(n=m.map(g=>this.keep(this.clone(g))))};o=()=>{let m=this.backend.numDataIds();i=this.tidy(()=>h(this.backend,f));let g=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let{inputs:u,attrs:c}=e,p=l3(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(d=this.profiler.profileKernel(l,u,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),s&&this.addTapeNode(l,u,t,p,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(h=>u[h]!=null?u[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let s=b3(e);if(s!=null){let r=s.inputsToSave||[],a=s.outputsToSave||[],o;s.saveAllInputs?(O(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(l=>t[l])):o=r.map(l=>t[l]);let i=n.filter((l,u)=>a[u]);return o.concat(i)}return[]}makeTensor(e,t,n,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;n==="string"&&Ha(e[0])&&(r=e.map(i=>sh(i)));let a=s.write(r,t,n),o=new nt(t,n,a,this.nextTensorId());if(this.trackTensor(o,s),n==="string"){let i=this.state.tensorInfo.get(a),l=u6(r);this.state.numBytes+=l-i.bytes,i.bytes=l}return o}makeTensorFromDataId(e,t,n,s){n=n||"float32";let r={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(r,s)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:s,dtype:r}=e,a=new nt(s,r,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));let r=new Ip(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*x3(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ip||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*x3(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,s,r,a){let o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=b3(e);i!=null&&(s=i.gradFunc),s!=null&&(o.gradient=l=>(l=l.map((u,c)=>{if(u==null){let p=n[c],d=Hm(p.size,p.dtype);return this.makeTensor(d,p.shape,p.dtype)}return u}),s(l.length>1?l:l[0],r,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Ry(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let a=this.state.activeScope.track[r];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===s.id&&this.track(r)})}gradients(e,t,n,s=!1){if(O(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));O(r instanceof nt,()=>"The result y returned by f() must be a tensor.");let a=fD(this.state.activeTape,t,r);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[r.id]=n==null?SD(r.shape):n,mD(o,a,l=>this.tidy(l),CD);let i=t.map(l=>o[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let u of l.saved)u.dispose()}),this.state.activeTape=null),{value:r,grads:i}})}customGrad(e){return O(Ja(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{O(t.every(o=>o instanceof nt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};t.forEach((o,i)=>{s[i]=o});let r=(o,i)=>(n=e(...t,i),O(n.value instanceof nt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),O(Ja(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(o,i)=>{let l=n.gradFunc(o,i),u=Array.isArray(l)?l:[l];O(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),O(u.every(p=>p instanceof nt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let c={};return u.forEach((p,d)=>{c[d]=()=>p}),c};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=kp(),n=await this.backend.time(e);return n.wallMs=kp()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new xv;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};Sp.nextTensorId=0;Sp.nextVariableId=0;function SD(e){let t=Iy(Nt(e),"float32");return L.makeTensor(t,e,"float32")}function I6(){let e=f6();if(e._tfengine==null){let t=new h6(e);e._tfengine=new Sp(t)}return X_(e._tfengine.ENV),xD(()=>e._tfengine),e._tfengine}var L=I6();function CD(e,t){let n={a:e,b:t};return L.runKernel(ba,n)}var ah={};Ge(ah,{isBrowser:()=>S6,isMobile:()=>ED,mockIsMobile:()=>ND});function TD(){return typeof navigator!="undefined"&&navigator!=null}var T3;function ND(e){T3=e}function ED(e){if(T3!==void 0)return T3;if(e||TD()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function S6(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var or=j();or.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});or.registerFlag("IS_BROWSER",()=>S6());or.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");or.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));or.registerFlag("PROD",()=>!1);or.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>or.getBool("DEBUG"));or.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);or.registerFlag("IS_TEST",()=>!1);or.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);or.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);or.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function Kr(e,t){let n=e;if(Fn(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let s=[];for(;Array.isArray(n)||Fn(n)&&t!=="string";)s.push(n.length),n=n[0];return Array.isArray(e)&&j().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&C6(e,s,[]),s}function C6(e,t,n){if(n=n||[],!Array.isArray(e)&&!Fn(e)){O(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}O(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),O(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let s=t.slice(1);for(let r=0;r<e.length;++r)C6(e[r],s,n.concat(r))}function bv(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function $(e,t,n,s="numeric"){if(e instanceof nt)return bv(s,e.dtype,t,n),e;let r=Gm(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),bv(s,r,t,n),e==null||!Fn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let l=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}let a=Kr(e,r);!Fn(e)&&!Array.isArray(e)&&(e=[e]);let i=r!=="string"?g0(e,r):Ki(e,[],!0);return L.makeTensor(i,a,r)}function Cp(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,o)=>$(a,`${t}[${o}]`,n,s))}var _y="__op";function B(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+_y;let r=(...a)=>{L.startScope(n);try{let o=s(...a);return Cy(o)&&console.error("Cannot return a Promise inside of tidy."),L.endScope(o),o}catch(o){throw L.endScope(null),o}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function RD(e,t){let n=$(e,"real","complex"),s=$(t,"imag","complex");rs(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);let r={real:n,imag:s};return L.runKernel(Bp,r)}var ma=B({complex_:RD});function ii(e,t,n,s){if(s==null&&(s=Gm(e)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Fn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Sy(t);let r=Nt(t),a=Nt(n);O(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let o=0;o<n.length;++o){let i=n[o],l=o===n.length-1?i!==Nt(t.slice(o)):!0;O(n[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!Fn(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?g0(e,s):Ki(e,[],!0),L.makeTensor(e,t,s)}function ct(e,t,n){let s=Kr(e,n);return ii(e,t,s,n)}var N3={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},Am=4;async function _D(e,t){let n=[],s=[],r=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);for(let o=0;o<r.length;++o){let i=r[o],l=Array.isArray(e)?e[o].tensor:e[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);let u={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(async p=>{let d=await l.bytes(),h=d.reduce((g,y)=>g+y.length,0)+Am*d.length,f=new Uint8Array(h),m=0;for(let g=0;g<d.length;g++){let y=d[g],x=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(x,m),m+=Am,f.set(y,m),m+=y.length}p(f)});s.push(c)}else s.push(l.data());t!=null&&(u.group=t),n.push(u)}let a=await Promise.all(s);return{data:DD(a),specs:n}}function T6(e,t){let n={},s,r=0;for(let a of t){let o=a.name,i=a.dtype,l=a.shape,u=Nt(l),c;if("quantization"in a){let p=a.quantization;if(p.dtype==="uint8"||p.dtype==="uint16"){if(!("min"in p&&"scale"in p))throw new Error(`Weight ${a.name} with quantization ${p.dtype} doesn't have corresponding metadata min and scale.`)}else if(p.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${a.name} is quantized with ${p.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${p.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let d=N3[p.dtype],h=e.slice(r,r+u*d),f=p.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(i==="float32")if(p.dtype==="uint8"||p.dtype==="uint16"){c=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];c[m]=g*p.scale+p.min}}else if(p.dtype==="float16")s===void 0&&(s=zD()),c=s(f);else throw new Error(`Unsupported quantization type ${p.dtype} for weight type float32.`);else if(i==="int32"){if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error(`Unsupported quantization type ${p.dtype} for weight type int32.`);c=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];c[m]=Math.round(g*p.scale+p.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=u*d}else if(i==="string"){let p=Nt(a.shape);c=[];for(let d=0;d<p;d++){let h=new Uint32Array(e.slice(r,r+Am))[0];r+=Am;let f=new Uint8Array(e.slice(r,r+h));c.push(f),r+=h}}else{let p=N3[i],d=e.slice(r,r+u*p);if(i==="float32")c=new Float32Array(d);else if(i==="int32")c=new Int32Array(d);else if(i==="bool")c=new Uint8Array(d);else if(i==="complex64"){c=new Float32Array(d);let h=new Float32Array(c.length/2),f=new Float32Array(c.length/2);for(let y=0;y<h.length;y++)h[y]=c[y*2],f[y]=c[y*2+1];let m=ct(h,l,"float32"),g=ct(f,l,"float32");n[o]=ma(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=u*p}i!=="complex64"&&(n[o]=ct(c,l,i))}return n}function DD(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let s=new Uint8Array(t),r=0;return n.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}var Dy=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function vv(e){return Dy?Buffer.byteLength(e):new Blob([e]).size}function $D(e){if(Dy)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function PD(e){if(Dy){let s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function $y(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function wv(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function N6(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function Py(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function oh(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:vv(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:vv(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function FD(){let e=n=>{let s=n<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function OD(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function MD(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function zD(){let e=FD(),t=OD(),n=MD();return s=>{let r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let o=0;o<s.length;o++){let i=s[o],l=e[n[i>>10]+(i&1023)]+t[i>>10];a[o]=l}return new Float32Array(r)}}var qt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return qt.instance==null&&(qt.instance=new qt),qt.instance}static registerSaveRouter(e){qt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){qt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return qt.getHandlers(e,"save")}static getLoadHandlers(e,t){return qt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let s=[];return(t==="load"?qt.getInstance().loadRouters:qt.getInstance().saveRouters).forEach(a=>{let o=a(e,n);o!==null&&s.push(o)}),s}},LD=e=>qt.registerSaveRouter(e),BD=e=>qt.registerLoadRouter(e),WD=e=>qt.getSaveHandlers(e),VD=(e,t)=>qt.getLoadHandlers(e,t),E3="tensorflowjs",R3=1,Vi="models_store",ja="model_info_store";function E6(){if(!j().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function _3(e){let t=e.result;t.createObjectStore(Vi,{keyPath:"modelPath"}),t.createObjectStore(ja,{keyPath:"modelPath"})}var Zi=class{constructor(e){if(this.indexedDB=E6(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,s)=>{let r=this.indexedDB.open(E3,R3);r.onupgradeneeded=()=>_3(r),r.onsuccess=()=>{let a=r.result;if(t==null){let o=a.transaction(Vi,"readonly"),l=o.objectStore(Vi).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=u=>(a.close(),s(l.error)),o.oncomplete=()=>a.close()}else{let o=oh(t),i=a.transaction(ja,"readwrite"),l=i.objectStore(ja),u=l.put({modelPath:this.modelPath,modelArtifactsInfo:o}),c;u.onsuccess=()=>{c=a.transaction(Vi,"readwrite");let d=c.objectStore(Vi).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o});d.onsuccess=()=>n({modelArtifactsInfo:o}),d.onerror=h=>{l=i.objectStore(ja);let f=l.delete(this.modelPath);f.onsuccess=()=>(a.close(),s(d.error)),f.onerror=m=>(a.close(),s(d.error))}},u.onerror=p=>(a.close(),s(u.error)),i.oncomplete=()=>{c==null?a.close():c.oncomplete=()=>a.close()}}},r.onerror=a=>s(r.error)})}};Zi.URL_SCHEME="indexeddb://";var R6=e=>j().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Zi.URL_SCHEME)?UD(e.slice(Zi.URL_SCHEME.length)):null;qt.registerSaveRouter(R6);qt.registerLoadRouter(R6);function UD(e){return new Zi(e)}function GD(e){return e.startsWith(Zi.URL_SCHEME)?e.slice(Zi.URL_SCHEME.length):e}var HD=class{constructor(){this.indexedDB=E6()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(E3,R3);n.onupgradeneeded=()=>_3(n),n.onsuccess=()=>{let s=n.result,r=s.transaction(ja,"readonly"),o=r.objectStore(ja).getAll();o.onsuccess=()=>{let i={};for(let l of o.result)i[l.modelPath]=l.modelArtifactsInfo;e(i)},o.onerror=i=>(s.close(),t(o.error)),r.oncomplete=()=>s.close()},n.onerror=s=>t(n.error)})}async removeModel(e){return e=GD(e),new Promise((t,n)=>{let s=this.indexedDB.open(E3,R3);s.onupgradeneeded=()=>_3(s),s.onsuccess=()=>{let r=s.result,a=r.transaction(ja,"readwrite"),o=a.objectStore(ja),i=o.get(e),l;i.onsuccess=()=>{if(i.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let u=o.delete(e),c=()=>{l=r.transaction(Vi,"readwrite");let d=l.objectStore(Vi).delete(e);d.onsuccess=()=>t(i.result.modelArtifactsInfo),d.onerror=h=>n(i.error)};u.onsuccess=c,u.onerror=p=>(c(),r.close(),n(i.error))}},i.onerror=u=>(r.close(),n(i.error)),a.oncomplete=()=>{l==null?r.close():l.oncomplete=()=>r.close()}},s.onerror=r=>n(s.error)})}},pa="/",Wu="tensorflowjs_models",_6="info",jD="model_topology",qD="weight_specs",XD="weight_data",KD="model_metadata";function D6(e){return{info:[Wu,e,_6].join(pa),topology:[Wu,e,jD].join(pa),weightSpecs:[Wu,e,qD].join(pa),weightData:[Wu,e,XD].join(pa),modelMetadata:[Wu,e,KD].join(pa)}}function $6(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function ZD(e){let t=e.split(pa);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(pa)}function YD(e){return e.startsWith(Yi.URL_SCHEME)?e.slice(Yi.URL_SCHEME.length):e}var Yi=class{constructor(e){if(!j().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=D6(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=oh(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,$D(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(r){throw $6(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let o=JSON.parse(r);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=PD(a),t}};Yi.URL_SCHEME="localstorage://";var P6=e=>j().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Yi.URL_SCHEME)?JD(e.slice(Yi.URL_SCHEME.length)):null;qt.registerSaveRouter(P6);qt.registerLoadRouter(P6);function JD(e){return new Yi(e)}var QD=class{constructor(){O(j().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),O(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Wu+pa,n=pa+_6;for(let s=0;s<this.LS.length;++s){let r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){let a=ZD(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=YD(e);let t=D6(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return $6(t),n}},Gu="://",ps=class{constructor(){this.managers={}}static getInstance(){return ps.instance==null&&(ps.instance=new ps),ps.instance}static registerManager(e,t){O(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Gu)&&(e=e.slice(0,e.indexOf(Gu))),O(e.length>0,()=>"scheme must not be an empty string.");let n=ps.getInstance();O(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=ps.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ps.getInstance().managers)}};function nm(e){if(e.indexOf(Gu)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ps.getSchemes().join(",")}`);return{scheme:e.split(Gu)[0],path:e.split(Gu)[1]}}async function F6(e,t,n=!1){O(e!==t,()=>`Old path and new path are the same: '${e}'`);let s=qt.getLoadHandlers(e);O(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),O(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);let r=s[0],a=qt.getSaveHandlers(t);O(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),O(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);let o=a[0],i=nm(e).scheme,l=nm(e).path,u=i===nm(e).scheme,c=await r.load();n&&u&&await ps.getManager(i).removeModel(l);let p=await o.save(c);return n&&!u&&await ps.getManager(i).removeModel(l),p.modelArtifactsInfo}async function e$(){let e=ps.getSchemes(),t={};for(let n of e){let s=await ps.getManager(n).listModels();for(let r in s){let a=n+Gu+r;t[a]=s[r]}}return t}async function t$(e){let t=nm(e);return ps.getManager(t.scheme).removeModel(t.path)}async function n$(e,t){return F6(e,t,!1)}async function s$(e,t){return F6(e,t,!0)}var r$=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(j().get("IS_BROWSER")){j().setPlatform("browser",new r$);try{ps.registerManager(Yi.URL_SCHEME,new QD)}catch(e){}try{ps.registerManager(Zi.URL_SCHEME,new HD)}catch(e){}}var a$={importFetch:()=>p_()},u3,o$=class{constructor(){this.util=h_(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return j().global.fetch!=null?j().global.fetch(e,t):(u3==null&&(u3=a$.importFetch()),u3(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};j().get("IS_NODE")&&!j().get("IS_BROWSER")&&j().setPlatform("node",new o$);function We(e,t="float32",n){return t=t||"float32",Sy(e),new pn(e,t,n)}function i$(e,t){let n=$(e,"x","cast");if(!l6(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let s={x:n},r={dtype:t};return L.runKernel(yo,s,r)}var ye=B({cast_:i$});function l$(e){let n={x:$(e,"x","clone","string_or_numeric")};return L.runKernel(Do,n)}var On=B({clone_:l$});function Fy(e,t=!1){console.log(e.toString(t))}I6();var u$={buffer:We,cast:ye,clone:On,print:Fy};bD(u$);var Ns={};Ge(Ns,{browserFiles:()=>g$,browserHTTPRequest:()=>v$,concatenateArrayBuffers:()=>$y,copyModel:()=>n$,decodeWeights:()=>T6,encodeWeights:()=>_D,fromMemory:()=>k$,fromMemorySync:()=>B6,getLoadHandlers:()=>VD,getModelArtifactsForJSON:()=>Py,getModelArtifactsInfoForJSON:()=>oh,getSaveHandlers:()=>WD,http:()=>My,isHTTPScheme:()=>D3,listModels:()=>e$,loadWeights:()=>y$,moveModel:()=>s$,registerLoadRouter:()=>BD,registerSaveRouter:()=>LD,removeModel:()=>t$,weightsLoaderFactory:()=>M6,withSaveHandler:()=>I$,withSaveHandlerSync:()=>S$});var c$="model",d$=".json",p$=".weights.bin";function kv(e){return new Promise(t=>setTimeout(t)).then(e)}var Yu=class{constructor(e){if(!j().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Yu.URL_SCHEME)&&(e=e.slice(Yu.URL_SCHEME.length)),(e==null||e.length===0)&&(e=c$),this.modelJsonFileName=e+d$,this.weightDataFileName=e+p$}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=N6(e,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await kv(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let o=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;o.download=this.weightDataFileName,o.href=t,await kv(()=>o.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:oh(e)}}}};Yu.URL_SCHEME="downloads://";var h$=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=s=>{let r=JSON.parse(s.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let i=Py(r,l=>this.loadWeights(l));e(i)},n.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let s=this.checkManifestAndWeightFiles(e),r=n.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(r).then(a=>[t,$y(a)])}loadWeightsFile(e,t){return new Promise((n,s)=>{let r=new FileReader;r.onload=a=>{let o=a.target.result;n(o)},r.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(r=>wv(r.name)),s={};for(let r of e)r.paths.forEach(a=>{let o=wv(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),n.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);s[a]=this.weightsFiles[n.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}},f$=e=>j().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Yu.URL_SCHEME)?m$(e.slice(Yu.URL_SCHEME.length)):null;qt.registerSaveRouter(f$);function m$(e="model"){return new Yu(e)}function g$(e){return new h$(e)}function Iv(e,t,n,s){o(e),n=n==null?0:n,s=s==null?1:s,i(n,s);let r=0,a=l=>(l.then(u=>{let c=n+ ++r/e.length*(s-n);return t(c),u}),l);function o(l){O(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,u){O(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),O(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),O(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(e.map(a))}async function O6(e,t){t==null&&(t={});let n=t.fetchFunc==null?j().platform.fetch:t.fetchFunc,s=e.map(p=>n(p,t.requestInit,{isBinary:!0})),r=0,a=.5,i=(t.onProgress==null?await Promise.all(s):await Iv(s,t.onProgress,r,a)).map(p=>p.arrayBuffer()),l=.5,u=1;return t.onProgress==null?await Promise.all(i):await Iv(i,t.onProgress,l,u)}async function y$(e,t="",n,s){return M6(o=>O6(o,{requestInit:s}))(e,t,n)}function M6(e){return async(t,n="",s)=>{let r=t.map(()=>!1),a={},o=s!=null?s.map(()=>!1):[],i=[];if(t.forEach((h,f)=>{let m=0;h.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,x=N3[y]*Nt(g.shape),A=()=>{r[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:x})};s!=null?s.forEach((b,w)=>{b===g.name&&(A(),o[w]=!0)}):A(),i.push(g.name),m+=x})}),!o.every(h=>h)){let h=s.filter((f,m)=>!o[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let l=r.reduce((h,f,m)=>(f&&h.push(m),h),[]),u=[];l.forEach(h=>{t[h].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;u.push(m)})});let c=await e(u),p={},d=0;return l.forEach(h=>{let f=t[h].paths.length,m=0;for(let b=0;b<f;b++)m+=c[d+b].byteLength;let g=new ArrayBuffer(m),y=new Uint8Array(g),x=0;for(let b=0;b<f;b++){let w=new Uint8Array(c[d+b]);y.set(w,x),x+=w.byteLength}a[h].forEach(b=>{let w=g.slice(b.groupOffset,b.groupOffset+b.sizeBytes),I=T6(w,[b.manifestEntry]);for(let k in I)p[k]=I[k]}),d+=f}),p}}var A$="application/octet-stream",x$="application/json",Oy=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(O(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=j().platform.fetch,O(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&O(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=N6(e,n);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:x$}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:A$}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:oh(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,s=t.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Py(t,r=>this.loadWeights(r))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=b$(t),r=this.weightPathPrefix||n,a=[];for(let u of e)a.push(...u.weights);let o=[],i=[];for(let u of e)for(let c of u.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(c)):o.push(r+c+s);this.weightUrlConverter&&o.push(...await Promise.all(i));let l=await O6(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,$y(l)]}};Oy.URL_SCHEME_REGEX=/^https?:\/\//;function b$(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function D3(e){return e.match(Oy.URL_SCHEME_REGEX)!=null}var z6=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>D3(s)):n=D3(e),n)return My(e,t)}return null};qt.registerSaveRouter(z6);qt.registerLoadRouter(z6);function My(e,t){return new Oy(e,t)}function v$(e,t){return My(e,t)}var c3=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},L6=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},w$=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function k$(e,t,n,s){let r=arguments;return new w$(B6(...r))}function B6(e,t,n,s){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new c3(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new c3({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new c3({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function I$(e){return new L6(e)}function S$(e){return new L6(e)}var W6={};Ge(W6,{confusionMatrix:()=>W$});function C$(e,t,n=!1,s=!1){let r=$(e,"a","matMul"),a=$(t,"b","matMul");[r,a]=Gt(r,a);let o={a:r,b:a},i={transposeA:n,transposeB:s};return L.runKernel(go,o,i)}var Qe=B({matMul_:C$});function T$(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:$(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:s};return L.runKernel(Rl,a,o)}var Ju=B({oneHot_:T$});function zy(){j().set("PROD",!0)}function N$(){j().set("DEBUG",!0)}function E$(){j().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Ly(e){j().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}vD(Ly);function R$(){L.disposeVariables()}function nn(){return L}function xm(){return L.memory()}function _$(e){return L.profile(e)}function Z(e,t){return L.tidy(e,t)}function J(e){Ry(e).forEach(n=>n.dispose())}function An(e){return L.keep(e)}function D$(e){return L.time(e)}function By(e){return L.setBackend(e)}function Wc(){return L.ready()}function Ln(){return L.backendName}function $$(e){L.removeBackend(e)}function Wy(e){return L.findBackend(e)}function P$(e){return L.findBackendFactory(e)}function Xl(e,t,n=1){return L.registerBackend(e,t,n)}function Bn(){return L.backend}function F$(e,t){j().setPlatform(e,t)}function O$(e){let n={input:$(e,"input","imag")};return L.runKernel(Hp,n)}var ih=B({imag_:O$});function M$(e){let n={x:$(e,"x","neg")};return L.runKernel(Sl,n)}var Dt=B({neg_:M$});function z$(e){let n={input:$(e,"input","real")};return L.runKernel(Xp,n)}var Qu=B({real_:z$});function L$(e,t,n){let s=$(e,"x","transpose");if(t==null&&(t=s.shape.map((o,i)=>i).reverse()),O(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(o=>{O(o>=0&&o<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();let r={x:s},a={perm:t};return s.dtype==="complex64"?Z(()=>{let o=Qu(s),i=ih(s);return o=L.runKernel(jr,{x:o},a),i=L.runKernel(jr,{x:i},a),n&&(i=Dt(i)),ma(o,i)}):L.runKernel(jr,r,a)}var et=B({transpose_:L$});function B$(e,t,n){let s=$(e,"labels","confusionMatrix"),r=$(t,"predictions","confusionMatrix");O(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),O(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),O(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),O(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),O(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=Ju(ye(s,"int32"),n),o=Ju(ye(r,"int32"),n),i=et(a),l=Qe(i,o);return ye(l,"int32")}var W$=B({confusionMatrix_:B$}),Kl={};Ge(Kl,{assertAndGetBroadcastShape:()=>wt,getBroadcastDims:()=>V6,getReductionAxes:()=>rn});function V6(e,t){let n=e.length,s=[];for(let r=0;r<n;r++){let a=n-1-r,o=e[a]||1;(t[t.length-1-r]||1)>1&&o===1&&s.unshift(a)}return s}function rn(e,t){let n=[];for(let s=0;s<t.length;s++){let r=e[e.length-s-1],a=t.length-s-1,o=t[a];(r==null||r===1&&o>1)&&n.unshift(a)}return n}function wt(e,t){let n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let a=e[e.length-r-1];a==null&&(a=1);let o=t[t.length-r-1];if(o==null&&(o=1),a===1)n.unshift(o);else if(o===1)n.unshift(a);else if(a!==o){let i=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(i)}else n.unshift(a)}return n}var Ks={};Ge(Ks,{fromPixels:()=>X$,fromPixelsAsync:()=>j$,toPixels:()=>q$});function Vy(e,t,n){if(il(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let s=Kr(e,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ii(e,t,s,n)}var $i;function U6(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)o=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r&&r&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(gm(vp,L.backendName)!=null){let f={pixels:e},m={numChannels:t};return L.runKernel(vp,f,m)}let[u,c]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],p;if(o)p=e.getContext("2d").getImageData(0,0,u,c).data;else if(s||n)p=e.data;else if(a||r||i){if($i==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")$i=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else $i=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});$i.canvas.width=u,$i.canvas.height=c,$i.drawImage(e,0,0,u,c),p=$i.getImageData(0,0,u,c).data}let d;if(t===4)d=new Int32Array(p);else{let f=u*c;d=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)d[m*t+g]=p[m*4+g]}return Vy(d,[c,u,t],"int32")}function V$(e){return e!=null&&e.data instanceof Uint8Array}function U$(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function G$(e){return e!=null&&e.width!==0&&e.height!==0}function H$(e){return U$()&&!(e instanceof ImageBitmap)&&G$(e)&&!V$(e)}async function j$(e,t=3){let n=null;if(j().getBool("WRAP_TO_IMAGEBITMAP")&&H$(e)){let s;try{s=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){s=null}s!=null&&s.width===e.width&&s.height===e.height?n=s:n=e}else n=e;return U6(n,t)}async function q$(e,t){let n=$(e,"img","toPixels");if(!(e instanceof nt)){let u=n;n=ye(u,"int32"),u.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[s,r]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let o=await n.data(),i=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let u=0;u<s*r;++u){let c=[0,0,0,255];for(let d=0;d<a;d++){let h=o[u*a+d];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);a===1?(c[0]=h*i,c[1]=h*i,c[2]=h*i):c[d]=h*i}let p=u*4;l[p+0]=Math.round(c[0]),l[p+1]=Math.round(c[1]),l[p+2]=Math.round(c[2]),l[p+3]=Math.round(c[3])}if(t!=null){t.width=r,t.height=s;let u=t.getContext("2d"),c=new ImageData(l,r,s);u.putImageData(c,0,0)}return n!==e&&n.dispose(),l}var X$=B({fromPixels_:U6}),Uy={};Ge(Uy,{prepareAndValidate:()=>G6});function G6(e,t){let n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(Nt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,a=r[r.length-1],o=1;for(let p=0;p<r.length-1;++p)o*=r[p];let i=e.shape,l=r.slice();l.pop();let u=1;for(let p=a;p<n;++p)u*=i[p],l.push(i[p]);let c=[...hc(e.shape).map(p=>p/u),1].slice(0,a);return[l,o,u,c]}var Gy={};Ge(Gy,{calculateShapes:()=>H6,validateInput:()=>jy,validateUpdateShape:()=>Hy});function Hy(e,t,n){let s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+` update.rank != ${r+e.length-s}`);for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+s])throw new Error(a+` updates.shape[${o+r}] (${n.shape[o+r]}) != shape[${o+r}] (${e[o+r]})`)}function jy(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Hy(n,t,e)}function H6(e,t,n){let s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length,o=1;for(let p=r;p<a;++p)o*=n[p];let i=r<1?1:r,l=Nt(t.shape)/i,u=[...hc(n.slice(0,r)),1],c=Nt(n);return{sliceRank:r,numUpdates:l,sliceSize:o,strides:u,outputSize:c}}var Ut={};Ge(Ut,{assertParamsValid:()=>Z$,computeFlatOffset:()=>tP,computeOutShape:()=>J$,getNormalizedAxes:()=>Q$,isSliceContinous:()=>eP,maskToAxes:()=>Y$,parseSliceParams:()=>ew,sliceInfo:()=>nP,startForAxis:()=>J6,startIndicesWithElidedDims:()=>K6,stopForAxis:()=>Q6,stopIndicesWithElidedDims:()=>Z6,stridesForAxis:()=>Y6,stridesWithElidedDims:()=>j6});var $3=-2,K$=-1;function Z$(e,t,n){let s=e.shape.length;O(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),O(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)O(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function Y$(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function J$(e,t,n){let s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function j6(e,t,n,s){let r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)a===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function q6(e,t,n){return n<=e?n:n-(t-1)}function X6(e,t){let n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function Q$(e,t,n,s,r,a,o,i,l){let u=e.length,c=new Array(u),p=new Array(u),d=new Array(u);if(t.length&&n>0){let h=t[0],f=n+1;c=K6(o,h,f,s,e),p=Z6(i,h,f,r,e),d=j6(a,h,f,e)}else for(let h=0;h<u;h++)c[h]=J6(o,s,a,e,h,l),p[h]=Q6(i,r,a,e,h,l),d[h]=Y6(a,h,l);return{begin:c,end:p,strides:d}}function K6(e,t,n,s,r){let a=[...r],o=X6(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{let l=q6(t,n,i),u=s[l];e&1<<l&&(u=0),a[i]=u}return a}function Z6(e,t,n,s,r){let a=[...r],o=X6(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{let l=q6(t,n,i),u=s[l];e&1<<l&&(u=Number.MAX_SAFE_INTEGER),a[i]=u}for(let i=0;i<a.length;i++){let l=r[i];a[i]<0&&(a[i]+=l),a[i]=bp(0,a[i],r[i])}return a}function Y6(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function J6(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),o=bp(0,o,l-1),o}function Q6(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),i>0?o=bp(0,o,l):o=bp(-1,o,l-1),o}function eP(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function tP(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function ew(e,t,n){let s,r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(o=>{O(o!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(r).fill(-1):typeof n=="number"?a=[n,...new Array(r-1).fill(-1)]:n.length<r?a=n.concat(new Array(r-n.length).fill(-1)):a=n,a=a.map((o,i)=>o>=0?o:(O(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),e.shape[i]-s[i])),[s,a]}function nP(e,t,n,s,r,a,o,i,l){let u;if(s==null?(u=new Array(t.length),u.fill(1)):u=s,o!=null&&(o&o-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};for(let A=0;A<p.dims;A++)c&&(1<<A&i)!==0&&p.numAddAxisAfterEllipsis++,1<<A&o&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};sP(p,d);let h=!0,f=!0,m=!0,g=[],y=[];for(let A=0;A<e.length;++A){if(d.strides[A]===0)throw Error(`strides[${A}] must be non-zero`);let b=!!(d.shrinkAxisMask&1<<A),w=e[A];if(w===-1){g.push(b?1:-1);continue}let I=[d.beginMask&1<<A,d.endMask&1<<A],k=[d.strides[A]>0?0:-1,d.strides[A]>0?w:w-1];if(b&&d.strides[A]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[A]===1;let R=!!(d.beginMask&1<<A&&d.endMask&1<<A);if(d.beginValid&&d.endValid){if(b){let P=d.begin[A]<0?w+d.begin[A]:d.begin[A];if(d.begin[A]=P,d.end[A]=d.begin[A]+1,P<0||P>=w)throw Error(`slice index ${d.begin[A]} of dimension ${A} out of bounds.`)}else d.begin[A]=Sv(d.begin[A],0,d.strides[A],w,I,k),d.end[A]=Sv(d.end[A],1,d.strides[A],w,I,k);let E=d.strides[A]===1&&d.begin[A]===0&&d.end[A]===w;h=h&&E,f=f&&(A===0&&d.strides[A]===1||E)}else h=h&&d.strides[A]===1&&R,f=f&&(A===0&&d.strides[A]===1||R);let _,D=!1;if(d.beginValid&&d.endValid?(_=d.end[A]-d.begin[A],D=!0):b?(_=1,D=!0):R&&w>=0&&(d.strides[A]<0?_=-w:_=w,D=!0),D){let E;_===0||_<0!=d.strides[A]<0?E=0:E=Math.trunc(_/d.strides[A])+(_%d.strides[A]!==0?1:0),g.push(E)}else g.push(-1)}for(let A=0;A<d.finalShapeGatherIndices.length;++A){let b=d.finalShapeGatherIndices[A];b>=0?y.push(g[b]):b===$3&&y.push(1)}return{finalShapeSparse:y.filter((A,b)=>d.finalShapeGatherIndices[b]!==$3),finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function sP(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push($3),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[s]),e.end!=null&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(K$),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function Sv(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{let o=e<0?s+e:e;return o<a[0]?a[0]:o>a[1]?a[1]:o}}var de={};Ge(de,{Serializable:()=>tw,SerializationMap:()=>Li,registerClass:()=>li});var tw=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Li=class{constructor(){this.classNameMap={}}static getMap(){return Li.instance==null&&(Li.instance=new Li),Li.instance}static register(e){Li.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function li(e){O(e.className!=null,()=>"Class being registered does not have the static className property defined."),O(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),O(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Li.register(e)}var nw={};Ge(nw,{TEST_EPSILON_FLOAT16:()=>sw,encodeStrings:()=>rw,expectArrayBuffersEqual:()=>cP,expectArraysClose:()=>aP,expectArraysEqual:()=>iP,expectNumbersClose:()=>lP,expectPromiseToFail:()=>oP,expectValuesInRange:()=>uP,testEpsilon:()=>qy});var rP=.001,sw=.1;function aP(e,t,n){return n==null&&(n=qy()),P3(e,t,(s,r)=>Xy(s,r,n))}function qy(){return L.backend.floatPrecision()===32?rP:sw}function P3(e,t,n){let s=!0;if((Fn(e)||Fn(t))&&(s=!1),Fn(e)&&Fn(t)&&(s=!0),s){let o=e.constructor.name,i=t.constructor.name;if(o!==i)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${i}`)}if(Array.isArray(e)&&Array.isArray(t)){let o=Kr(e),i=Kr(t);if(!po(o,i))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${i}]`)}let r=Fn(e)?e:Ki(e),a=Fn(t)?t:Ki(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.
Actual:   ${r}.
Expected: ${a}.`);for(let o=0;o<a.length;++o){let i=r[o],l=a[o];if(!n(i,l))throw new Error(`Arrays differ: actual[${o}] = ${i}, expected[${o}] = ${l}.
Actual:   ${r}.
Expected: ${a}.`)}}function oP(e,t){e().then(()=>t.fail(),()=>t())}function iP(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Ha(e)||Ha(e[0])||Ha(t)||Ha(t[0])?P3(e,n,(s,r)=>s==r):P3(e,t,(s,r)=>Xy(s,r,0))}function lP(e,t,n){if(n==null&&(n=qy()),!Xy(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Xy(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function uP(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function cP(e,t){let n=new Float32Array(e),s=new Float32Array(t);if(n.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${n.length}`);for(let r=0;r<s.length;r++)if(n[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${n[r]} instead`)}function rw(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?rw(n):e[t]=sh(n)}return e}var Ky="3.19.0";function dP(e,t){let n=$(e,"a","add"),s=$(t,"b","add");[n,s]=Gt(n,s);let r={a:n,b:s};return L.runKernel(ba,r)}var ue=B({add_:dP});function pP(e,t){let n=$(e,"a","floorDiv"),s=$(t,"b","floorDiv");[n,s]=Gt(n,s);let r={a:n,b:s};return L.runKernel(Eo,r)}var Vc=B({floorDiv_:pP});function hP(e,t){let n=$(e,"a","div"),s=$(t,"b","div");if([n,s]=Gt(n,s),n.dtype==="int32"&&s.dtype==="int32")return Vc(n,s);let r={a:n,b:s},a={};return L.runKernel(So,r,a)}var fe=B({div_:hP});function fP(e,t){let n=$(e,"a","mul"),s=$(t,"b","mul");[n,s]=Gt(n,s);let r={a:n,b:s};return L.runKernel(Vo,r)}var z=B({mul_:fP});function mP(e){let t=$(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return L.runKernel(Wp,n)}else{let n={x:t};return L.runKernel(ll,n)}}var en=B({abs_:mP});function gP(e){let n={x:$(e,"x","acos")};return L.runKernel(fc,n)}var Zy=B({acos_:gP});function yP(e){let n={x:$(e,"x","acosh")};return L.runKernel(mc,n)}var Yy=B({acosh_:yP});function AP(e){O(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),O(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,a)=>$(r,`tensors${a}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!po(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let s=t;return L.runKernel(ho,s)}var y0=B({addN_:AP});function xP(e,t=null,n=!1){let r={x:$(e,"x","all","bool")},a={axis:t,keepDims:n};return L.runKernel(gc,r,a)}var A0=B({all_:xP});function bP(e,t=null,n=!1){let r={x:$(e,"x","any","bool")},a={axis:t,keepDims:n};return L.runKernel(yc,r,a)}var Tp=B({any_:bP});function vP(e,t=0){let s={x:$(e,"x","argMax")},r={axis:t};return L.runKernel(fo,s,r)}var Rs=B({argMax_:vP});function wP(e,t=0){let s={x:$(e,"x","argMin")},r={axis:t};return L.runKernel(Ac,s,r)}var Jy=B({argMin_:wP});function kP(e){let n={x:$(e,"x","asin")};return L.runKernel(xc,n)}var Qy=B({asin_:kP});function IP(e){let n={x:$(e,"x","asinh")};return L.runKernel(bc,n)}var eA=B({asinh_:IP});function SP(e){let n={x:$(e,"x","atan")};return L.runKernel(vc,n)}var tA=B({atan_:SP});function CP(e,t){let n=$(e,"a","atan2"),s=$(t,"b","atan2");[n,s]=Gt(n,s);let r={a:n,b:s};return L.runKernel(kc,r)}var nA=B({atan2_:CP});function TP(e){let n={x:$(e,"x","atanh")};return L.runKernel(wc,n)}var sA=B({atanh_:TP});function NP(e,t,n,s,r="NHWC",a){let o=e[3],i=[...t,o],l=iw(r);return lh(e,i,n,a,s,null,null,l)}function aw(e,t,n,s,r,a,o="channelsLast"){let[i,l]=bm(t),u;if(o==="channelsLast")u=[i,l,e[3],e[3]];else if(o==="channelsFirst")u=[i,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return lh(e,u,n,s,r,a,!1,o)}function EP(e,t,n,s,r,a,o="NDHWC"){let[i,l,u]=F3(t),c,p;if(o==="NDHWC")p="channelsLast",c=[i,l,u,e[4],e[4]];else if(o==="NCDHW")p="channelsFirst",c=[i,l,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return ow(e,c,n,s,r,!1,p,a)}function lh(e,t,n,s,r,a,o=!1,i="channelsLast"){let[l,u,c,p]=[-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,p]=e;else if(i==="channelsFirst")[l,p,u,c]=e;else throw new Error(`Unknown dataFormat ${i}`);let[d,h,,f]=t,[m,g]=bm(n),[y,x]=bm(s),A=Hu(d,y),b=Hu(h,x),{padInfo:w,outHeight:I,outWidth:k}=DP(r,u,c,m,g,A,b,a,i),R=o?f*p:f,_;return i==="channelsFirst"?_=[l,R,I,k]:i==="channelsLast"&&(_=[l,I,k,R]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:p,outHeight:I,outWidth:k,outChannels:R,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:h,effectiveFilterHeight:A,effectiveFilterWidth:b,dilationHeight:y,dilationWidth:x,inShape:e,outShape:_,filterShape:t}}function ow(e,t,n,s,r,a=!1,o="channelsLast",i){let[l,u,c,p,d]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,u,c,p,d]=e;else if(o==="channelsFirst")[l,d,u,c,p]=e;else throw new Error(`Unknown dataFormat ${o}`);let[h,f,m,,g]=t,[y,x,A]=F3(n),[b,w,I]=F3(s),k=Hu(h,b),R=Hu(f,w),_=Hu(m,I),{padInfo:D,outDepth:E,outHeight:P,outWidth:C}=$P(r,u,c,p,y,x,A,k,R,_,i),M=a?g*d:g,W;return o==="channelsFirst"?W=[l,M,E,P,C]:o==="channelsLast"&&(W=[l,E,P,C,M]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:c,inWidth:p,inChannels:d,outDepth:E,outHeight:P,outWidth:C,outChannels:M,padInfo:D,strideDepth:y,strideHeight:x,strideWidth:A,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:k,effectiveFilterHeight:R,effectiveFilterWidth:_,dilationDepth:b,dilationHeight:w,dilationWidth:I,inShape:e,outShape:W,filterShape:t}}function RP(e,t,n,s,r){s==null&&(s=rA(e,t,n));let a=e[0],o=e[1],i=Hi((a-t+2*s)/n+1,r),l=Hi((o-t+2*s)/n+1,r);return[i,l]}function _P(e,t,n,s,r,a){r==null&&(r=rA(e,t,s));let o=e[0],i=e[1],l=e[2],u=Hi((o-t+2*r)/s+1,a),c=Hi((i-t+2*r)/s+1,a),p=Hi((l-t+2*r)/s+1,a);return[u,c,p,n]}function rA(e,t,n,s=1){let r=Hu(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function bm(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function F3(e){return typeof e=="number"?[e,e,e]:e}function Hu(e,t){return t<=1?e:e+(e-1)*(t-1)}function DP(e,t,n,s,r,a,o,i,l){let u,c,p;if(typeof e=="number"){u={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=RP([t,n],a,s,e,i);c=h[0],p=h[1]}else if(e==="same"){c=Math.ceil(t/s),p=Math.ceil(n/r);let d=Math.max(0,(c-1)*s+a-t),h=Math.max(0,(p-1)*r+o-n),f=Math.floor(d/2),m=d-f,g=Math.floor(h/2),y=h-g;u={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(e==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),p=Math.ceil((n-o+1)/r);else if(typeof e=="object"){let d=l==="channelsLast"?e[1][0]:e[2][0],h=l==="channelsLast"?e[1][1]:e[2][1],f=l==="channelsLast"?e[2][0]:e[3][0],m=l==="channelsLast"?e[2][1]:e[3][1];u={top:d,bottom:h,left:f,right:m,type:d===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=Hi((t-a+d+h)/s+1,i),p=Hi((n-o+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outHeight:c,outWidth:p}}function $P(e,t,n,s,r,a,o,i,l,u,c){let p,d,h,f;if(typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=_P([t,n,s,1],i,1,r,e,c);d=g[0],h=g[1],f=g[2]}else if(e==="same"){d=Math.ceil(t/r),h=Math.ceil(n/a),f=Math.ceil(s/o);let m=(d-1)*r+i-t,g=(h-1)*a+l-n,y=(f-1)*o+u-s,x=Math.floor(m/2),A=m-x,b=Math.floor(g/2),w=g-b,I=Math.floor(y/2),k=y-I;p={top:b,bottom:w,left:I,right:k,front:x,back:A,type:"SAME"}}else if(e==="valid")p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-i+1)/r),h=Math.ceil((n-l+1)/a),f=Math.ceil((s-u+1)/o);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:d,outHeight:h,outWidth:f}}function Hi(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function no(e){let[t,n,s]=bm(e);return t===1&&n===1&&s===1}function Jr(e,t){return no(e)||no(t)}function iw(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function as(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")O(Ku(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{O(Ku(r),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function PP(e,t){let s={x:$(e,"x","reshape","string_or_numeric")},r={shape:t};return L.runKernel(Dl,s,r)}var V=B({reshape_:PP});function FP(e,t,n,s,r){let a=$(e,"x","avgPool","float32"),o=1;O(Jr(n,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);let i=a,l=!1;a.rank===3&&(l=!0,i=V(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),as("avgPool",s,r);let u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},p=L.runKernel(mo,u,c);return p=ye(p,a.dtype),l?V(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var uh=B({avgPool_:FP});function OP(e,t,n,s,r,a="NDHWC"){let o=$(e,"x","avgPool3d","float32"),i=o,l=!1;o.rank===4&&(l=!0,i=V(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),O(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),as("avgPool3d",s,r);let u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},p=L.runKernel(Lp,u,c);return p=ye(p,i.dtype),l?V(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var aA=B({avgPool3d_:OP});function MP(e,t=0){O(e.length>=1,()=>"Pass at least one tensor to concat");let n=Cp(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return On(n[0]);let s=n,r={axis:t};return L.runKernel(cl,s,r)}var St=B({concat_:MP});function zP(e){let n={x:$(e,"x","sigmoid","float32")};return L.runKernel(Qo,n)}var Cn=B({sigmoid_:zP});function LP(e,t,n){let s=$(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");let r={x:s},a={begin:t,size:n};return L.runKernel(Ml,r,a)}var ze=B({slice_:LP});function BP(e){let n={x:$(e,"x","tanh","float32")};return L.runKernel(ai,n)}var Ji=B({tanh_:BP});function WP(e,t,n,s,r,a){let o=$(e,"forgetBias","basicLSTMCell"),i=$(t,"lstmKernel","basicLSTMCell"),l=$(n,"lstmBias","basicLSTMCell"),u=$(s,"data","basicLSTMCell"),c=$(r,"c","basicLSTMCell"),p=$(a,"h","basicLSTMCell"),d=St([u,p],1),h=Qe(d,i),f=ue(h,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],x=ze(f,[0,0],y),A=ze(f,[0,g],y),b=ze(f,[0,g*2],y),w=ze(f,[0,g*3],y),I=ue(z(Cn(x),Ji(A)),z(c,Cn(ue(o,b)))),k=z(Ji(I),Cn(w));return[I,k]}var lw=B({basicLSTMCell_:WP});function VP(e,t,n){let s=$(e,"x","batchToSpaceND"),r=t.reduce((i,l)=>i*l);O(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),O(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),O(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let a={x:s},o={blockShape:t,crops:n};return L.runKernel(ul,a,o)}var ch=B({batchToSpaceND_:VP});function UP(e){let t;return e.rank===0||e.rank===1?t=V(e,[1,1,1,e.size]):e.rank===2?t=V(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=V(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function GP(e,t,n,s,r,a){a==null&&(a=.001);let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),u;r!=null&&(u=$(r,"scale","batchNorm"));let c;s!=null&&(c=$(s,"offset","batchNorm")),O(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),O(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),O(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let d={x:UP(o),scale:u,offset:c,mean:i,variance:l},h={varianceEpsilon:a},f=L.runKernel(Ro,d,h);return V(f,o.shape)}var Uc=B({batchNorm_:GP});function HP(e,t,n,s,r,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),u;r!=null&&(u=$(r,"scale","batchNorm"));let c;return s!=null&&(c=$(s,"offset","batchNorm")),O(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),O(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),O(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&O(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&O(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Uc(o,i,l,c,u,a)}var oA=B({batchNorm2d_:HP});function jP(e,t,n,s,r,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),u;r!=null&&(u=$(r,"scale","batchNorm"));let c;return s!=null&&(c=$(s,"offset","batchNorm")),O(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),O(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),O(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&O(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&O(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Uc(o,i,l,c,u,a)}var iA=B({batchNorm3d_:jP});function qP(e,t,n,s,r,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),u;r!=null&&(u=$(r,"scale","batchNorm"));let c;return s!=null&&(c=$(s,"offset","batchNorm")),O(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),O(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),O(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&O(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&O(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Uc(o,i,l,c,u,a)}var lA=B({batchNorm4d_:qP});function XP(e,t,n){let s=$(e,"x","bincount"),r=$(t,"weights","bincount");O(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),O(n>=0,()=>`size must be non-negative, but got ${n}.`),O(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);let a={x:s,weights:r},o={size:n};return L.runKernel(Xm,a,o)}var uA=B({bincount_:XP});function KP(e,t){let n=$(e,"s0","broadcastArgs","int32"),s=$(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);let r={s0:n,s1:s};return L.runKernel(Km,r)}var uw=B({broadcastArgs_:KP});function ZP(e,t){let n=$(e,"broadcastTo","x"),s=n.shape;if(t.some(u=>!(u>0)||u%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let u=n.shape.slice();for(;u.length<t.length;)u.unshift(1);n=V(n,u)}let r=n.shape,a=Array.from(t);for(let u=t.length-1;u>=0;u--)if(r[u]===t[u])a[u]=1;else if(n.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(a.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return On(n);let i={x:n},l={reps:a};return L.runKernel(wa,i,l)}var ju=B({broadcastTo_:ZP});function YP(e){let n={x:$(e,"x","ceil","float32")};return L.runKernel(Ao,n)}var cA=B({ceil_:YP});function JP(e,t,n){let s=$(e,"x","clipByValue");O(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:s},a={clipValueMin:t,clipValueMax:n};return L.runKernel(va,r,a)}var ms=B({clipByValue_:JP});function QP(e){return St(e,0)}var dA=B({concat1d_:QP});function eF(e,t){return St(e,t)}var Zl=B({concat2d_:eF});function tF(e,t){return St(e,t)}var pA=B({concat3d_:tF});function nF(e,t){return St(e,t)}var hA=B({concat4d_:nF});function sF(e,t,n,s,r="NHWC",a=[1,1],o){let i=$(e,"x","conv2d","float32"),l=$(t,"filter","conv2d","float32"),u=i,c=!1;i.rank===3&&(c=!0,u=V(i,[1,i.shape[0],i.shape[1],i.shape[2]])),O(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),O(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),as("conv2d",s,o);let p=r==="NHWC"?u.shape[3]:u.shape[1];O(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),O(Jr(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let d={x:u,filter:l},h={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},f=L.runKernel(xo,d,h);return c?V(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var ga=B({conv2d_:sF});function rF(e,t,n,s,r="NWC",a=1,o){let i=$(e,"x","conv1d"),l=$(t,"filter","conv1d"),u=i,c=!1;i.rank===2&&(c=!0,u=V(i,[1,i.shape[0],i.shape[1]])),O(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),O(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),as("conv1d",s,o),O(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),O(Jr(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),O(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let p=V(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=V(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=ga(d,p,[1,n],s,"NHWC",[1,a],o);return c?V(g,[g.shape[2],g.shape[3]]):V(g,[g.shape[0],g.shape[2],g.shape[3]])}var x0=B({conv1d_:rF});function aF(e,t,n,s,r,a="NHWC",o){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,l=t,u=!1;t.rank===3&&(u=!0,l=V(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),O(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),O(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),O(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let c=a==="NHWC"?i[3]:i[1],p=a==="NHWC"?l.shape[3]:l.shape[1];O(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),O(p===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`),as("conv2dDerInput",r,o);let d={dy:l,filter:n},h={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,inputShape:i},f=L.runKernel(bo,d,h);return u?V(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var fA=B({conv2DBackpropInput_:aF});function oF(e,t,n,s,r,a){let o=$(e,"x","conv2dTranspose"),i=$(t,"filter","conv2dTranspose");return fA(n,o,i,s,r,"NHWC",a)}var b0=B({conv2dTranspose_:oF});function iF(e,t,n,s,r="NDHWC",a=[1,1,1]){let o=$(e,"x","conv3d"),i=$(t,"filter","conv3d"),l=o,u=!1;o.rank===4&&(u=!0,l=V(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),O(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),O(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),O(Jr(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),O(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let c={x:l,filter:i},p={strides:n,pad:s,dataFormat:r,dilations:a},d=L.runKernel(Vp,c,p);return u?V(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var mA=B({conv3d_:iF});function lF(e,t,n,s,r){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,o=t,i=!1;t.rank===4&&(i=!0,o=V(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let l=a[4],u=o.shape[4];O(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),O(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),O(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),O(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),O(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);let c={dy:o,filter:n},p={pad:r,strides:s,inputShape:a},d=L.runKernel(Jm,c,p);return i?V(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var cw=B({conv3DBackpropInput_:lF});function uF(e,t,n,s,r){let a=$(e,"x","conv3dTranspose"),o=$(t,"filter","conv3dTranspose");return cw(n,a,o,s,r)}var gA=B({conv3dTranspose_:uF});function cF(e){let n={x:$(e,"x","cos","float32")};return L.runKernel(vo,n)}var dh=B({cos_:cF});function dF(e){let n={x:$(e,"x","cosh","float32")};return L.runKernel(wo,n)}var v0=B({cosh_:dF});function pF(e,t=0,n=!1,s=!1){let a={x:$(e,"x","cumprod")},o={axis:t,exclusive:n,reverse:s};return L.runKernel(dl,a,o)}var Np=B({cumprod_:pF});function hF(e,t=0,n=!1,s=!1){let a={x:$(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:s};return L.runKernel(ko,a,o)}var w0=B({cumsum_:hF});function fF(e,t,n,s=!1){let r=$(e,"x","denseBincount"),a=$(t,"weights","denseBincount");O(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),O(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),O(n>=0,()=>`size must be non-negative, but got ${n}.`),O(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);let o={x:r,weights:a},i={size:n,binaryOutput:s};return L.runKernel(Qm,o,i)}var dw=B({denseBincount_:fF});function mF(e,t,n="NHWC"){let s=$(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],a=n==="NHWC"?s.shape[2]:s.shape[3],o=n==="NHWC"?s.shape[3]:s.shape[1];O(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),O(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),O(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${s.shape}`),O(o%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`);let i={x:s},l={blockSize:t,dataFormat:n};return L.runKernel(hl,i,l)}var yA=B({depthToSpace_:mF});function gF(e,t,n,s,r="NHWC",a=[1,1],o){let i=$(e,"x","depthwiseConv2d","float32"),l=$(t,"filter","depthwiseConv2d","float32"),u=i,c=!1;i.rank===3&&(c=!0,u=V(i,[1,i.shape[0],i.shape[1],i.shape[2]])),O(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),O(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let p=r==="NHWC"?u.shape[3]:u.shape[1];O(p===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`),as("depthwiseConv2d",s,o);let d={x:u,filter:l},h={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},f=L.runKernel(Io,d,h);return c?V(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Gc=B({depthwiseConv2d_:gF});function yF(e){let n={x:$(e,"x","diag")};return L.runKernel(n0,n)}var pw=B({diag_:yF});function AF(e,t,n,s,r=[1,1],a="NHWC"){let o=$(e,"x","dilation2d"),i=$(t,"filter","dilation2d");O(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),O(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),O(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let l=o,u=!1;o.rank===3&&(l=V(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=!0);let c={x:l,filter:i},p={strides:n,pad:s,dilations:r},d=L.runKernel(Up,c,p);return u?V(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var AA=B({dilation2d_:AF});function xF(e,t){let n=$(e,"a","equal","string_or_numeric"),s=$(t,"b","equal","string_or_numeric");[n,s]=Gt(n,s),wt(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(fl,r)}var _s=B({equal_:xF});function bF(e,t,n){let s=$(t,"a","where"),r=$(n,"b","where"),a=$(e,"condition","where","bool"),o=wt(wt(a.shape,s.shape),r.shape),i=ju(a,o),l=ju(s,o),u=ju(r,o),c={condition:i,t:l,e:u};return L.runKernel(Ol,c)}var zn=B({where_:bF});function vF(e){let n={x:$(e,"x","zerosLike")};return L.runKernel(jl,n)}var it=B({zerosLike_:vF});function wF(e,t){let n=$(e,"a","div"),s=$(t,"b","div");[n,s]=Gt(n,s);let r=fe(n,s),a=it(r),o=_s(s,a);return zn(o,a,r)}var xA=B({divNoNan_:wF});function kF(e,t){let n=$(e,"t1","dot"),s=$(t,"t2","dot");O((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);let r=n.rank===1?n.size:n.shape[1],a=s.rank===1?s.size:s.shape[0];if(O(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),n.rank===1&&s.rank===1){let o=V(n,[1,-1]),i=V(s,[-1,1]),l=Qe(o,i);return V(l,[])}else if(n.rank===1&&s.rank===2){let o=V(n,[1,-1]),i=V(s,[s.shape[0],s.shape[1]]),l=Qe(o,i);return V(l,[l.size])}else if(n.rank===2&&s.rank===1){let o=V(s,[-1,1]),i=Qe(n,o);return V(i,[i.size])}else{let o=V(s,[s.shape[0],s.shape[1]]);return Qe(n,o)}}var bA=B({dot_:kF});function IF(e,...t){let n=t.map((r,a)=>$(r,`tensors${a}`,"einsum")),s={equation:e};return L.runKernel(Gp,n,s)}var hw=B({einsum_:IF});function SF(e){let n={x:$(e,"x","elu","float32")};return L.runKernel(Co,n)}var Hc=B({elu_:SF});function CF(e){let t=$(e,"x","erf");O(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ye(t,"float32"));let n={x:t};return L.runKernel(Ic,n)}var vA=B({erf_:CF});function wA(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function fw(e,t,n){let s=e.length+t.length,r=[],a=0,o=0;for(let i=0;i<s;i++)n.indexOf(i)===-1?r.push(e[a++]):r.push(t[o++]);return r}function mw(e,t){let n=[],s=e.length;for(let a=0;a<s;a++)t.indexOf(a)===-1&&n.push(e[a]);let r=t.map(a=>e[a]);return[n,r]}function Qi(e,t){let n=t.map(s=>1);return fw(e,n,t)}function TF(e,t,n){O(wA(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function gw(e,t){if(wA(e,t))return null;let n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function kA(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function NF(e,t){let n=[];for(let s=t-e;s<t;++s)n.push(s);return n}function EF(e,t=null,n=!1){let r={x:$(e,"x","max")},a={reductionIndices:t,keepDims:n};return L.runKernel(Fo,r,a)}var hn=B({max_:EF});function RF(e,t=null,n=!1){let r={x:$(e,"x","min")},a={axis:t,keepDims:n};return L.runKernel(Lo,r,a)}var ya=B({min_:RF});function _F(e,t){let n=$(e,"base","pow"),s=$(t,"exp","pow");[n,s]=Gt(n,s);let r={a:n,b:s};return L.runKernel(Go,r)}var Aa=B({pow_:_F});function Ce(e,t){if((Fn(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Fn(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ii(e,[],[],t)}function DF(e){let n={x:$(e,"x","sqrt","float32")};return L.runKernel(ei,n)}var Nn=B({sqrt_:DF});function $F(e){let t=$(e,"x","square"),n={};return L.runKernel("Square",{x:t},n)}var bt=B({square_:$F});function PF(e,t=null,n=!1){let s=$(e,"x","sum");s.dtype==="bool"&&(s=ye(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return L.runKernel(ti,r,a)}var ke=B({sum_:PF});function FF(e,t="euclidean",n=null,s=!1){e=$(e,"x","norm");let r=yw(e,t,n),a=r.shape;if(s){let o=lr(n,e.shape);a=Qi(r.shape,o)}return V(r,a)}function yw(e,t,n=null){if(e.rank===0)return en(e);if(e.rank!==1&&n===null)return yw(V(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return ke(en(e),n);if(t===1/0)return hn(en(e),n);if(t===-1/0)return ya(en(e),n);if(t==="euclidean"||t===2)return Nn(ke(Aa(en(e),Ce(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return hn(ke(en(e),n[0]),n[1]-1);if(t===1/0)return hn(ke(en(e),n[1]),n[0]);if(t===-1/0)return ya(ke(en(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return Nn(ke(bt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var jc=B({norm_:FF});function OF(e,t=null,n=!1){return jc(e,"euclidean",t,n)}var IA=B({euclideanNorm_:OF});function MF(e){let n={x:$(e,"x","exp")};return L.runKernel(To,n)}var Ds=B({exp_:MF});function zF(e,t=0){let n=$(e,"x","expandDims","string_or_numeric");O(t<=n.rank,()=>"Axis must be <= rank of the tensor");let s={input:n},r={dim:t};return L.runKernel(ml,s,r)}var Lt=B({expandDims_:zF});function LF(e){let n={x:$(e,"x","expm1")};return L.runKernel(gl,n)}var SA=B({expm1_:LF});function BF(e,t){let n=$(e,"x","tile","string_or_numeric");O(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let s={x:n},r={reps:t};return L.runKernel(wa,s,r)}var Hs=B({tile_:BF});function WF(e,t,n,s="float32"){t==null&&(t=e);let r=We([e,t],s),a=e<=t?e:t;for(let i=0;i<a;++i)r.set(1,i,i);let o=V(r.toTensor(),[e,t]);if(n==null)return o;if(n.length===1)return Hs(Lt(o,0),[n[0],1,1]);if(n.length===2)return Hs(Lt(Lt(o,0),0),[n[0],n[1],1,1]);if(n.length===3)return Hs(Lt(Lt(Lt(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var k0=B({eye_:WF});function qc(e,t,n){let s={shape:e,value:t,dtype:n};return L.runKernel(Sc,{},s)}function VF(e){let n={x:$(e,"x","floor","float32")};return L.runKernel(No,n)}var Xc=B({floor_:VF});function UF(e,t,n=0,s=0){let r=$(e,"x","gather"),a=$(t,"indices","gather","int32"),o={x:r,indices:a},i={axis:n,batchDims:s};return L.runKernel(Al,o,i)}var Kc=B({gather_:UF});function GF(e,t){let n=$(e,"a","greater","string_or_numeric"),s=$(t,"b","greater","string_or_numeric");[n,s]=Gt(n,s),wt(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(bl,r)}var As=B({greater_:GF});function HF(e,t){let n=$(e,"a","greaterEqual","string_or_numeric"),s=$(t,"b","greaterEqual","string_or_numeric");[n,s]=Gt(n,s),wt(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(_o,r)}var ui=B({greaterEqual_:HF});function jF(e){let n={x:$(e,"x","isFinite")};return L.runKernel(Cc,n)}var CA=B({isFinite_:jF});function qF(e){let n={x:$(e,"x","isInf")};return L.runKernel(Tc,n)}var TA=B({isInf_:qF});function XF(e){let n={x:$(e,"x","isNaN")};return L.runKernel(Nc,n)}var NA=B({isNaN_:XF});function KF(e,t=.2){let s={x:$(e,"x","leakyRelu")},r={alpha:t};return L.runKernel($o,s,r)}var ph=B({leakyRelu_:KF});function ZF(e,t){let n=$(e,"a","less","string_or_numeric"),s=$(t,"b","less","string_or_numeric");[n,s]=Gt(n,s),wt(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(vl,r)}var I0=B({less_:ZF});function YF(e,t){let n=$(e,"a","lessEqual","string_or_numeric"),s=$(t,"b","lessEqual","string_or_numeric");[n,s]=Gt(n,s),wt(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(wl,r)}var ci=B({lessEqual_:YF});function Aw(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let s={start:e,stop:t,num:n};return L.runKernel(o0,{},s)}function JF(e,t=5,n=1,s=1,r=.5){let a=$(e,"x","localResponseNormalization");O(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),O(Ku(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;a.rank===3&&(i=!0,o=V(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let l={x:o},u={depthRadius:t,bias:n,alpha:s,beta:r},c=L.runKernel(jp,l,u);return i?V(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var EA=B({localResponseNormalization_:JF});function QF(e){let n={x:$(e,"x","log","float32")};return L.runKernel(Po,n)}var $s=B({log_:QF});function eO(e){let n={x:$(e,"x","log1p")};return L.runKernel(Ec,n)}var hh=B({log1p_:eO});function tO(e){return O(Ja(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let s=$(t,"x","tf.grad","string_or_numeric"),r=n!=null?$(n,"dy","tf.grad"):null;return L.tidy(()=>{let{value:a,grads:o}=L.gradients(()=>e(s),[s],r);return r!=null&&rs(a.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),S0(o),o[0]})}}function nO(e){return O(Ja(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{O(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let s=Cp(t,"args","tf.grads","string_or_numeric"),r=n!=null?$(n,"dy","tf.grads"):null;return L.tidy(()=>{let{value:a,grads:o}=L.gradients(()=>e(...s),s,r);return r!=null&&rs(a.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),S0(o),o})}}function sO(e){return O(Ja(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{O(t instanceof nt,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),O(n==null||n instanceof nt,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:s,value:r}=L.gradients(()=>e(t),[t],n);return S0(s),{grad:s[0],value:r}}}function rO(e){return O(Ja(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{O(Array.isArray(t)&&t.every(r=>r instanceof nt),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),O(n==null||n instanceof nt,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let s=L.gradients(()=>e(...t),t,n);return n!=null&&rs(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),S0(s.grads),s}}function xw(e,t){O(Ja(e),()=>"The f passed in variableGrads(f) must be a function"),O(t==null||Array.isArray(t)&&t.every(u=>u instanceof Ip),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let u in L.registeredVariables)t.push(L.registeredVariables[u])}let s=n?t.filter(u=>!u.trainable):null,r=t.length;t=t.filter(u=>u.trainable),O(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let a=!0,{value:o,grads:i}=L.gradients(e,t,null,a);O(i.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),O(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);let l={};return t.forEach((u,c)=>{i[c]!=null&&(l[u.name]=i[c])}),s!=null&&s.forEach(u=>l[u.name]=null),{value:o,grads:l}}function Zr(e){return L.customGrad(e)}function S0(e){if(e.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function aO(e){let n={x:$(e,"x","softplus")};return L.runKernel(Mc,n)}var Yl=B({softplus_:aO});function oO(e){let t=$(e,"x","logSigmoid");return Zr(s=>({value:Dt(Yl(Dt(s))),gradFunc:o=>z(o,Cn(Dt(s)))}))(t)}var RA=B({logSigmoid_:oO});function iO(e,t){let n=$(e,"a","sub"),s=$(t,"b","sub");[n,s]=Gt(n,s);let r={a:n,b:s};return L.runKernel(ri,r)}var me=B({sub_:iO});function lO(e,t=-1){let n=$(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Zr((r,a)=>{let i=hn(r,t,!0),l=me(r,i),u=me(ye(l,"float32"),$s(ke(Ds(l),t,!0)));return a([u]),{value:u,gradFunc:(p,d)=>{let[h]=d,f=!0,m=Ds(h);return me(p,z(ke(p,t,f),m))}}})(n)}var C0=B({logSoftmax_:lO});function uO(e,t=null,n=!1){let s=$(e,"x","logSumExp"),r=lr(t,s.shape),a=hn(s,r,!0),o=me(s,a),i=Ds(o),l=ke(i,r),u=$s(l),c=ue(V(a,u.shape),u);if(n){let p=Qi(c.shape,r);return V(c,p)}return c}var T0=B({logSumExp_:uO});function cO(e,t){let n=$(e,"a","logicalAnd","bool"),s=$(t,"b","logicalAnd","bool");wt(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(kl,r)}var ir=B({logicalAnd_:cO});function dO(e){let n={x:$(e,"x","logicalNot","bool")};return L.runKernel(Il,n)}var fh=B({logicalNot_:dO});function pO(e,t){let n=$(e,"a","logicalOr","bool"),s=$(t,"b","logicalOr","bool");wt(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(Rc,r)}var N0=B({logicalOr_:pO});function hO(e,t){let n=$(e,"a","logicalXor","bool"),s=$(t,"b","logicalXor","bool");return wt(n.shape,s.shape),ir(N0(e,t),fh(ir(e,t)))}var _A=B({logicalXor_:hO}),Vf=2147483648;function fO(e,t,n="left"){let s=$(e,"sortedSequence","searchSorted"),r=$(t,"values","searchSorted"),a=s.shape[s.shape.length-1],o=r.shape[r.shape.length-1],i=V(s,[-1,a]),l=V(r,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Nt(l.shape)>=Vf)throw new Error(`values tensor size must less than ${Vf}`);if(i.shape[1]>=Vf)throw new Error(`trailing dim_size must less than ${Vf} for int32 output type, was ${i.shape[1]}`);let u={sortedSequence:i,values:l},c={side:n};return L.runKernel(f0,u,c)}var E0=B({searchSorted_:fO});function bw(e,t){return E0(e,t,"left")}function mO(e,t,n,s,r){let a=$(e,"x","maxPool"),o=1,i=a,l=!1;a.rank===3&&(l=!0,i=V(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),O(Jr(n,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),as("maxPool",s,r);let u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},p=L.runKernel(Mo,u,c);return l?V(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var mh=B({maxPool_:mO});function gO(e,t=[1,1,1],n,s,r,a="NDHWC"){let o=$(e,"x","maxPool3d"),i=o,l=!1;o.rank===4&&(l=!0,i=V(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),O(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),as("maxPool3d",s,r);let u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},p=L.runKernel(qp,u,c);return l?V(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var DA=B({maxPool3d_:gO});function yO(e,t,n,s,r=!1){let o={x:$(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},l=L.runKernel(c0,o,i);return{result:l[0],indexes:l[1]}}var vw=B({maxPoolWithArgmax_:yO});function AO(e,t){let n=$(e,"a","maximum"),s=$(t,"b","maximum");[n,s]=Gt(n,s),n.dtype==="bool"&&(n=ye(n,"int32"),s=ye(s,"int32")),wt(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(Oo,r)}var Qr=B({maximum_:AO});function xO(e,t=null,n=!1){let r={x:$(e,"x","mean")},a={axis:t,keepDims:n};return L.runKernel(zo,r,a)}var Bt=B({mean_:xO});function Wt(e,t="float32"){if(t==="complex64"){let s=Wt(e,"float32"),r=Wt(e,"float32");return ma(s,r)}let n=Hm(Nt(e),t);return L.makeTensor(n,e,t)}function Es(e,t="float32"){if(t==="complex64"){let s=Es(e,"float32"),r=Wt(e,"float32");return ma(s,r)}let n=Iy(Nt(e),t);return L.makeTensor(n,e,t)}function ww(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let s=$(e,"x","meshgrid",e instanceof nt?e.dtype:"float32");if(t===void 0)return[s];let r=$(t,"y","meshgrid",t instanceof nt?t.dtype:"float32"),a=Nt(s.shape),o=Nt(r.shape);return n==="xy"?(s=V(s,[1,-1]),r=V(r,[-1,1]),[Qe(Es([o,1],s.dtype),s),Qe(r,Es([1,a],r.dtype))]):(s=V(s,[-1,1]),r=V(r,[1,-1]),[Qe(s,Es([1,o],s.dtype)),Qe(Es([a,1],r.dtype),r)])}function bO(e,t){let n=$(e,"a","minimum"),s=$(t,"b","minimum");[n,s]=Gt(n,s),n.dtype==="bool"&&(n=ye(n,"int32"),s=ye(s,"int32")),wt(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(Bo,r)}var Zc=B({minimum_:bO});function vO(e,t,n){O(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let s=$(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");O(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let i=0;i<s.rank;i++)O(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),O(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);let a={paddings:t,mode:n},o={x:s};return L.runKernel(Wo,o,a)}var $A=B({mirrorPad_:vO});function wO(e,t){let n=$(e,"a","mod"),s=$(t,"b","mod");[n,s]=Gt(n,s);let r={a:n,b:s};return L.runKernel(_c,r)}var Jl=B({mod_:wO});function kO(e,t=null,n=!1){e=$(e,"x","moments");let s=lr(t,e.shape),r=Bt(e,s,n),a=r.shape;n||(a=Qi(r.shape,s));let o=bt(me(ye(e,"float32"),V(r,a))),i=Bt(o,s,n);return{mean:r,variance:i}}var gh=B({moments_:kO});function IO(e,t,n,s){let r=$(t,"data","multiRNNCell"),a=Cp(n,"c","multiRNNCell"),o=Cp(s,"h","multiRNNCell"),i=r,l=[];for(let p=0;p<e.length;p++){let d=e[p](i,a[p],o[p]);l.push(d[0]),l.push(d[1]),i=d[1]}let u=[],c=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),c.push(l[p+1]);return[u,c]}var kw=B({multiRNNCell_:IO});function SO(e,t,n,s=!1){let r=$(e,"logits","multinomial"),a=r.size,o=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();let l={logits:o===1?V(r,[1,-1]):r},u={numSamples:t,seed:n,normalized:s},c=L.runKernel(d0,l,u);return o===1?V(c,[c.size]):c}var Iw=B({multinomial_:SO});function CO(e,t){let n=$(e,"a","notEqual","string_or_numeric"),s=$(t,"b","notEqual","string_or_numeric");[n,s]=Gt(n,s),wt(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(Cl,r)}var el=B({notEqual_:CO});function TO(e){let n={x:$(e,"x","onesLike")};return L.runKernel(El,n)}var Ps=B({onesLike_:TO});function NO(e,t){let n=$(e,"v1","outerProduct"),s=$(t,"v2","outerProduct");O(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);let r=V(n,[-1,1]),a=V(s,[1,-1]);return Qe(r,a)}var Sw=B({outerProduct_:NO});function EO(e,t,n=0){let s=$(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},a={x:s};return L.runKernel(Uo,a,r)}var Zs=B({pad_:EO});function RO(e,t,n=0){return O(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Zs(e,[t],n)}var Cw=B({pad1d_:RO});function _O(e,t,n=0){return O(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Zs(e,t,n)}var Tw=B({pad2d_:_O});function DO(e,t,n=0){return O(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Zs(e,t,n)}var Nw=B({pad3d_:DO});function $O(e,t,n=0){return O(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Zs(e,t,n)}var Ew=B({pad4d_:$O});function PO(e,t,n){let s=$(e,"x","spaceToBatchND");O(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),O(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),O(s.shape.reduce((o,i,l)=>l>0&&l<=t.length?o&&(i+n[l-1][0]+n[l-1][1])%t[l-1]===0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:s},a={blockShape:t,paddings:n};return L.runKernel(Ll,r,a)}var yh=B({spaceToBatchND_:PO});function FO(e,t,n,s,r,a,o){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");let i=$(e,"x","maxPool"),l=i,u=!1;i.rank===3&&(u=!0,l=V(i,[1,i.shape[0],i.shape[1],i.shape[2]])),O(Jr(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);let c=aw(l.shape,t,a,r,s),p=[c.dilationHeight,c.dilationWidth],d;s==="same"?d=MO([c.filterHeight,c.filterWidth],p):d=[[0,0],[0,0]];let h=p[0]===1&&p[1]===1,[f,m]=OO([c.inHeight,c.inWidth],p,d),g=h?s:"valid",y=h?l:yh(l,p,f),A=(n==="avg"?()=>uh(y,t,a,g,o):()=>mh(y,t,a,g,o))(),b=h?A:ch(A,p,m);return u?V(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function OO(e,t,n){let s=n.map(c=>c[0]),r=n.map(c=>c[1]),a=e.concat(s,r),o=t.map((c,p)=>(c-a[p]%c)%c),i=r.map((c,p)=>c+o[p]),l=t.map((c,p)=>[s[p],i[p]]),u=t.map((c,p)=>[0,o[p]]);return[l,u]}function MO(e,t){let s=e.map((o,i)=>o+(o-1)*(t[i]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),a=s.map((o,i)=>o-r[i]);return s.map((o,i)=>[r[i],a[i]])}var PA=B({pool_:FO});function zO(e,t){let n=$(e,"x","prelu"),s=$(t,"alpha","prelu"),r={x:n,alpha:s};return L.runKernel(Ho,r)}var Ah=B({prelu_:zO});function LO(e,t=null,n=!1){let s=$(e,"x","prod");s.dtype==="bool"&&(s=ye(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return L.runKernel(jo,r,a)}var FA=B({prod_:LO});function BO(e,t,n){let s=Nt(e),r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<s;a++)r[a]=t();return L.makeTensor(r,e,n)}var Rw=B({rand_:BO}),OA=co(Um()),MA=class{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=r||Math.random();this.random=OA.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let s=this.nextVal;return this.nextVal=NaN,s}let e,t,n=!1;for(;!n;){let s,r,a;do s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r;while(a>=1||a===0);let o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*o,t=this.mean+this.stdDev*r*o,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},WO=class{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;let r=s||Math.random();this.randu=OA.alea(r.toString()),this.randn=new MA(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},VO=class{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=OA.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function UO(e,t,n=1,s="float32",r){if(n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);let a=new WO(t,n,s,r),o=We(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var _w=B({randomGamma_:UO});function GO(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);let a=new MA(t,n,s,!1,r),o=We(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var R0=B({randomNormal_:GO});function HO(e,t,n){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return R0(e,0,1,t,n)}var Dw=B({randomStandardNormal_:HO});function jO(e,t=0,n=1,s="float32",r){let a=We(e,s),o=new VO(t,n,null,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}var Yc=B({randomUniform_:jO});function ec(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:s};return L.runKernel($c,{},r)}function qO(e){let n={x:$(e,"x","reciprocal")};return L.runKernel(Pc,n)}var zA=B({reciprocal_:qO});function XO(e){let n={x:$(e,"x","relu")};return L.runKernel(qo,n)}var Fr=B({relu_:XO});function KO(e){let n={x:$(e,"x","relu6")};return L.runKernel(Zo,n)}var _0=B({relu6_:KO});function ZO(e,t){let s={x:$(e,"x","reverse")},r={dims:t};return L.runKernel($l,s,r)}var Xs=B({reverse_:ZO});function YO(e){let t=$(e,"x","reverse");return O(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Xs(t,0)}var $w=B({reverse1d_:YO});function JO(e,t){let n=$(e,"x","reverse");return O(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Xs(n,t)}var Pw=B({reverse2d_:JO});function QO(e,t){let n=$(e,"x","reverse");return O(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Xs(n,t)}var Fw=B({reverse3d_:QO});function eM(e,t){let n=$(e,"x","reverse");return O(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Xs(n,t)}var Ow=B({reverse4d_:eM});function tM(e){let n={x:$(e,"x","round")};return L.runKernel(Pl,n)}var D0=B({round_:tM});function nM(e){let n={x:$(e,"x","rsqrt","float32")};return L.runKernel(Yo,n)}var $0=B({rsqrt_:nM});function sM(e){let n={x:$(e,"x","selu")};return L.runKernel(Fc,n)}var P0=B({selu_:sM});function rM(e,t,n,s,r,a=[1,1],o="NHWC"){let i=$(e,"x","separableConv2d"),l=$(t,"depthwiseFilter","separableConv2d"),u=$(n,"pointwiseFilter","separableConv2d"),c=i,p=!1;if(i.rank===3&&(p=!0,c=V(i,[1,i.shape[0],i.shape[1],i.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");O(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),O(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),O(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),O(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),O(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let d=l.shape[2],h=l.shape[3];O(u.shape[2]===d*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*h}, but got ${u.shape[2]}.`);let f=Gc(c,l,s,r,o,a),g=ga(f,u,1,"valid",o);return p?V(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var F0=B({separableConv2d_:rM});async function aM(e,t){let n=$(e,"x","setdiff1d"),s=$(t,"y","setdiff1d");O(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),O(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),O(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);let r=await n.data(),a=await s.data(),o=new Set(a),i=0;for(let c=0;c<r.length;c++)o.has(r[c])||i++;let l=new pn([i],n.dtype),u=new pn([i],"int32");for(let c=0,p=0;c<r.length;c++)o.has(r[c])||(l.values[p]=r[c],u.values[p]=c,p++);return[l.toTensor(),u.toTensor()]}var Mw=aM;function oM(e){let n={x:$(e,"x","sign")};return L.runKernel(Oc,n)}var LA=B({sign_:oM});function iM(e){let n={x:$(e,"x","sin","float32")};return L.runKernel(Jo,n)}var O0=B({sin_:iM});function lM(e){let n={x:$(e,"x","sinh")};return L.runKernel(zl,n)}var M0=B({sinh_:lM});function uM(e,t,n){let s=$(e,"x","slice1d");return O(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),ze(s,[t],[n])}var xh=B({slice1d_:uM});function cM(e,t,n){let s=$(e,"x","slice2d");return O(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),ze(s,t,n)}var z0=B({slice2d_:cM});function dM(e,t,n){let s=$(e,"x","slice3d");return O(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),ze(s,t,n)}var di=B({slice3d_:dM});function pM(e,t,n){let s=$(e,"x","slice4d");return O(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),ze(s,t,n)}var so=B({slice4d_:pM});function hM(e,t=-1){let n=$(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let s={logits:n},r={dim:t};return L.runKernel(ni,s,r)}var Ql=B({softmax_:hM});function fM(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return L.runKernel(r0,t)}var bh=B({fft_:fM});function mM(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return L.runKernel(a0,t)}var tc=B({ifft_:mM});function gM(e){let t=e.shape[e.shape.length-1],n=e.size/t,s;if(t<=2){let r=V(e,[n,t]);s=tc(r)}else{let r=[n,2*(t-1)],a=V(Qu(e),[n,t]),o=V(ih(e),[n,t]),i=Xs(ze(a,[0,1],[n,t-2]),1),l=z(Xs(ze(o,[0,1],[n,t-2]),1),Ce(-1)),u=St([a,i],1),c=St([o,l],1),p=V(ma(u,c),[r[0],r[1]]);s=tc(p)}if(s=Qu(s),e.rank===3&&e.shape[0]!==0){let r=s,a=e.shape[0];s=V(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}var L0=B({irfft_:gM});function yM(e,t,n=0){let r={x:$(e,"x","split")},a={numOrSizeSplits:t,axis:n};return L.runKernel(Bl,r,a)}var Kt=B({split_:yM});function AM(e,t){O(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],s=e.size/n,r;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=ze(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=St([e,Wt(f)],e.shape.length-1),n=t}else r=e;let a=it(r),o=V(ma(r,a),[s,n]),i=bh(o),l=Math.floor(n/2)+1,u=Qu(i),c=ih(i),p=Kt(u,[l,n-l],u.shape.length-1),d=Kt(c,[l,n-l],c.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=l,V(ma(p[0],d[0]),h)}var vh=B({rfft_:AM});function xM(e,t){let n=$(e,"a","squaredDifference"),s=$(t,"b","squaredDifference");[n,s]=Gt(n,s),wt(n.shape,s.shape);let r={a:n,b:s},a={};return L.runKernel(si,r,a)}var B0=B({squaredDifference_:xM});function bM(e,t){let n=$(e,"x","squeeze","string_or_numeric");return V(n,r6(n.shape,t).newShape)}var st=B({squeeze_:bM});function vM(e,t=0){let n=Cp(e,"tensors","stack","string_or_numeric");O(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&O(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let s=n,r={axis:t};return L.runKernel(_l,s,r)}var an=B({stack_:vM});function wM(e,t=0){let s={x:$(e,"x","step")},r={alpha:t};return L.runKernel(oi,s,r)}var eu=B({step_:wM});function kM(e,t,n,s,r=0,a=0,o=0,i=0,l=0){let c={x:$(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};return L.runKernel(Wl,c,p)}var BA=B({stridedSlice_:kM});function IM(e){let n={x:$(e,"x","tan","float32")};return L.runKernel(Vl,n)}var WA=B({tan_:IM});function Pt(e,t){il(e);let n=Kr(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ii(e,null,n,t)}function ar(e,t,n){if(il(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let s=Kr(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ii(e,t,s,n)}function zw(e,t,n){if(il(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let s=Kr(e,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ii(e,t,s,n)}function Lw(e,t,n){if(il(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let s=Kr(e,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ii(e,t,s,n)}function Bw(e,t,n){if(il(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let s=Kr(e,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,ii(e,t,s,n)}function SM(e,t=1,n=!0){let s=$(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let a={x:s},o={k:t,sorted:n},[i,l]=L.runKernel(Ul,a,o);return{values:i,indices:l}}var VA=B({topk_:SM});function CM(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new MA(t,n,s,!0,r),o=We(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var W0=B({truncatedNormal_:CM});function TM(e,t=0){let n=$(e,"x","unique","string_or_numeric");O(n.rank>0,()=>"The input tensor must be at least 1D");let s={x:n},r={axis:t},[a,o]=L.runKernel(m0,s,r);return{values:a,indices:o}}var UA=B({unique_:TM});function NM(e,t,n){let s=$(e,"x","unsortedSegmentSum"),r=$(t,"segmentIds","unsortedSegmentSum","int32");O(Ku(n),()=>"numSegments must be of dtype int");let a={x:s,segmentIds:r},o={numSegments:n};return L.runKernel(th,a,o)}var V0=B({unsortedSegmentSum_:NM});function EM(e,t=0){let n=$(e,"x","unstack","string_or_numeric");O(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let s={value:n},r={axis:t};return L.runKernel(Hl,s,r)}var En=B({unstack_:EM});function Ww(e,t){return E0(e,t,"right")}function GA(e,t=!0,n,s){return L.makeVariable(e,t,n,s)}function Vw(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let s=We(e,"int32"),r=We([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let o=s.indexToLoc(n[a]),i=a*e.length;r.values.set(o,i)}return r.toTensor()}async function RM(e){let t=$(e,"condition","whereAsync","bool"),n=await t.data(),s=Vw(t.shape,n);return e!==t&&t.dispose(),s}var HA=RM;async function _M(e,t,n){let s=$(e,"tensor","boolMask"),r=$(t,"mask","boolMask","bool"),a=n==null?0:n,o=r.rank,i=s.shape;O(o>0,()=>"mask cannot be scalar"),rs(i.slice(a,a+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=a;m<a+o;m++)l*=i[m];let u=i.slice(0,a).concat([l],i.slice(a+o)),c=V(s,u),p=V(r,[-1]),d=await HA(p),h=st(d,[1]),f=Kc(c,h,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),h.dispose(),c.dispose(),p.dispose(),d.dispose(),f}var Uw=_M;function DM(e,t,n,s,r=!0){let a=$(e,"v","movingAverage"),o=$(t,"x","movingAverage"),i=$(n,"decay","movingAverage");w6(a,o),O(po(a.shape,o.shape),()=>"Shape mismatch in v and x");let l=Ce(1),u=me(l,i),c=z(me(o,a),u);if(r){O(s!=null,()=>"When using zeroDebias: true, step is required.");let p=$(s,"step","movingAverage");c=fe(c,me(l,Aa(i,p)))}return ue(a,c)}var Gw=B({movingAverage_:DM});function $M(e,t,n){let s=$(e,"indices","scatterND","int32"),r=$(t,"updates","scatterND");jy(r,s,n);let a={indices:s,updates:r},o={shape:n};return L.runKernel(Fl,a,o)}var Hw=B({scatterND_:$M});function PM(e,t,n,s){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let o=t.size;if(!(t.rank===0||t.rank===1&&o===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function FM(e,t,n,s=0){let r=$(e,"sparseIndices","sparseToDense","int32"),a=$(t,"sparseValues","sparseToDense","string_or_numeric"),o=$(s,"defaultValue","sparseToDense",a.dtype);PM(r,a,n,o);let i={sparseIndices:r,sparseValues:a,defaultValue:o},l={outputShape:n};return L.runKernel(Jp,i,l)}var jw=B({sparseToDense_:FM});function OM(e,t){let n=$(t,"indices","gatherND","int32"),r={params:$(e,"x","gatherND","string_or_numeric"),indices:n};return L.runKernel(xl,r)}var qw=B({gatherND_:OM});function MM(e,t){if(t==null)return e.shape.slice();if(po(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}function zM(e,t,n,s){let r=$(e,"x","dropout");if(O(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),O(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof nt?r.clone():r;let a=MM(r,n),o=1-t,i=fe(Xc(ue(Yc(a,0,1,"float32",s),o)),o);return z(r,i)}var jA=B({dropout_:zM});function qA(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function U0(e,t,n){let s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){let o=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(o)}return Pt(r,"float32")}async function LM(e,t,n=1){let s=$(e,"predictions","inTopK"),r=$(t,"targets","inTopK");O(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),O(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),rs(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=s.shape[s.shape.length-1];O(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let o=await s.data(),i=await r.data(),[l,u]=[o.length/a,a],c=a6("bool",l);for(let p=0;p<l;p++){let d=p*u,h=o.subarray(d,d+u),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,g)=>g.value-m.value),c[p]=0;for(let m=0;m<n;m++)if(f[m].index===i[p]){c[p]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),ct(c,r.shape,"bool")}var Xw=LM,nc={};Ge(nc,{conv2d:()=>VM,depthwiseConv2d:()=>jM,matMul:()=>XM});function BM(e,t,n,s,r,a="NHWC",o){let i=e;e.rank===3&&(i=V(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=V(t,[1,t.shape[0],t.shape[1],t.shape[2]])),O(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),O(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),O(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let u=a==="NHWC"?i.shape[3]:i.shape[1],c=a==="NHWC"?l.shape[3]:l.shape[1];O(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),O(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),as("conv2dDerFilter",r,o);let p={x:i,dy:l},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,filterShape:n};return L.runKernel(Zm,p,d)}var XA=B({conv2DBackpropFilter_:BM});function G0(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return z(e,eu(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function H0(e,t){let n=t,s=rn(e.shape,t.shape);return s.length>0&&(n=ke(n,s)),V(n,e.shape)}function j0(e,t,n,s){if(t==="linear")return e;if(t==="relu")return Fr(e);if(t==="elu")return Hc(e);if(t==="relu6")return _0(e);if(t==="prelu")return Ah(e,n);if(t==="leakyrelu")return ph(e,s);if(t==="sigmoid")return Cn(e);throw new Error(`Unknown fused activation ${t}.`)}var q0=(e,t)=>!(e>0)||t==="linear";function WM({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",q0(L.state.gradientDepth,l)===!1){O(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let I=ga(e,t,n,s,r,a,o);return i!=null&&(I=ue(I,i)),j0(I,l,u,c)}let p=$(e,"x","conv2d","float32"),d=$(t,"filter","conv2d","float32"),h=p,f=!1;p.rank===3&&(f=!0,h=V(p,[1,p.shape[0],p.shape[1],p.shape[2]])),O(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),O(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),as("fused conv2d",s,o);let m=r==="NHWC"?h.shape[3]:h.shape[1];O(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),O(Jr(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let g=lh(h.shape,d.shape,n,a,s,o),y;i!=null&&(y=$(i,"bias","fused conv2d"),[y]=Gt(y,p),r==="NHWC"?wt(g.outShape,y.shape):(O(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),O(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let x;if(u!=null){let I=u.shape;if(O(I.length<=1||I.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${I.length}.`),I.length===1)O(I[0]===1||I[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${I}) is not compatible with the number of output channels (${g.outChannels}).`);else if(I.length===3)try{wt(I,g.outShape)}catch(k){let R=`Error in fused conv2d: PReLU activation weights (${I}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(R)}x=$(u,"prelu weights","fused conv2d")}let A=(I,k)=>{O(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);let[R,_,D,E]=k,P=G0(I,D,l);O(no(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let C=fA(_.shape,P,R,n,s),M=XA(_,P,R.shape,n,s),W=[C,M];if(E!=null){let G=H0(E,P);W.push(G)}return W},b={x:h,filter:d,bias:y,preluActivationWeights:x},w={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:c};return i==null?Zr((k,R,_)=>{let D=L.runKernel(eo,b,w);return _([R,k,D]),f&&(D=V(D,[D.shape[1],D.shape[2],D.shape[3]])),{value:D,gradFunc:A}})(h,d):Zr((k,R,_,D)=>{let E=L.runKernel(eo,b,w);return D([R,k,E,_]),f&&(E=V(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:A}})(h,d,y)}var VM=B({fusedConv2d_:WM});function UM(e,t,n,s,r,a=[1,1],o){let i=e;e.rank===3&&(i=V(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=V(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:i,dy:l},c={strides:s,pad:r,dimRoundingMode:o,dilations:a,filterShape:n};return L.runKernel(e0,u,c)}var Kw=B({depthwiseConv2dNativeBackpropFilter_:UM});function GM(e,t,n,s,r,a=[1,1],o){let i=t,l=!1;t.rank===3&&(l=!0,i=V(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:i,filter:n},c={strides:s,pad:r,dimRoundingMode:o,dilations:a,inputShape:e},p=L.runKernel(t0,u,c);return l?V(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Zw=B({depthwiseConv2dNativeBackpropInput_:GM});function HM({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(q0(L.state.gradientDepth,l)===!1){let w=Gc(e,t,n,s,r,a,o);return i!=null&&(w=ue(w,i)),j0(w,l,u,c)}let p=$(e,"x","depthwiseConv2d","float32"),d=$(t,"filter","depthwiseConv2d","float32"),h=p,f=!1;p.rank===3&&(f=!0,h=V(p,[1,p.shape[0],p.shape[1],p.shape[2]])),O(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),O(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),O(h.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),a==null&&(a=[1,1]),O(Jr(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),as("fused depthwiseConv2d",s,o);let m=lh(h.shape,d.shape,n,a,s,o,!0),g;i!=null&&(g=$(i,"bias","fused conv2d"),[g]=Gt(g,p),wt(m.outShape,g.shape));let y;u!=null&&(y=$(u,"prelu weights","fused depthwiseConv2d"));let x=(w,I)=>{O(no(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[k,R,_,D]=I,E=G0(w,_,l),P=Zw(R.shape,E,k,n,s,a,o),C=Kw(R,E,k.shape,n,s,a,o);if(D!=null){let M=H0(g,E);return[P,C,M]}return[P,C]},A={x:h,filter:d,bias:g,preluActivationWeights:y},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:c};return i==null?Zr((I,k,R)=>{let _=L.runKernel(to,A,b);return R([k,I,_]),f&&(_=V(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:x}})(h,d):Zr((I,k,R,_)=>{let D=L.runKernel(to,A,b);return _([k,I,D,R]),f&&(D=V(D,[D.shape[1],D.shape[2],D.shape[3]])),{value:D,gradFunc:x}})(h,d,g)}var jM=B({fusedDepthwiseConv2d_:HM});function qM({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i=.2}){if(q0(L.state.gradientDepth,a)===!1){let E=Qe(e,t,n,s);return r!=null&&(E=ue(E,r)),j0(E,a,o,i)}let l=$(e,"a","fused matMul"),u=$(t,"b","fused matMul");[l,u]=Gt(l,u);let c=n?l.shape[l.rank-2]:l.shape[l.rank-1],p=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],h=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=Nt(f),y=Nt(m);O(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`);let A=wt(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,h]),b=n?V(l,[g,c,d]):V(l,[g,d,c]),w=s?V(u,[y,h,p]):V(u,[y,p,h]),I;r!=null&&(I=$(r,"bias","fused matMul"),[I]=Gt(I,l),wt(A,I.shape));let k;o!=null&&(k=$(o,"prelu weights","fused matMul"));let R=(E,P)=>{let[C,M,W,G]=P,X=G0(V(E,W.shape),W,a),K,Y;if(!n&&!s?(K=Qe(X,M,!1,!0),Y=Qe(C,X,!0,!1)):!n&&s?(K=Qe(X,M,!1,!1),Y=Qe(X,C,!0,!1)):n&&!s?(K=Qe(M,X,!1,!0),Y=Qe(C,X,!1,!1)):(K=Qe(M,X,!0,!0),Y=Qe(X,C,!0,!0)),r!=null){let se=H0(G,X);return[K,Y,se]}else return[K,Y]},_={a:b,b:w,bias:I,preluActivationWeights:k},D={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:i};return r==null?Zr((P,C,M)=>{let W=L.runKernel(Qa,_,D);return M([P,C,W]),{value:V(W,A),gradFunc:R}})(b,w):Zr((P,C,M,W)=>{let G=L.runKernel(Qa,_,D);return W([P,C,G,M]),{value:V(G,A),gradFunc:R}})(b,w,I)}var XM=B({fusedMatMul_:qM});function KM(e){return U0(e,.54,.46)}var ZM=B({hammingWindow_:KM});function YM(e){return U0(e,.5,.5)}var Yw=B({hannWindow_:YM});function JM(e,t,n,s=!1,r=0){let a=0,o=[];for(;a+t<=e.size;)o.push(ze(e,a,t)),a+=n;if(s)for(;a<e.size;){let i=a+t-e.size,l=St([ze(e,a,t-i),qc([i],r)]);o.push(l),a+=n}return o.length===0?ar([],[0,t]):V(St(o),[o.length,t])}var Jw=B({frame_:JM});function QM(e,t,n,s,r=Yw){s==null&&(s=qA(t));let a=Jw(e,t,n),o=z(a,r(t));return vh(o,s)}var ez=B({stft_:QM});function tz(e,t,n,s,r="bilinear",a=0){let o=$(e,"image","cropAndResize"),i=$(t,"boxes","cropAndResize","float32"),l=$(n,"boxInd","cropAndResize","int32"),u=i.shape[0];O(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),O(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),O(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),O(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),O(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),O(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let c={image:o,boxes:i,boxInd:l},p={method:r,extrapolationValue:a,cropSize:s};return L.runKernel(pl,c,p)}var nz=B({cropAndResize_:tz});function sz(e){let t=$(e,"image","flipLeftRight","float32");O(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return L.runKernel(yl,n,{})}var rz=B({flipLeftRight_:sz});function az(e){let t=$(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];O(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),O(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Hs(t,r)}var oz=B({grayscaleToRGB_:az});function iz(e,t,n=0,s=.5){let r=$(e,"image","rotateWithOffset","float32");O(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let a={image:r},o={radians:t,fillValue:n,center:s};return L.runKernel(ql,a,o)}var lz=B({rotateWithOffset_:iz});function Jc(e,t,n,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);let o=e.shape[0];return n=Math.min(n,o),O(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),O(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),O(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),O(t.rank===1,()=>"scores must be a 1D tensor"),O(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),O(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function uz(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=$(e,"boxes","nonMaxSuppression","float32"),o=$(t,"scores","nonMaxSuppression","float32"),i=Jc(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return L.runKernel(Tl,{boxes:a,scores:o},l)}var cz=B({nonMaxSuppression_:uz});function dz(e,t,n){let s=pz(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function pz(e,t,n){return fz(e,t,n||hz)}function hz(e,t){return e>t?1:e<t?-1:0}function fz(e,t,n){let s=0,r=e.length,a=0,o=!1;for(;s<r;){a=s+(r-s>>>1);let i=n(t,e[a]);i>0?s=a+1:(r=a,o=!i)}return o?s:-s-1}function Qw(e,t,n,s,r){return KA(e,t,n,s,r,0)}function e8(e,t,n,s,r,a){return KA(e,t,n,s,r,0,!1,a,!0)}function t8(e,t,n,s,r,a){return KA(e,t,n,s,r,a,!0)}function KA(e,t,n,s,r,a,o=!1,i=!1,l=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>r&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(Cv);let c=a>0?-.5/a:0,p=[],d=[];for(;p.length<n&&u.length>0;){let g=u.pop(),{score:y,boxIndex:x,suppressBeginIndex:A}=g;if(y<r)break;let b=!1;for(let w=p.length-1;w>=A;--w){let I=mz(e,x,p[w]);if(I>=s){b=!0;break}if(g.score=g.score*gz(s,c,I),g.score<=r)break}g.suppressBeginIndex=p.length,b||(g.score===y?(p.push(x),d.push(g.score)):g.score>r&&dz(u,g,Cv))}let h=p.length,f=n-h;i&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:p};return o&&(m.selectedScores=d),l&&(m.validOutputs=h),m}function mz(e,t,n){let s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),a=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),h=(i-a)*(l-o),f=(p-u)*(d-c);if(h<=0||f<=0)return 0;let m=Math.max(a,u),g=Math.max(o,c),y=Math.min(i,p),x=Math.min(l,d),A=Math.max(y-m,0)*Math.max(x-g,0);return A/(h+f-A)}function gz(e,t,n){let s=Math.exp(t*n*n);return n<=e?s:0}function Cv(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function yz(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=$(e,"boxes","nonMaxSuppressionAsync"),o=$(t,"scores","nonMaxSuppressionAsync"),i=Jc(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l=await Promise.all([a.data(),o.data()]),u=l[0],c=l[1],{selectedIndices:p}=Qw(u,c,n,s,r);return a!==e&&a.dispose(),o!==t&&o.dispose(),Pt(p,"int32")}var Az=yz;function xz(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=$(e,"boxes","nonMaxSuppression"),i=$(t,"scores","nonMaxSuppression"),l=Jc(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let u={boxes:o,scores:i},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},p=L.runKernel(Nl,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}var bz=B({nonMaxSuppressionWithScore_:xz});async function vz(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=$(e,"boxes","nonMaxSuppressionAsync"),i=$(t,"scores","nonMaxSuppressionAsync"),l=Jc(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let u=await Promise.all([o.data(),i.data()]),c=u[0],p=u[1],{selectedIndices:d,selectedScores:h}=t8(c,p,n,s,r,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Pt(d,"int32"),selectedScores:Pt(h)}}var wz=vz;function kz(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=$(e,"boxes","nonMaxSuppression"),i=$(t,"scores","nonMaxSuppression"),l=Jc(o,i,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,d={boxes:o,scores:i},h={maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:a},f=L.runKernel(Dc,d,h);return{selectedIndices:f[0],validOutputs:f[1]}}var Iz=B({nonMaxSuppressionPadded_:kz});async function Sz(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=$(e,"boxes","nonMaxSuppressionAsync"),i=$(t,"scores","nonMaxSuppressionAsync"),l=Jc(o,i,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,[d,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=e8(d,h,u,c,p,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Pt(f,"int32"),validOutputs:Ce(m,"int32")}}var Cz=Sz;function Tz(e,t,n=!1,s=!1){let r=$(e,"images","resizeBilinear");O(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),O(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),O(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=V(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=L.runKernel(Ko,i,l);return o?V(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var n8=B({resizeBilinear_:Tz});function Nz(e,t,n=!1,s=!1){let r=$(e,"images","resizeNearestNeighbor");O(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),O(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),O(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),O(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=V(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=L.runKernel(Xo,i,l);return o?V(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var s8=B({resizeNearestNeighbor_:Nz});function Ez(e,t="binary",n=!1,s=.5){let r=$(e,"image","threshold"),a=.2989,o=.587,i=.114,l=r.shape[0]*r.shape[1],u=z(Pt([s]),255),c,p,d,h;if(O(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),O(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),O(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),O(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[c,p,d]=Kt(r,[1,1,1],-1);let g=z(c,a),y=z(p,o),x=z(d,i);h=ue(ue(g,y),x)}else h=e;if(t==="otsu"){let g=uA(ye(D0(h),"int32"),ct([]),256);u=Rz(g,l)}let f=n?ci(h,u):As(h,u);return ye(z(f,255),"int32")}function Rz(e,t){let n=Pt([-1]),s=Pt([0]),r=Pt([0]),a,o,i,l,u,c;for(let p=0;p<e.size-1;p++){a=ze(e,0,p+1),o=ze(e,p+1),u=fe(ke(a),t),c=fe(ke(o),t);let d=ke(z(a,ec(0,a.size)));i=fe(d,ke(a));let h=qc(o.shape,a.size),f=ue(ec(0,o.size),h),m=z(o,f);l=fe(ke(m),ke(o));let g=me(i,l),y=me(i,l),x=z(u,c);r=z(z(x,g),y);let A=As(r,s);s=zn(A,r,s),n=zn(A,Pt([p]),n)}return n}var _z=B({threshold_:Ez});function Dz(e,t,n="nearest",s="constant",r=0,a){let o=$(e,"image","transform","float32"),i=$(t,"transforms","transform","float32");O(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),O(i.rank===2&&(i.shape[0]===o.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),O(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let l={image:o,transforms:i},u={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return L.runKernel(Gl,l,u)}var $z=B({transform_:Dz});function Pz(e,t,n){O(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),O(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let s=$(e,"a","bandPart");O(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let r=s.shape,[a,o]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);let i=V(ec(0,a,1,"int32"),[-1,1]),l=ec(0,o,1,"int32"),u=me(i,l),c=ir(ci(u,Ce(+t,"int32")),ui(u,Ce(-n,"int32"))),p=Wt([a,o],s.dtype);return V(an(En(V(s,[-1,a,o])).map(d=>zn(c,d,p))),r)}var Fz=B({bandPart_:Pz});function Oz(e){let t;if(Array.isArray(e)){t=!1,O(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let a=1;a<e.length;++a)O(e[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${r})`)}else t=!0,e=Kt(e,e.shape[0],0).map(r=>st(r,[0]));O(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],s=e;for(let r=0;r<e.length;++r)n.push(L.tidy(()=>{let a=s[r];if(r>0)for(let o=0;o<r;++o){let i=z(ke(z(n[o],a)),n[o]);a=me(a,i)}return fe(a,jc(a,"euclidean"))}));return t?an(n,0):n}var Mz=B({gramSchmidt_:Oz});function zz(e,t=!1){if(O(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return Tv(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,u)=>l*u),s=En(V(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach(l=>{let[u,c]=Tv(l,t);r.push(u),a.push(c)});let o=V(an(r,0),e.shape),i=V(an(a,0),e.shape);return[o,i]}}function Tv(e,t=!1){return L.tidy(()=>{O(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],s=e.shape[1],r=k0(n),a=On(e),o=ar([[1]],[1,1]),i=On(o),l=n>=s?s:n;for(let u=0;u<l;++u){let c=a,p=i,d=r;[i,a,r]=L.tidy(()=>{let h=ze(a,[u,u],[n-u,1]),f=jc(h),m=ze(a,[u,u],[1,1]),g=zn(As(m,0),ar([[-1]]),ar([[1]])),y=me(m,z(g,f)),x=fe(h,y);x.shape[0]===1?i=On(o):i=St([o,ze(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);let A=Dt(fe(Qe(g,y),f)),b=ze(a,[u,0],[n-u,s]),w=z(A,i),I=et(i);if(u===0)a=me(b,Qe(w,Qe(I,b)));else{let _=me(b,Qe(w,Qe(I,b)));a=St([ze(a,[0,0],[u,s]),_],0)}let k=et(w),R=ze(r,[0,u],[n,r.shape[1]-u]);if(u===0)r=me(R,Qe(Qe(R,i),k));else{let _=me(R,Qe(Qe(R,i),k));r=St([ze(r,[0,0],[n,u]),_],1)}return[i,a,r]}),J([c,p,d])}return!t&&n>s&&(r=ze(r,[0,0],[n,s]),a=ze(a,[0,0],[s,s])),[r,a]})}var Lz=B({qr_:zz}),es;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(es||(es={}));function Bz(e,t,n=es.SUM_BY_NONZERO_WEIGHTS){let s=$(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=$(t,"weights","computeWeightedLoss"));let a=r==null?s:z(s,r);if(n===es.NONE)return a;if(n===es.SUM)return ke(a);if(n===es.MEAN){if(r==null)return Bt(a);{let o=s.size/r.size,i=fe(ke(a),ke(r));return o>1?fe(i,Ce(o)):i}}if(n===es.SUM_BY_NONZERO_WEIGHTS){if(r==null)return fe(ke(a),Ce(s.size));{let o=z(r,Es(s.shape)),i=ye(ke(el(o,Ce(0))),"float32");return fe(ke(a),i)}}throw Error(`Unknown reduction: ${n}`)}var ka=B({computeWeightedLoss_:Bz});function Wz(e,t,n,s=es.SUM_BY_NONZERO_WEIGHTS){let r=$(e,"labels","absoluteDifference"),a=$(t,"predictions","absoluteDifference"),o=null;n!=null&&(o=$(n,"weights","absoluteDifference")),rs(r.shape,a.shape,"Error in absoluteDifference: ");let i=en(me(r,a));return ka(i,o,s)}var Vz=B({absoluteDifference_:Wz});function Uz(e,t,n,s,r=es.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"labels","cosineDistance"),o=$(t,"predictions","cosineDistance"),i=null;s!=null&&(i=$(s,"weights","cosineDistance")),rs(a.shape,o.shape,"Error in cosineDistance: ");let l=Ce(1),u=me(l,ke(z(a,o),n,!0));return ka(u,i,r)}var Gz=B({cosineDistance_:Uz});function Hz(e,t,n,s=es.SUM_BY_NONZERO_WEIGHTS){let r=$(e,"labels","hingeLoss"),a=$(t,"predictions","hingeLoss"),o=null;n!=null&&(o=$(n,"weights","hingeLoss")),rs(r.shape,a.shape,"Error in hingeLoss: ");let i=Ce(1);r=me(z(Ce(2),r),i);let l=Fr(me(i,z(r,a)));return ka(l,o,s)}var jz=B({hingeLoss_:Hz});function qz(e,t,n,s=1,r=es.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"labels","huberLoss"),o=$(t,"predictions","huberLoss"),i=null;n!=null&&(i=$(n,"weights","huberLoss")),rs(a.shape,o.shape,"Error in huberLoss: ");let l=Ce(s),u=en(me(o,a)),c=Zc(u,l),p=me(u,c),d=ue(z(Ce(.5),bt(c)),z(l,p));return ka(d,i,r)}var Xz=B({huberLoss_:qz});function Kz(e,t,n,s=1e-7,r=es.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"labels","logLoss"),o=$(t,"predictions","logLoss"),i=null;n!=null&&(i=$(n,"weights","logLoss")),rs(a.shape,o.shape,"Error in logLoss: ");let l=Ce(1),u=Ce(s),c=Dt(z(a,$s(ue(o,u)))),p=z(me(l,a),$s(ue(me(l,o),u))),d=me(c,p);return ka(d,i,r)}var Zz=B({logLoss_:Kz});function Yz(e,t,n,s=es.SUM_BY_NONZERO_WEIGHTS){let r=$(e,"labels","meanSquaredError"),a=$(t,"predictions","meanSquaredError"),o=null;n!=null&&(o=$(n,"weights","meanSquaredError")),rs(r.shape,a.shape,"Error in meanSquaredError: ");let i=B0(r,a);return ka(i,o,s)}var Jz=B({meanSquaredError_:Yz});function Qz(e,t){let n=$(e,"labels","sigmoidCrossEntropyWithLogits"),s=$(t,"logits","sigmoidCrossEntropyWithLogits");rs(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=Fr(s),a=z(s,n),o=hh(Ds(Dt(en(s))));return ue(me(r,a),o)}function eL(e,t,n,s=0,r=es.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"multiClassLabels","sigmoidCrossEntropy"),o=$(t,"logits","sigmoidCrossEntropy"),i=null;if(n!=null&&(i=$(n,"weights","sigmoidCrossEntropy")),rs(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){let u=Ce(s),c=Ce(1),p=Ce(.5);a=ue(z(a,me(c,u)),z(p,u))}let l=Qz(a,o);return ka(l,i,r)}var tL=B({sigmoidCrossEntropy_:eL});function nL(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Zr((r,a,o)=>{let l=T0(a,[n],!0),u=me(ye(a,"float32"),l);o([r,u]);let c=Dt(z(u,r));return{value:ke(c,[n]),gradFunc:(h,f)=>{let[m,g]=f,y=Qi(h.shape,[n]);return[z(V(h,y),me(ye(m,"float32"),Ds(g))),z(V(h,y),me(Ds(g),ye(m,"float32")))]}}})(e,t)}function sL(e,t,n,s=0,r=es.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"onehotLabels","softmaxCrossEntropy"),o=$(t,"logits","softmaxCrossEntropy"),i=null;if(n!=null&&(i=$(n,"weights","softmaxCrossEntropy")),rs(a.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){let u=Ce(s),c=Ce(1),p=Ce(a.shape[1]);a=ue(z(a,me(c,u)),fe(u,p))}let l=nL(a,o);return ka(l,i,r)}var rL=B({softmaxCrossEntropy_:sL});function aL(e,t,n,s){let r=$(e,"indices","sparseFillEmptyRows","int32"),a=$(t,"values","sparseFillEmptyRows"),o=$(n,"denseShape","sparseFillEmptyRows","int32"),i=$(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let l={indices:r,values:a,denseShape:o,defaultValue:i},u=L.runKernel(Kp,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var oL=B({sparseFillEmptyRows_:aL});function iL(e,t,n){let s=$(e,"inputIndices","sparseReshape","int32"),r=$(t,"inputShape","sparseReshape","int32"),a=$(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let o={inputIndices:s,inputShape:r,newShape:a},i=L.runKernel(zc,o);return{outputIndices:i[0],outputShape:i[1]}}var lL=B({sparseReshape_:iL});function uL(e,t,n){let s=$(e,"data","sparseSegmentMean"),r=$(t,"indices","sparseSegmentMean","int32"),a=$(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return L.runKernel(Zp,o)}var cL=B({sparseSegmentMean_:uL});function dL(e,t,n){let s=$(e,"data","sparseSegmentSum"),r=$(t,"indices","sparseSegmentSum","int32"),a=$(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return L.runKernel(Yp,o)}var pL=B({sparseSegmentSum_:dL});function hL(e,t,n,s,r,a,o,i){let l=$(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=$(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let c={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:o,preserveShortSequences:i},p={data:l,dataSplits:u},d=L.runKernel(Bc,p,c);return{nGrams:d[0],nGramsSplits:d[1]}}var fL=B({stringNGrams_:hL});function mL(e,t,n=!0){let s=$(e,"input","stringSplit","string"),r=$(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let a={skipEmpty:n},o={input:s,delimiter:r},i=L.runKernel(Qp,o,a);return{indices:i[0],values:i[1],shape:i[2]}}var gL=B({stringSplit_:mL});function yL(e,t){let n=$(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return L.runKernel(eh,r,s)}var AL=B({stringToHashBucketFast_:yL}),r8={fft:bh,ifft:tc,rfft:vh,irfft:L0},a8={hammingWindow:ZM,hannWindow:Yw,frame:Jw,stft:ez},Se={flipLeftRight:rz,grayscaleToRGB:oz,resizeNearestNeighbor:s8,resizeBilinear:n8,rotateWithOffset:lz,cropAndResize:nz,nonMaxSuppression:cz,nonMaxSuppressionAsync:Az,nonMaxSuppressionWithScore:bz,nonMaxSuppressionWithScoreAsync:wz,nonMaxSuppressionPadded:Iz,nonMaxSuppressionPaddedAsync:Cz,threshold:_z,transform:$z},ZA={bandPart:Fz,gramSchmidt:Mz,qr:Lz},o8={absoluteDifference:Vz,computeWeightedLoss:ka,cosineDistance:Gz,hingeLoss:jz,huberLoss:Xz,logLoss:Zz,meanSquaredError:Jz,sigmoidCrossEntropy:tL,softmaxCrossEntropy:rL},i8={sparseFillEmptyRows:oL,sparseReshape:lL,sparseSegmentMean:cL,sparseSegmentSum:pL},l8={stringNGrams:fL,stringSplit:gL,stringToHashBucketFast:AL},Ia=class extends tw{minimize(e,t=!1,n){let{value:s,grads:r}=this.computeGradients(e,n);if(n!=null){let a=n.map(o=>({name:o.name,tensor:r[o.name]}));this.applyGradients(a)}else this.applyGradients(r);return J(r),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return xw(e,t)}dispose(){this.iterations_!=null&&J(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ce(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Ia,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var X0=class extends Ia{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=L.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=L.registeredVariables[n],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accum_grad`,variable:Z(()=>it(r).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${n}/accum_var`,variable:Z(()=>it(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;Z(()=>{let u=ue(z(i,this.rho),z(bt(o),1-this.rho)),c=z(fe(Nn(ue(l,this.epsilon)),Nn(ue(i,this.epsilon))),o),p=ue(z(l,this.rho),z(bt(c),1-this.rho));i.assign(u),l.assign(p);let d=ue(z(c,-this.learningRate),r);r.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(J(this.accumulatedGrads.map(e=>e.variable)),J(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};X0.className="Adadelta";li(X0);var K0=class extends Ia{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=L.registeredVariables[n];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accumulator`,variable:Z(()=>qc(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[s].tensor:e[n];if(a==null)return;let o=this.accumulatedGrads[s].variable;Z(()=>{let i=ue(o,bt(a));o.assign(i);let l=ue(z(fe(a,Nn(ue(i,L.backend.epsilon()))),-this.learningRate),r);r.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&J(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};K0.className="Adagrad";li(K0);var Z0=class extends Ia{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Z(()=>{this.accBeta1=Ce(t).variable(),this.accBeta2=Ce(n).variable()}),s==null&&(this.epsilon=L.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);Z(()=>{let n=me(1,this.accBeta1),s=me(1,this.accBeta2);t.forEach((r,a)=>{let o=L.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:Z(()=>it(o).variable(i))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:Z(()=>it(o).variable(i))});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let u=this.accumulatedFirstMoment[a].variable,c=this.accumulatedSecondMoment[a].variable,p=ue(z(u,this.beta1),z(l,1-this.beta1)),d=ue(z(c,this.beta2),z(bt(l),1-this.beta2)),h=fe(p,n),f=fe(d,s);u.assign(p),c.assign(d);let m=ue(z(fe(h,ue(Nn(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(z(this.accBeta1,this.beta1)),this.accBeta2.assign(z(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&J(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&J(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Z(()=>{this.accBeta1.assign(Aa(this.beta1,this.iterations_+1)),this.accBeta2.assign(Aa(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Z0.className="Adam";li(Z0);var Y0=class extends Ia{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Z(()=>{this.iteration=Ce(0).variable(),this.accBeta1=Ce(t).variable()}),s==null&&(this.epsilon=L.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);Z(()=>{let n=me(1,this.accBeta1),s=fe(-this.learningRate,ue(z(this.iteration,this.decay),1));t.forEach((r,a)=>{let o=L.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:it(o).variable(i)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:it(o).variable(i)});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let u=this.accumulatedFirstMoment[a].variable,c=this.accumulatedWeightedInfNorm[a].variable,p=ue(z(u,this.beta1),z(l,1-this.beta1)),d=z(c,this.beta2),h=en(l),f=Qr(d,h);u.assign(p),c.assign(f);let m=ue(z(fe(s,n),fe(p,ue(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(ue(this.iteration,1)),this.accBeta1.assign(z(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&J(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&J(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Y0.className="Adamax";li(Y0);var wh=class extends Ia{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=Array.isArray(e)?e[s].tensor:e[n];if(r==null)return;let a=L.registeredVariables[n];Z(()=>{let o=ue(z(this.c,r),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=An(Ce(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};wh.className="SGD";li(wh);var J0=class extends wh{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ce(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=L.registeredVariables[n];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${n}/momentum`,variable:Z(()=>it(r).variable(!1))});let a=this.accumulations[s].variable,o=Array.isArray(e)?e[s].tensor:e[n];o!=null&&Z(()=>{let i,l=ue(z(this.m,a),o);this.useNesterov?i=ue(z(this.c,ue(o,z(l,this.m))),r):i=ue(z(this.c,l),r),a.assign(l),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&J(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};J0.className="Momentum";li(J0);var Q0=class extends Ia{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,s==null&&(this.epsilon=L.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=L.registeredVariables[n],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${n}/rms`,variable:Z(()=>it(r).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${n}/momentum`,variable:Z(()=>it(r).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${n}/mg`,variable:Z(()=>it(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;Z(()=>{let u=ue(z(i,this.decay),z(bt(o),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[s].variable,p=ue(z(c,this.decay),z(o,1-this.decay)),d=fe(z(o,this.learningRate),Nn(me(u,ue(bt(p),this.epsilon)))),h=ue(z(l,this.momentum),d);i.assign(u),c.assign(p),l.assign(h);let f=me(r,h);r.assign(f)}else{let c=ue(z(i,this.decay),z(bt(o),1-this.decay)),p=ue(z(l,this.momentum),fe(z(o,this.learningRate),Nn(ue(c,this.epsilon))));i.assign(c),l.assign(p);let d=me(r,p);r.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&J(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&J(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&J(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Q0.className="RMSProp";li(Q0);var Va=class{static sgd(e){return new wh(e)}static momentum(e,t,n=!1){return new J0(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Q0(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new Z0(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new X0(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new Y0(e,t,n,s,r)}static adagrad(e,t=.1){return new K0(e,t)}},Oi={sgd:Va.sgd,momentum:Va.momentum,adadelta:Va.adadelta,adagrad:Va.adagrad,rmsprop:Va.rmsprop,adamax:Va.adamax,adam:Va.adam},xL=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function YA(){return new Promise(e=>xL(()=>e()))}var T={};Ge(T,{ERF_A1:()=>RL,ERF_A2:()=>_L,ERF_A3:()=>DL,ERF_A4:()=>$L,ERF_A5:()=>PL,ERF_P:()=>EL,PARALLELIZE_THRESHOLD:()=>JA,SELU_SCALE:()=>c8,SELU_SCALEALPHA:()=>u8,applyActivation:()=>j0,assertAndGetBroadcastShape:()=>wt,assertAxesAreInnerMostDims:()=>TF,assertParamsConsistent:()=>bL,assignToTypedArray:()=>BL,axesAreInnerMostDims:()=>wA,calculateShapes:()=>H6,checkEinsumDimSizes:()=>jL,checkPadOnDimRoundingMode:()=>as,combineLocations:()=>fw,complexWithEvenIndex:()=>ML,complexWithOddIndex:()=>zL,computeConv2DInfo:()=>lh,computeConv3DInfo:()=>ow,computeDefaultPad:()=>rA,computeDilation2DInfo:()=>NP,computeOptimalWindowSize:()=>wL,computeOutAndReduceShapes:()=>mw,computeOutShape:()=>vL,computePool2DInfo:()=>aw,computePool3DInfo:()=>EP,convertConv2DDataFormat:()=>iw,decodeEinsumEquation:()=>GL,eitherStridesOrDilationsAreOne:()=>Jr,expandShapeToKeepDim:()=>Qi,exponent:()=>VL,exponents:()=>WL,fromStringArrayToUint8:()=>hB,fromUint8ToStringArray:()=>pB,getAxesPermutation:()=>gw,getBroadcastDims:()=>V6,getComplexWithIndex:()=>LL,getEinsumComputePath:()=>qL,getEinsumPermutation:()=>HL,getFusedBiasGradient:()=>H0,getFusedDyActivation:()=>G0,getImageCenter:()=>kL,getInnerMostAxes:()=>NF,getPermuted:()=>SL,getReductionAxes:()=>rn,getReshaped:()=>IL,getReshapedPermuted:()=>CL,getSliceBeginCoords:()=>TL,getSliceSize:()=>NL,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>YL,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>JL,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>QL,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>nB,getSparseReshapeInputOutputMismatchErrorMessage:()=>rB,getSparseReshapeInputOutputMultipleErrorMessage:()=>sB,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>eB,getSparseReshapeNegativeOutputDimErrorMessage:()=>tB,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>lB,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>aB,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>oB,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>iB,getUndoAxesPermutation:()=>kA,isIdentityPermutation:()=>XL,log:()=>Q_,mergeRealAndImagArrays:()=>FL,prepareAndValidate:()=>G6,prepareSplitSize:()=>ZL,segment_util:()=>d8,shouldFuse:()=>q0,slice_util:()=>Ut,splitRealAndImagArrays:()=>OL,tupleValuesAreOne:()=>no,upcastType:()=>Mn,validateInput:()=>jy,validateUpdateShape:()=>Hy,warn:()=>Ga});function bL(e,t){let n=e[0].length;e.forEach((r,a)=>{O(r.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),O(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let s=e[0];e.forEach((r,a)=>{for(let o=0;o<n;o++)O(o===t||r[o]===s[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function vL(e,t){let n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var JA=30;function wL(e){return e<=JA?e:hm(e,Math.floor(Math.sqrt(e)))}function kL(e,t,n){let s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}function IL(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let a=t.length;for(let o=0;o<a;++o)r=r.concat([e[o+1]/t[o],t[o]]);r=r.concat(e.slice(a+1))}return r}function SL(e,t,n=!0){let s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{let r=[],a=[];for(let o=1;o<e;++o)o>=t*2+1||o%2===1?a.push(o):r.push(o);s.push(...r),s.push(0),s.push(...a)}return s}function CL(e,t,n,s=!0){let r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function TL(e,t){let n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function NL(e,t,n){let s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var u8=1.7580993408473768,c8=1.0507009873554805,EL=.3275911,RL=.254829592,_L=-.284496736,DL=1.421413741,$L=-1.453152027,PL=1.061405429;function FL(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function OL(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function ML(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function zL(e){let t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function LL(e,t){let n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function BL(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function WL(e,t){let n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function VL(e,t,n){let s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}var d3="->",UL=/->/g,Nv=",",Ev="...";function GL(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(UL,"").length)/d3.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${d3}").`);let[s,r]=e.split(d3);O(s.indexOf(Ev)===-1,()=>`The ellipsis notation ("${Ev}") is not supported yet.`);let a=s.split(Nv),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let d=0;d<r.length;++d){let h=r[d];if(!a.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);i.indexOf(h)===-1&&i.push(h)}for(let d=0;d<s.length;++d){let h=s[d];i.indexOf(h)===-1&&h!==Nv&&i.push(h)}let l=new Array(a.length);for(let d=0;d<o;++d){if(new Set(a[d].split("")).size!==a[d].length)throw new Error(`Found duplicate axes in input component ${a[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let h=0;h<a[d].length;++h)l[d].push(i.indexOf(a[d][h]))}let u=i.length,c=r.length,p=[];for(let d=c;d<u;++d)p.push(d);return{allDims:i,summedDims:p,idDims:l}}function HL(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;let s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function jL(e,t,n){let s=new Array(e);for(let r=0;r<n.length;++r){let a=n[r].shape;for(let o=0;o<t[r].length;++o)s[t[r][o]]===void 0?s[t[r][o]]=a[o]:O(s[t[r][o]]===a[o],()=>`Expected dimension ${s[t[r][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function qL(e,t){let n=e,s=[],r=0;e.length===0&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)s.push([]);let a=[];for(let o=0;o<n.length;++o){let i=n[o],l=KL(t,i);for(let u of l)a.indexOf(u)===-1&&(s[o].push(u),a.push(u))}return{path:n,steps:s}}function XL(e){return e.every((t,n)=>t===n)}function KL(e,t){let n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function ZL(e,t,n=0){let s=[];if(typeof t=="number")O(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((o,i)=>(i===-1&&(o+=1),o),0);O(r<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let o=t.reduce((i,l)=>l>0?i+l:i);t[a]=e.shape[n]-o}O(e.shape[n]===t.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}function YL(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function JL(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function QL(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function eB(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function tB(e,t){return`size ${e} must be non-negative, not ${t}`}function nB(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function sB(e,t){let n=Nt(e),s=Nt(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function rB(e,t){let n=Nt(e),s=Nt(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}function aB(){return"segment ids must be >= 0"}function oB(){return"segment ids are not increasing"}function iB(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function lB(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var d8={};Ge(d8,{collectGatherOpShapeInfo:()=>dB,computeOutShape:()=>cB,segOpComputeOptimalWindowSize:()=>uB});function uB(e,t){let n=!1,s;for(e<=JA?(s=e,n=!0):s=hm(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=hm(e,s+1);return s}function cB(e,t,n){let s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function dB(e,t,n,s){let r=t.shape.length,a=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let p=0;p<s;++p)if(e.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${e.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let o=e.shape[n],i=[],l=1,u=1,c=1;for(let p=0;p<s;++p)i.push(e.shape[p]),l*=e.shape[p];for(let p=s;p<n;p++)i.push(e.shape[p]),u*=e.shape[p];for(let p=s;p<r;p++)i.push(t.shape[p]);for(let p=n+1;p<a;p++)i.push(e.shape[p]),c*=e.shape[p];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:o,outputShape:i}}function pB(e){try{return e.map(t=>ym(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function hB(e){return e.map(t=>sh(t))}var cr={};Ge(cr,{nonMaxSuppressionV3Impl:()=>Qw,nonMaxSuppressionV4Impl:()=>e8,nonMaxSuppressionV5Impl:()=>t8,whereImpl:()=>Vw});var p8={kernelName:ll,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,eu(ye(n,"float32"),-1))}}},fB={kernelName:fc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=bt(ye(n,"float32")),r=Nn(me(Ce(1),s));return Dt(fe(e,r))}}}},mB={kernelName:mc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Nn(me(bt(ye(n,"float32")),1));return fe(e,s)}}}},gB={kernelName:ba,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=wt(n.shape,s.shape);return{a:()=>{let i=e,l=rn(n.shape,r);return l.length>0&&(i=ke(i,l)),V(i,n.shape)},b:()=>{let i=e,l=rn(s.shape,r);return l.length>0&&(i=ke(i,l)),V(i,s.shape)}}}},yB={kernelName:ho,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}},AB={kernelName:fo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>it(n)}}},xB={kernelName:Ac,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>it(n)}}},bB={kernelName:xc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,Nn(me(Ce(1),bt(ye(n,"float32")))))}}},vB={kernelName:bc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Nn(ue(Ce(1),bt(ye(n,"float32"))));return fe(e,s)}}}},wB={kernelName:kc,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=wt(n.shape,s.shape);return{a:()=>{let i=ue(bt(n),bt(s)),l=z(e,fe(s,i)),u=rn(n.shape,r);return u.length>0&&(l=ke(l,u)),V(l,n.shape)},b:()=>{let i=ue(bt(n),bt(s)),l=Dt(z(e,fe(n,i))),u=rn(s.shape,r);return u.length>0&&(l=ke(l,u)),V(l,s.shape)}}}},kB={kernelName:vc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,ue(bt(ye(n,"float32")),1))}}},IB={kernelName:wc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,me(Ce(1),bt(ye(n,"float32"))))}}};function SB(e,t,n,s,r,a){let o=$(e,"dy","avgPool3dGrad"),i=$(t,"input","avgPool3dGrad"),l=o,u=i,c=!1;i.rank===4&&(c=!0,l=V(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),u=V(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),O(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),as("avgPool3dGrad",r,a);let p={dy:l,input:u},d={filterSize:n,strides:s,pad:r,dimRoundingMode:a},h=L.runKernel(qm,p,d);return c?V(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var CB=B({avgPool3dGrad_:SB}),TB={kernelName:Lp,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>CB(e,s,r,a,o,i)}}};function NB(e,t,n,s,r){let a=$(e,"dy","avgPoolGrad"),o=$(t,"input","avgPoolGrad");O(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,l=a,u=!1;o.rank===3&&(u=!0,i=V(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=V(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),O(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let c={dy:l,input:i},p={filterSize:n,strides:s,pad:r},d=L.runKernel(jm,c,p);return u?V(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var EB=B({avgPoolGrad_:NB}),RB={kernelName:mo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o}=n;return{x:()=>EB(e,s,r,a,o)}}},_B={kernelName:go,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[s,r]=t,{transposeA:a,transposeB:o}=n;return!a&&!o?{a:()=>Qe(e,r,!1,!0),b:()=>Qe(s,e,!0,!1)}:!a&&o?{a:()=>Qe(e,r,!1,!1),b:()=>Qe(e,s,!0,!1)}:a&&!o?{a:()=>Qe(r,e,!1,!0),b:()=>Qe(s,e,!1,!1)}:{a:()=>Qe(r,e,!0,!0),b:()=>Qe(e,s,!0,!0)}}},DB={kernelName:ul,gradFunc:(e,t,n)=>{let{blockShape:s,crops:r}=n;return{x:()=>yh(e,s,r)}}},$B={kernelName:m6,gradFunc:(e,t,n)=>{let s=n,r=s.inputShape,a=s.shape,o=Array.from(a);for(let l=r.length-1;l>=0;l--)if(r[l]===a[l])o[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let i=[];for(let l=0;l<o.length;l++)o[l]>1&&i.push(l);return{x:()=>ke(e,i,!0)}}},PB={kernelName:yo,gradFunc:e=>({x:()=>e.clone()})},FB={kernelName:Ao,gradFunc:e=>({x:()=>it(e)})},OB={kernelName:va,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>zn(ir(ui(s,r),ci(s,a)),e,it(e))}}},MB={kernelName:Wp,inputsToSave:["x"],gradFunc:p8.gradFunc},zB={kernelName:cl,saveAllInputs:!0,gradFunc:(e,t,n)=>{let s=t.map(l=>l.shape),{axis:r}=n,a=lr(r,t[0].shape)[0],o=s.map(l=>l[a]);return Kt(e,o,a).map(l=>()=>l)}},LB={kernelName:xo,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{dilations:a,strides:o,pad:i,dataFormat:l}=n;return O(no(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>fA(s.shape,e,r,o,i,l),filter:()=>XA(s,e,r.shape,o,i,l)}}},BB={kernelName:bo,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:l}=n;return{dy:()=>ga(e,r,a,o,i,1,l),filter:()=>XA(e,s,r.shape,a,o,i,l)}}};function WB(e,t,n,s,r){let a=e;e.rank===4&&(a=V(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;o.rank===4&&(o=V(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),O(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),O(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),O(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),O(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),O(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);let i={x:a,dy:o},l={strides:s,pad:r,filterShape:n};return L.runKernel(Ym,i,l)}var VB=B({conv3DBackpropFilter_:WB}),UB={kernelName:Vp,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a}=n;O(no(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let[o,i]=t;return{x:()=>cw(o.shape,e,i,r,a),filter:()=>VB(o,e,i.shape,r,a)}}},GB={kernelName:vo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(Dt(O0(ye(n,"float32"))),e)}}},HB={kernelName:wo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(M0(ye(n,"float32")),e)}}},jB={kernelName:ko,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r,exclusive:a,reverse:o}=n;return{x:()=>{let i=gw([r],s.rank),l=w0(e,r,a,!o);return i!=null&&(l=et(l,i)),l}}}},qB={kernelName:Io,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a,dimRoundingMode:o}=n,i=s==null?[1,1]:s;O(no(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[l,u]=t;return O(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),O(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),O(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),O(Jr(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),as("depthwiseConv2d",a,o),{x:()=>Zw(l.shape,e,u,r,a,i,o),filter:()=>Kw(l,e,u.shape,r,a,i,o)}}},XB={kernelName:Up,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,a={x:s,filter:r,dy:e},o={x:s,filter:r,dy:e};return{x:()=>L.runKernel(fm,a,n),filter:()=>L.runKernel(mm,o,n)}}},KB={kernelName:Co,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,s={dy:e,y:n};return{x:()=>L.runKernel(s0,s)}}},ZB={kernelName:Ic,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=z(Ds(Dt(bt(n))),2/Math.sqrt(Math.PI));return{x:()=>z(e,s)}}},YB={kernelName:To,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,n)}}},JB={kernelName:ml,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>V(e,n.shape)}}},QB={kernelName:gl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,Ds(n))}}},eW={kernelName:No,gradFunc:e=>({x:()=>it(e)})},tW={kernelName:Eo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=wt(n.shape,s.shape);return{a:()=>{let i=fe(e,ye(s,"float32")),l=rn(n.shape,r);return l.length>0?V(ke(i,l),n.shape):i},b:()=>{let i=z(e,ye(n,"float32")),l=rn(s.shape,r);l.length>0&&(i=V(ke(i,l),s.shape));let u=bt(s);return Dt(fe(i,ye(u,"float32")))}}}},nW={kernelName:Ro,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:s}=n,[r,a,o,i]=t,l=i==null?Ce(1):i,u=rn(a.shape,r.shape),c=[];if(a.rank===1){for(let b=0;b<r.shape.length-1;++b)c.push(r.shape[b]);c.push(1)}let p=me(r,a),d=z(e,l),h=$0(ue(o,Ce(s))),f=z(z(z(h,h),h),Ce(-.5));return{x:()=>a.rank===1?V(z(z(e,Hs(V(h,[1,1,1,a.shape[0]]),c)),l),r.shape):V(z(z(e,h),l),r.shape),mean:()=>{let b=z(z(h,Ce(-1)),d);return a.rank===1&&(b=ke(b,u)),V(b,a.shape)},variance:()=>{let b=z(z(f,p),d);return a.rank===1&&(b=ke(b,u)),V(b,a.shape)},scale:()=>{let b=z(p,h),w=z(e,b);return a.rank===1&&(w=ke(w,u)),V(w,a.shape)},offset:()=>{let b=e;return a.rank===1&&(b=ke(b,u)),V(b,a.shape)}}}},sW={kernelName:Al,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[s,r]=t,{axis:a}=n,o=lr(a,s.shape)[0];return{x:()=>{let l=s.shape,u=r.size,c=l.slice(0,o),p=c.length,d=l.slice(a,l.length).slice(1),h=d.length,f=Rv(0,p),m=Rv(p+1,p+1+h),g=_v([c,[u],d]),y=V(e,g),x=V(r,[u]),A=_v([[p],f,m]),b=et(y,A),w=V0(b,x,s.shape[o]),I=kA(A);return w=et(w,I),w},indices:()=>r}}};function Rv(e,t){let n=[];for(let s=e;s<t;++s)n.push(s);return n}function _v(e){let t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}var rW={kernelName:_o,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>it(n),b:()=>it(s)}}},aW={kernelName:Do,gradFunc:e=>({x:()=>ye(e,"float32")})},oW={kernelName:Cc,gradFunc:e=>({x:()=>it(e)})},iW={kernelName:Tc,gradFunc:e=>({x:()=>it(e)})},lW={kernelName:Nc,gradFunc:e=>({x:()=>it(e)})},uW={kernelName:$o,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{alpha:r}=n,a=As(s,0);return{x:()=>zn(a,e,z(e,r))}}},cW={kernelName:Ec,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,ue(n,1))}}},dW={kernelName:Po,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,ye(n,"float32"))}}},pW={kernelName:y6,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n;return{logits:()=>{let o=Ds(s);return me(e,z(ke(e,r,!0),o))}}}};function hW(e,t,n,s=5,r=1,a=1,o=.5){let i={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:o};return L.runKernel(i0,i,l)}var fW=B({localResponseNormalizationBackprop_:hW}),mW={kernelName:jp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{depthRadius:a,bias:o,alpha:i,beta:l}=n;return{x:()=>fW(s,r,e,a,o,i,l)}}};function h8(e,t,n,s){return t.rank<n.rank&&(t=V(t,Qi(t.shape,s))),e.rank<n.rank&&(e=V(e,Qi(e.shape,s))),{x:()=>z(e,ye(_s(n,t),e.dtype))}}var Dv={kernelName:Fo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{reductionIndices:r}=s,a=t[0],o=t[1],i=lr(r,a.shape),l=h8(e,o,a,i);return{x:()=>l.x()}}},gW={kernelName:Oo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>z(e,ye(ui(n,s),"float32")),b:()=>z(e,ye(I0(n,s),"float32"))}}};function yW(e,t,n,s,r,a,o){let i=$(e,"dy","maxPool3dGrad"),l=$(t,"input","maxPool3dGrad"),u=$(n,"output","maxPool3dGrad"),c=i,p=l,d=u,h=!1;l.rank===4&&(h=!0,c=V(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),p=V(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=V(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),O(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),O(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),O(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),as("maxPool3dGrad",a,o);let f={dy:c,input:p,output:d},m={filterSize:s,strides:r,pad:a,dimRoundingMode:o},g=L.runKernel(u0,f,m);return h?V(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var AW=B({maxPool3dGrad_:yW}),xW={kernelName:qp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=n;return{x:()=>AW(e,s,r,a,o,i,l)}}};function bW(e,t,n,s,r,a,o){let i=$(e,"dy","maxPoolGrad"),l=$(t,"input","maxPoolGrad"),u=$(n,"output","maxPoolGrad");O(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),O(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),O(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),as("maxPoolGrad",a,o);let c={dy:i,input:l,output:u},p={filterSize:s,strides:r,pad:a,dimRoundingMode:o};return L.runKernel(l0,c,p)}var vW=B({maxPoolGrad_:bW}),wW={kernelName:Mo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>vW(e,s,r,a,o,i)}}},kW={kernelName:zo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=lr(r,s.shape),i=mw(s.shape,a)[1],l=Nt(i);return{x:()=>{let c=s.shape.slice();a.forEach(h=>{c[h]=1});let p=V(e,c);return fe(z(p,Es(s.shape,"float32")),l)}}}},IW={kernelName:Lo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{axis:r}=s,[a,o]=t,i=lr(r,a.shape),l=h8(e,o,a,i);return{x:()=>l.x()}}},SW={kernelName:Bo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>z(e,ye(ci(n,s),"float32")),b:()=>z(e,ye(As(n,s),"float32"))}}},CW={kernelName:Wo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>ze(e,a,s.shape)}}},TW={kernelName:_c,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=wt(n.shape,s.shape);return{a:()=>{let i=rn(n.shape,r);return i.length>0?V(ke(e,i),n.shape):e},b:()=>{let i=z(e,Dt(Xc(fe(n,s)))),l=rn(s.shape,r);return l.length>0?V(ke(i,l),s.shape):i}}}},NW={kernelName:Vo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=wt(n.shape,s.shape);return{a:()=>{let i=z(e,ye(s,"float32")),l=rn(n.shape,r);return l.length>0?V(ke(i,l),n.shape):i},b:()=>{let i=z(e,ye(n,"float32")),l=rn(s.shape,r);return l.length>0?V(ke(i,l),s.shape):i}}}},EW={kernelName:Sl,gradFunc:e=>({x:()=>Dt(e)})},RW={kernelName:Rl,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Wt(n.shape,"float32")}}},_W={kernelName:El,gradFunc:e=>({x:()=>it(e)})},DW={kernelName:_l,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:s}=n;return En(e,s).map(a=>()=>a)}},$v={kernelName:Uo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>ze(e,a,s.shape)}}},$W={kernelName:Go,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,s,r]=t,a=n,o=s,i=wt(a.shape,o.shape);return{a:()=>{let c=ye(o,"float32"),p=z(e,z(c,Aa(a,me(c,Ce(1))))),d=rn(a.shape,i);return d.length>0&&(p=ke(p,d)),V(p,a.shape)},b:()=>{let c=As(a,0),p=zn(c,$s(a),it(a)),d=z(e,z(r,p)),h=rn(o.shape,i);return h.length>0&&(d=ke(d,h)),V(d,o.shape)}}}},PW={kernelName:Ho,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,s]=t,r=As(n,0);return{x:()=>zn(r,e,z(e,s)),alpha:()=>{let a=zn(r,it(e),z(e,n)),o=rn(s.shape,e.shape);return o.length>0&&(a=ke(a,o)),V(a,s.shape)}}}};function FW(e,t,n){let s=e.shape.slice();s[n]=1;let r=V(t,s),a=Np(e,n,!0,!1),o=Np(e,n,!0,!0),i=z(a,o);return z(r,i)}function OW(e,t,n){let s=e.shape.length,r=s-n.length,a=T.getAxesPermutation(n,s),o=e;a!=null&&(o=et(e,a));let i=o.shape.slice(),u=i.splice(s-n.length,n.length).reduce((d,h)=>d*h,1);i.push(u);let c=o.reshape(i),p=FW(c,t,r);if(p=p.reshape(o.shape),a!=null){let d=T.getUndoAxesPermutation(a);p=et(p,d)}return p}var MW={kernelName:jo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=[];return r==null?a=s.shape.map((o,i)=>i):typeof r=="number"?a=[r]:a=r,{x:()=>OW(s,e,a)}}},zW={kernelName:So,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=wt(n.shape,s.shape);return{a:()=>{let i=fe(e,ye(s,"float32")),l=rn(n.shape,r);return l.length>0?V(ke(i,l),n.shape):i},b:()=>{let i=z(e,ye(n,"float32")),l=rn(s.shape,r);l.length>0&&(i=V(ke(i,l),s.shape));let u=bt(s);return Dt(fe(i,ye(u,"float32")))}}}},LW={kernelName:Pc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,Dt(bt(n)))}}},BW={kernelName:Zo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=z(ci(n,6),eu(n));return{x:()=>z(e,ye(s,"float32"))}}},WW={kernelName:qo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,ye(eu(n),"float32"))}}},VW={kernelName:Dl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,n.shape)}}},UW={kernelName:Ko,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>L.runKernel(h0,r,n)}}},GW={kernelName:Xo,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>L.runKernel(p0,r,n)}}},HW={kernelName:$l,gradFunc:(e,t,n)=>{let{dims:s}=n,r=lr(s,e.shape);return{x:()=>Xs(e,r)}}},jW={kernelName:Pl,gradFunc:e=>({x:()=>it(e)})},qW={kernelName:Yo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Dt(fe(e,z(Aa(n,1.5),2)))}}},XW={kernelName:Ol,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>ye(it(n),"float32"),t:()=>z(e,ye(n,e.dtype)),e:()=>z(e,ye(fh(n),e.dtype))}}},KW={kernelName:Fc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=As(n,Ce(0)),r=Ce(u8),a=Ce(c8),o=z(e,a),i=z(z(e,r),Ds(ye(n,"float32")));return zn(s,o,i)}}}},ZW={kernelName:Qo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,z(n,me(Ce(1),n)))}}},YW={kernelName:Oc,gradFunc:e=>({x:()=>it(e)})},JW={kernelName:Jo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(dh(ye(n,"float32")),e)}}},QW={kernelName:zl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(v0(ye(n,"float32")),e)}}},eV={kernelName:Ml,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{begin:r,size:a}=n,o=s.shape,[i,l]=ew(s,r,a),u=[];for(let c=0;c<e.rank;c++)u.push([i[c],o[c]-i[c]-l[c]]);return{x:()=>Zs(e,u)}}},tV={kernelName:ni,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{dim:r}=n,a=!0,o=z(e,s);return{logits:()=>me(o,z(ke(o,[r],a),s))}}},nV={kernelName:Mc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,Cn(n))}}},Pv={kernelName:Ll,gradFunc:(e,t,n)=>{let{blockShape:s,paddings:r}=n;return{x:()=>ch(e,s,r)}}},Fv={kernelName:Bl,gradFunc:(e,t,n)=>{let{axis:s}=n;return{x:()=>St(e,s)}}},sV={kernelName:ei,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,z(Nn(ye(n,"float32")),2))}}},rV={kernelName:Lc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,z(ye(n,"float32"),2))}}},aV={kernelName:si,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Ce(2);return{a:()=>z(e,z(r,me(n,s))),b:()=>z(e,z(r,me(s,n)))}}},oV={kernelName:oi,gradFunc:e=>({x:()=>it(e)})},iV={kernelName:ri,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=wt(n.shape,s.shape);return{a:()=>{let i=e,l=rn(n.shape,r);return l.length>0&&(i=ke(i,l)),V(i,n.shape)},b:()=>{let i=e,l=rn(s.shape,r);return l.length>0&&(i=ke(i,l)),V(Dt(i),s.shape)}}}},lV={kernelName:ti,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,r=s.shape.slice(),{axis:a}=n;lr(a,s.shape).forEach(u=>{r[u]=1});let i=V(e,r),l=z(i,Es(s.shape,"float32"));return{x:()=>l}}},uV={kernelName:Vl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,bt(dh(n)))}}},cV={kernelName:ai,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(me(Ce(1),bt(n)),e)}}},dV={kernelName:wa,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{reps:r}=n;return{x:()=>{let o=it(s);if(s.rank===1)for(let i=0;i<r[0];++i)o=ue(o,ze(e,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)o=ue(o,ze(e,[i*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)o=ue(o,ze(e,[i*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)for(let c=0;c<r[3];++c)o=ue(o,ze(e,[i*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}},pV={kernelName:jr,gradFunc:(e,t,n)=>{let s=n,{perm:r}=s,a=kA(r);return{x:()=>et(e,a)}}},hV={kernelName:Hl,gradFunc:(e,t,n)=>{let s=n,{axis:r}=s;return{value:()=>an(e,r)}}},fV={kernelName:th,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>mV(e,n)}}};function mV(e,t){let n=Qr(t,it(t)),s=Kc(e,n),r=ui(t,Ce(0,"int32")),a=s.rank-r.rank;for(let i=0;i<a;++i)r=Lt(r,i+1);r=ir(r,Es(s.shape,"bool"));let o=it(s);return zn(r,s,o)}var gV={kernelName:jl,gradFunc:e=>({x:()=>it(e)})},yV=[p8,fB,mB,gB,yB,AB,xB,bB,vB,wB,kB,IB,TB,RB,_B,DB,$B,PB,FB,OB,MB,zB,BB,LB,UB,GB,HB,jB,qB,XB,zW,KB,ZB,YB,JB,QB,tW,eW,nW,sW,rW,aW,oW,iW,lW,uW,cW,dW,pW,mW,Dv,Dv,gW,xW,wW,kW,IW,SW,CW,TW,NW,EW,RW,_W,DW,$v,$v,$W,PW,MW,LW,BW,WW,VW,UW,GW,HW,jW,qW,XW,KW,ZW,YW,JW,QW,eV,tV,nV,Pv,Pv,Fv,Fv,sV,aV,rV,oV,iV,lV,uV,cV,dV,pV,hV,fV,gV];for(let e of yV)A6(e);ne().prototype.abs=function(){return this.throwIfDisposed(),en(this)};ne().prototype.acos=function(){return this.throwIfDisposed(),Zy(this)};ne().prototype.acosh=function(){return this.throwIfDisposed(),Yy(this)};ne().prototype.add=function(e){return this.throwIfDisposed(),ue(this,e)};ne().prototype.all=function(e,t){return this.throwIfDisposed(),A0(this,e,t)};ne().prototype.any=function(e,t){return this.throwIfDisposed(),Tp(this,e,t)};ne().prototype.argMax=function(e){return this.throwIfDisposed(),Rs(this,e)};ne().prototype.argMin=function(e){return this.throwIfDisposed(),Jy(this,e)};ne().prototype.asScalar=function(){return this.throwIfDisposed(),O(this.size===1,()=>"The array must have only 1 element."),V(this,[])};ne().prototype.asType=function(e){return this.throwIfDisposed(),ye(this,e)};ne().prototype.as1D=function(){return this.throwIfDisposed(),V(this,[this.size])};ne().prototype.as2D=function(e,t){return this.throwIfDisposed(),V(this,[e,t])};ne().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),V(this,[e,t,n])};ne().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),V(this,[e,t,n,s])};ne().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),V(this,[e,t,n,s,r])};ne().prototype.asin=function(){return this.throwIfDisposed(),Qy(this)};ne().prototype.asinh=function(){return this.throwIfDisposed(),eA(this)};ne().prototype.atan=function(){return this.throwIfDisposed(),tA(this)};ne().prototype.atan2=function(e){return this.throwIfDisposed(),nA(this,e)};ne().prototype.atanh=function(){return this.throwIfDisposed(),sA(this)};ne().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),uh(this,e,t,n,s)};ne().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),ch(this,e,t)};ne().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),Uc(this,e,t,n,s,r)};ne().prototype.broadcastTo=function(e){return this.throwIfDisposed(),ju(this,e)};ne().prototype.cast=function(e){return this.throwIfDisposed(),ye(this,e)};ne().prototype.ceil=function(){return this.throwIfDisposed(),cA(this)};ne().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ms(this,e,t)};ne().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof nt&&(e=[e]),St([this,...e],t)};ne().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),x0(this,e,t,n,s,r,a)};ne().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),b0(this,e,t,n,s,r)};ne().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),ga(this,e,t,n,s,r,a)};ne().prototype.cos=function(){return this.throwIfDisposed(),dh(this)};ne().prototype.cosh=function(){return this.throwIfDisposed(),v0(this)};ne().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Np(this,e,t,n)};ne().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),w0(this,e,t,n)};ne().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),yA(this,e,t)};ne().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Gc(this,e,t,n,s,r,a)};ne().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),AA(this,e,t,n,s,r)};ne().prototype.divNoNan=function(e){return this.throwIfDisposed(),xA(this,e)};ne().prototype.div=function(e){return this.throwIfDisposed(),fe(this,e)};ne().prototype.dot=function(e){return this.throwIfDisposed(),bA(this,e)};ne().prototype.elu=function(){return this.throwIfDisposed(),Hc(this)};ne().prototype.equal=function(e){return this.throwIfDisposed(),_s(this,e)};ne().prototype.erf=function(){return this.throwIfDisposed(),vA(this)};ne().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),IA(this,e,t)};ne().prototype.exp=function(){return this.throwIfDisposed(),Ds(this)};ne().prototype.expandDims=function(e){return this.throwIfDisposed(),Lt(this,e)};ne().prototype.expm1=function(){return this.throwIfDisposed(),SA(this)};ne().prototype.fft=function(){return this.throwIfDisposed(),bh(this)};ne().prototype.flatten=function(){return this.throwIfDisposed(),V(this,[this.size])};ne().prototype.floor=function(){return this.throwIfDisposed(),Xc(this)};ne().prototype.floorDiv=function(e){return this.throwIfDisposed(),Vc(this,e)};ne().prototype.gather=function(e,t){return this.throwIfDisposed(),Kc(this,e,t)};ne().prototype.greaterEqual=function(e){return this.throwIfDisposed(),ui(this,e)};ne().prototype.greater=function(e){return this.throwIfDisposed(),As(this,e)};ne().prototype.ifft=function(){return this.throwIfDisposed(),tc(this)};ne().prototype.irfft=function(){return this.throwIfDisposed(),L0(this)};ne().prototype.isFinite=function(){return this.throwIfDisposed(),CA(this)};ne().prototype.isInf=function(){return this.throwIfDisposed(),TA(this)};ne().prototype.isNaN=function(){return this.throwIfDisposed(),NA(this)};ne().prototype.leakyRelu=function(e){return this.throwIfDisposed(),ph(this,e)};ne().prototype.lessEqual=function(e){return this.throwIfDisposed(),ci(this,e)};ne().prototype.less=function(e){return this.throwIfDisposed(),I0(this,e)};ne().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),EA(this,e,t,n,s)};ne().prototype.logSigmoid=function(){return this.throwIfDisposed(),RA(this)};ne().prototype.logSoftmax=function(e){return this.throwIfDisposed(),C0(this,e)};ne().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),T0(this,e,t)};ne().prototype.log=function(){return this.throwIfDisposed(),$s(this)};ne().prototype.log1p=function(){return this.throwIfDisposed(),hh(this)};ne().prototype.logicalAnd=function(e){return this.throwIfDisposed(),ir(this,e)};ne().prototype.logicalNot=function(){return this.throwIfDisposed(),fh(this)};ne().prototype.logicalOr=function(e){return this.throwIfDisposed(),N0(this,e)};ne().prototype.logicalXor=function(e){return this.throwIfDisposed(),_A(this,e)};ne().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Qe(this,e,t,n)};ne().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),mh(this,e,t,n,s)};ne().prototype.max=function(e,t){return this.throwIfDisposed(),hn(this,e,t)};ne().prototype.maximum=function(e){return this.throwIfDisposed(),Qr(this,e)};ne().prototype.mean=function(e,t){return this.throwIfDisposed(),Bt(this,e,t)};ne().prototype.min=function(e,t){return this.throwIfDisposed(),ya(this,e,t)};ne().prototype.minimum=function(e){return this.throwIfDisposed(),Zc(this,e)};ne().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),$A(this,e,t)};ne().prototype.mod=function(e){return this.throwIfDisposed(),Jl(this,e)};ne().prototype.mul=function(e){return this.throwIfDisposed(),z(this,e)};ne().prototype.neg=function(){return this.throwIfDisposed(),Dt(this)};ne().prototype.norm=function(e,t,n){return this.throwIfDisposed(),jc(this,e,t,n)};ne().prototype.notEqual=function(e){return this.throwIfDisposed(),el(this,e)};ne().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Ju(this,e,t,n)};ne().prototype.onesLike=function(){return this.throwIfDisposed(),Ps(this)};ne().prototype.pad=function(e,t){return this.throwIfDisposed(),Zs(this,e,t)};ne().prototype.pool=function(e,t,n,s,r,a){return this.throwIfDisposed(),PA(this,e,t,n,s,r,a)};ne().prototype.pow=function(e){return this.throwIfDisposed(),Aa(this,e)};ne().prototype.prelu=function(e){return this.throwIfDisposed(),Ah(this,e)};ne().prototype.prod=function(e,t){return this.throwIfDisposed(),FA(this,e,t)};ne().prototype.reciprocal=function(){return this.throwIfDisposed(),zA(this)};ne().prototype.relu=function(){return this.throwIfDisposed(),Fr(this)};ne().prototype.relu6=function(){return this.throwIfDisposed(),_0(this)};ne().prototype.reshapeAs=function(e){return this.throwIfDisposed(),V(this,e.shape)};ne().prototype.reshape=function(e){return this.throwIfDisposed(),V(this,e)};ne().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),n8(this,e,t,n)};ne().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),s8(this,e,t,n)};ne().prototype.reverse=function(e){return this.throwIfDisposed(),Xs(this,e)};ne().prototype.rfft=function(){return this.throwIfDisposed(),vh(this)};ne().prototype.round=function(){return this.throwIfDisposed(),D0(this)};ne().prototype.rsqrt=function(){return this.throwIfDisposed(),$0(this)};ne().prototype.selu=function(){return this.throwIfDisposed(),P0(this)};ne().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),F0(this,e,t,n,s,r,a)};ne().prototype.sigmoid=function(){return this.throwIfDisposed(),Cn(this)};ne().prototype.sign=function(){return this.throwIfDisposed(),LA(this)};ne().prototype.sin=function(){return this.throwIfDisposed(),O0(this)};ne().prototype.sinh=function(){return this.throwIfDisposed(),M0(this)};ne().prototype.slice=function(e,t){return this.throwIfDisposed(),ze(this,e,t)};ne().prototype.softmax=function(e){return this.throwIfDisposed(),Ql(this,e)};ne().prototype.softplus=function(){return this.throwIfDisposed(),Yl(this)};ne().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),yh(this,e,t)};ne().prototype.split=function(e,t){return this.throwIfDisposed(),Kt(this,e,t)};ne().prototype.sqrt=function(){return this.throwIfDisposed(),Nn(this)};ne().prototype.square=function(){return this.throwIfDisposed(),bt(this)};ne().prototype.squaredDifference=function(e){return this.throwIfDisposed(),B0(this,e)};ne().prototype.squeeze=function(e){return this.throwIfDisposed(),st(this,e)};ne().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof nt?[this,e]:[this,...e];return an(n,t)};ne().prototype.step=function(e){return this.throwIfDisposed(),eu(this,e)};ne().prototype.stridedSlice=function(e,t,n,s,r,a,o,i){return this.throwIfDisposed(),BA(this,e,t,n,s,r,a,o,i)};ne().prototype.sub=function(e){return this.throwIfDisposed(),me(this,e)};ne().prototype.sum=function(e,t){return this.throwIfDisposed(),ke(this,e,t)};ne().prototype.tan=function(){return this.throwIfDisposed(),WA(this)};ne().prototype.tanh=function(){return this.throwIfDisposed(),Ji(this)};ne().prototype.tile=function(e){return this.throwIfDisposed(),Hs(this,e)};ne().prototype.toBool=function(){return this.throwIfDisposed(),ye(this,"bool")};ne().prototype.toFloat=function(){return this.throwIfDisposed(),ye(this,"float32")};ne().prototype.toInt=function(){return this.throwIfDisposed(),ye(this,"int32")};ne().prototype.topk=function(e,t){return this.throwIfDisposed(),VA(this,e,t)};ne().prototype.transpose=function(e){return this.throwIfDisposed(),et(this,e)};ne().prototype.unique=function(e){return this.throwIfDisposed(),UA(this,e)};ne().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),V0(this,e,t)};ne().prototype.unstack=function(e){return this.throwIfDisposed(),En(this,e)};ne().prototype.where=function(e,t){return this.throwIfDisposed(),zn(e,this,t)};ne().prototype.zerosLike=function(){return this.throwIfDisposed(),it(this)};var ua=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ua.prototype)}},Tr=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Tr.prototype)}},H=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,H.prototype)}},qe=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qe.prototype)}},f8=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,f8.prototype)}},m8=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function tl(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Ur(e,t){if(!e)throw new f8(t)}function Ov(e,t){let n=0;for(let s of e)s===t&&n++;return n}function hs(e){return e.length===1?e[0]:e}function _t(e){return Array.isArray(e)?e:[e]}function ca(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function Bi(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var tr={};function QA(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function O3(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>O3(t));else{let t=Object.keys(e);for(let n of t){let s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:O3(s))}}}function kh(e,t={},n={},s="object",r=!1){if(typeof e=="string"){let a=e,o;if(a in n)o=n[a];else if(a in tr)o=tr[a];else if(o=t[a],o==null)throw new H(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{let a=e;if(a.className==null||a.config==null)throw new H(`${s}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let o=a.className,i,l;if(o in n?[i,l]=n[o]:o in tr?[i,l]=tr.className:o in t&&([i,l]=t[o]),i==null)throw new H(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let h of Object.keys(tr))u[h]=tr[h];for(let h of Object.keys(n))u[h]=n[h];let c=a.config;c.customObjects=u;let p=Object.assign({},tr);for(let h of Object.keys(n))tr[h]=n[h];O3(a.config);let d=l(i,a.config,n,r);return tr=Object.assign({},p),d}else{let u=Object.assign({},tr);for(let p of Object.keys(n))tr[p]=n[p];let c=new i(a.config);return tr=Object.assign({},u),c}}}function AV(e,t){return e<t?-1:e>t?1:0}function Uf(e,t){return-1*AV(e,t)}function Ka(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function xV(e){if(e==null)throw new H(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function tu(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new H(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function e5(e,t,n=0,s=1/0){return Ur(n>=0),Ur(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function xn(e,t){Array.isArray(e)?(v.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>xn(n,`element ${s+1} of ${t}`))):v.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${g8(e)}.`)}function g8(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>g8(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function bV(e,t,n){let s=n!=null?n():v.now(),r;return(...o)=>{let i=n!=null?n():v.now();return i-s<t||(s=i,r=e(...o)),r}}function y8(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}var vV=0;function A8(){return vV++}var Gf={};function e2(e=""){return e in Gf||(Gf[e]=0),Gf[e]+=1,e+Gf[e].toString()}var wV=["channelsFirst","channelsLast"],kV=["nearest","bilinear"],IV=["valid","same","causal"],SV=["max","avg"],CV=["sum","mul","concat","ave"],Fu=new Map;function Zt(e){tu(wV,"DataFormat",e)}function TV(e){tu(kV,"InterpolationFormat",e)}function Ys(e){tu(IV,"PaddingMode",e)}function x8(e){tu(SV,"PoolMode",e)}var gp=[],Mv="/";function ji(e,t){gp.push(e);try{let n=t();return gp.pop(),n}catch(n){throw gp.pop(),n}}function NV(){return gp.length===0?"":gp.join(Mv)+Mv}function b8(e){if(!w8(e))throw new Error("Not a valid tensor name: '"+e+"'");return NV()+e}function v8(e){if(!w8(e))throw new Error("Not a valid tensor name: '"+e+"'");Fu.has(e)||Fu.set(e,0);let t=Fu.get(e);if(Fu.set(e,Fu.get(e)+1),t>0){let n=`${e}_${t}`;return Fu.set(n,1),n}else return e}var EV=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function w8(e){return!!e.match(EV)}function RV(e){return e===parseInt(e.toString(),10)}function Za(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function sc(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s<t&&(t=s)}return t}function ro(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s>t&&(t=s)}return t}function Dr(e,t){if(t<e)throw new H(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let s=e;s<t;++s)n.push(s);return n}var p3;function dn(){return p3==null&&(p3=Bn().epsilon()),p3}function $r(){return"channelsLast"}function t2(e,t){return ye(e,t)}function Ih(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),V(e,n)}function _V(e,t){return Z(()=>{if(e.shape.length!==2)throw new H(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=Ih(e,1);return M3(n,[1,t,1])})}function DV(e){let t=[Za(e.shape)];return V(e,t)}function $V(e){if(e.rank<=1)throw new H(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Za(e.shape,1)];return V(e,t)}function qi(e,t,n){return Z(()=>{switch(e.rank){case 1:return xh(e,t,n);case 2:return z0(e,[t,0],[n,e.shape[1]]);case 3:return di(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return so(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return ze(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return ze(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new H(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function h3(e,t,n){return Z(()=>{switch(e.rank){case 1:return xh(e,t,n);case 2:return z0(e,[0,t],[e.shape[0],n]);case 3:return di(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return so(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new H(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Hf(e,t,n,s){return Z(()=>{switch(e.rank){case 1:return xh(e,t,n);case 2:switch(s){case 1:return qi(e,t,n);case 2:return h3(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return qi(e,t,n);case 2:return di(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return h3(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return qi(e,t,n);case 2:return so(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return so(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return h3(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${s}`)}default:throw new H(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function t5(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),St(e,t)}function zv(e,t){switch(e.rank){case 1:return dA([e,t]);case 2:return Zl([e,t],0);case 3:return pA([e,t],0);case 4:return hA([e,t],0);default:throw new H(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function M3(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new H(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Hs(e,t)}function n2(e,t=0,n=1,s,r){return R0(e,t,n,s,r)}function qr(e,t,n,s){if(e.rank<2||t.rank<2)throw new qe(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(r!==a)throw new qe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return nc.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?z3(e.rank,s,$r()):null,activation:n});{let r=e.shape.slice(),a=r.pop();e=V(e,[-1,a]);let o=t.shape.slice(),i=o.pop(),l=o.pop(),u=[...o,i],c=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=V(et(t,c),[l,-1]);let p=[...r,...u],d=!1,h=!1;return V(nc.matMul({a:e,b:t,transposeA:d,transposeB:h,bias:s?z3(e.rank,s,$r()):null,activation:n}),p)}}function k8(e,t,n){return Z(()=>(Array.isArray(t)?t=Pt(t,"int32"):t=ye(t,"int32"),Kc(e,t,n)))}function Sh(e){return z(e,e)}function z3(e,t,n){let s=t.shape;if(t.rank!==1&&t.rank!==e)throw new H(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?V(t,[1,s[0],1,1,1]):V(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?V(t,[1,1,1,1,s[0]]):V(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?V(t,[1,s[0],1,1]):V(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?V(t,[1,1,1,s[0]]):V(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?V(t,[1,s[0],1]):V(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?V(t,[1,1,s[0]]):V(t,[1].concat(s))}else if(e<3)return t;throw new H(`Unsupported input rank by biasAdd: ${t.rank}`)}function Or(e,t,n){return Z(()=>(n==null&&(n=$r()),Zt(n),ue(e,z3(e.rank,t,n))))}function PV(e,t=1){if(t!==1)throw new qe(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Hc(e)}function FV(e){return Z(()=>fe(e,ue(en(e),1)))}function I8(e,t,n,s){return Z(()=>jA(e,t,n,s))}function OV(e){return Z(()=>{let t=ue(.5,z(.2,e));return ms(t,0,1)})}function Ch(e,t,n=!1){return n?e():t()}var MV=["fanIn","fanOut","fanAvg"],zV=["normal","uniform","truncatedNormal"];function LV(e){tu(MV,"FanMode",e)}function BV(e){tu(zV,"Distribution",e)}var dr=class extends de.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},n5=class extends dr{apply(e,t){return Wt(e,t)}};n5.className="Zeros";de.registerClass(n5);var s2=class extends dr{apply(e,t){return Es(e,t)}};s2.className="Ones";de.registerClass(s2);var s5=class extends dr{constructor(e){if(super(),typeof e!="object")throw new H(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new H(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Z(()=>z(Ce(this.value),Es(e,t)))}getConfig(){return{value:this.value}}};s5.className="Constant";de.registerClass(s5);var r5=class extends dr{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Yc(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};r5.className="RandomUniform";de.registerClass(r5);var a5=class extends dr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new qe(`randomNormal does not support dType ${t}.`);return n2(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};a5.className="RandomNormal";de.registerClass(a5);var o5=class extends dr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new qe(`truncatedNormal does not support dType ${t}.`);return W0(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};o5.className="TruncatedNormal";de.registerClass(o5);var i5=class extends dr{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return Z(()=>{if(e.length!==2||e[0]!==e[1])throw new H("Identity matrix initializer can only be used for 2D square matrices.");return z(this.gain,k0(e[0]))})}getConfig(){return{gain:this.gain}}};i5.className="Identity";de.registerClass(i5);function WV(e,t="channelsLast"){let n,s;if(Zt(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=Za(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){let r=Za(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{let r=Za(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}var gs=class extends dr{constructor(e){if(super(),e.scale<0)throw new H(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,LV(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,BV(this.distribution),this.seed=e.seed}apply(e,t){let n=WV(e),s=n[0],r=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),this.distribution==="normal"){let o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new qe(`${this.getClassName()} does not support dType ${t}.`);return W0(e,0,o,t,this.seed)}else{let o=Math.sqrt(3*a);return Yc(e,-o,o,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};gs.className="VarianceScaling";de.registerClass(gs);var r2=class extends gs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return gs.className}};r2.className="GlorotUniform";de.registerClass(r2);var a2=class extends gs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return gs.className}};a2.className="GlorotNormal";de.registerClass(a2);var o2=class extends gs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return gs.className}};o2.className="HeNormal";de.registerClass(o2);var i2=class extends gs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return gs.className}};i2.className="HeUniform";de.registerClass(i2);var l2=class extends gs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return gs.className}};l2.className="LeCunNormal";de.registerClass(l2);var u2=class extends gs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return gs.className}};u2.className="LeCunNormal";de.registerClass(u2);var l5=class extends dr{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new qe("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Z(()=>{if(e.length<2)throw new qe("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,s=n2(n,0,1,"float32"),r=ZA.gramSchmidt(s);return e[0]>e[1]&&(r=et(r)),z(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};l5.className="Orthogonal";de.registerClass(l5);var Lv={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Bv(e,t={}){return kh(e,de.SerializationMap.getMap().classNameMap,t,"initializer")}function Vt(e){return QA(e)}function Ft(e){if(typeof e=="string"){let t=e in Lv?Lv[e]:e;if(t==="GlorotNormal")return new a2;if(t==="GlorotUniform")return new r2;if(t==="HeNormal")return new o2;if(t==="HeUniform")return new i2;if(t==="LeCunNormal")return new l2;if(t==="LeCunUniform")return new u2;{let n={};return n.className=t,n.config={},Bv(n)}}else return e instanceof dr?e:Bv(e)}function L3(e){return Array.isArray(e)&&Array.isArray(e[0])}function vm(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Xe(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new H(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function At(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new H(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function wm(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}var Wv="Variable",S8=class{constructor(e,t="float32",n=Wv,s=!0,r=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=A8(),n=n==null?Wv:n,this.originalName=b8(n),this.name=v8(this.originalName),this.trainable_=s,this.constraint=r,this.val=GA(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),VV(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function VV(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function B3(e){return e.map(t=>t.read())}function u5(e){e.forEach(t=>{t[0].write(t[1])})}var sn=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Nr=class{constructor(e,t,n,s,r,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=o,this.id=A8(),a!=null&&(this.originalName=b8(a),this.name=v8(this.originalName)),this.rank=t.length}},UV=0,c2=class{constructor(e,t){this.callArgs=t,this.id=UV++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},GV=0,ut=class extends de.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=GV++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=ca(n)+"_"+e2(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Tr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new H(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return hs(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return hs(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ua(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new ua(`Layer ${this.name} is not connected, no input to return.`);return hs(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new ua(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ua(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return hs(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=_t(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=_t(this.inputSpec);if(e.length!==t.length)throw new H(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let s=e[n],r=t[n];if(r==null)continue;let a=s.rank;if(r.ndim!=null&&a!==r.ndim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&s.dtype!==r.dtype)throw new H(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){let o=s.shape;for(let i in r.axes){let l=Number(i),u=r.axes[i],c=l>=0?o[l]:o[o.length+l];if(u!=null&&[u,null].indexOf(c)===-1)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${u} but got shape ${o}.`)}}if(r.shape!=null)for(let o=0;o<r.shape.length;++o){let i=r.shape[o],l=s.shape[o];if(i!=null&&l!=null&&i!==l)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=_t(e),s=!0;for(let a of n)if(!(a instanceof Nr)){s=!1;break}let r=!0;for(let a of n)if(a instanceof Nr){r=!1;break}if(s===r)throw new H("Arguments to apply() must be all SymbolicTensors or all Tensors");return ji(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let o of _t(e))a.push(o.shape);this.build(hs(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t),o=_t(a),i=[];for(let l of o)n.indexOf(l)!==-1&&(l=l.clone()),i.push(l);if(a=hs(i),this.activityRegularizer!=null)throw new qe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=HV(e),o=this.computeOutputShape(a),i,l=jV(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?i=o.map((u,c)=>new Nr(l,u,this,_t(e),t,this.name,c)):i=new Nr(l,o,this,_t(e),t,this.name),this.addInboundNode(e,i,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new qe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,s)=>{n!=null&&e[s]!=null&&e[s]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new ua(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new ua(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Tr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return wm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return B3(e?this.trainableWeights:this.weights)}setWeights(e){Z(()=>{let t=this.weights;if(t.length!==e.length)throw new H(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],s=B3(t);for(let r=0;r<s.length;++r){let a=s[r],o=t[r],i=e[r];if(!v.arraysEqual(a.shape,i.shape))throw new H(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}u5(n)})}addWeight(e,t,n,s,r,a,o,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new H(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(s=i!=null?i():Ft("zeros"));let l=s.apply(t,n),u=new S8(l,n,e,a,o);return l.dispose(),r!=null&&this.addLoss(()=>r.apply(u.read())),a==null&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=_t(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,s,r,a,o=null){let i=_t(e);t=_t(t),n=_t(n),s=_t(s),r=vm(r),a=vm(a);let l=[],u=[],c=[];for(let p of i)l.push(p.sourceLayer),u.push(p.nodeIndex),c.push(p.tensorIndex);new c2({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},o);for(let p=0;p<t.length;p++)t[p].sourceLayer=this,t[p].nodeIndex=this.inboundNodes.length-1,t[p].tensorIndex=p}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function HV(e){e=_t(e);let t=[];for(let n of e)t.push(n.shape);return hs(t)}function jV(e){return"float32"}function C8(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{let r=[];for(let a=0;a<s.inboundLayers.length;a++){let o=s.inputTensors[a],i=s.inboundLayers[a],l=s.nodeIndices[a],u=C8(o,i,l);for(let c of u)r.indexOf(c)===-1&&r.push(c)}return r}}}var Qc=class extends ut{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:e2("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new H("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new H("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new H("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let s=new Nr(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new c2({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new H(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Qc.className="InputLayer";de.registerClass(Qc);function T8(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new H("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new Qc({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function qV(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return ye(t,e.dtype)}catch(n){throw new H(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var Ui=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Ui)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=qV(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new H(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Nr){if(this.id2Value[e.id]==null)throw new H(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new H(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Nr){if(this.id2Value[e.id]==null)throw new H(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new H(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&J(this.id2Mask)}},km=new m8,Im=new m8;function XV(e){km!=null&&km.setMaxEntries(e),Im!=null&&Im.setMaxEntries(e)}function op(e,t,n,s){let r=n==null?!1:n.training,a=Array.isArray(e),o=a?e:[e],i=o.map(f=>f.name),l=[],u=t.names();for(let f of i)u.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);let c=i.join(",")+"|"+t.names().sort().join(","),p=km.get(c),d;if(p==null){let f=KV(o,t);p=f.sorted,d=f.recipientCounts,km.put(c,p),Im.put(c,d)}d={},r||Object.assign(d,Im.get(c));let h=new Ui(t);for(let f=0;f<p.length;++f){if(s!=null){let _=xm().numTensors;_>s.maxNumTensors&&(s.maxNumTensors=_),_<s.minNumTensors&&(s.minNumTensors=_)}let m=p[f],g=m.sourceLayer;if(g instanceof Qc)continue;let y=[],x=[],A=[],b=!1;for(let _ of m.inputs){let D=h.getValue(_),E=h.getMask(_);y.push(D),x.push(E),E!=null&&(b=!0),r||(d[_.name]--,d[_.name]===0&&!t.hasKey(_)&&i.indexOf(_.name)===-1&&!D.isDisposed&&_.sourceLayer.stateful!==!0&&A.push(D))}b&&(n=n||{},n.mask=x[0]);let w=_t(g.apply(y,n)),I=null;g.supportsMasking&&(I=g.computeMask(y,x));let k=YV(m),R=Array.isArray(k)?k:[k];for(let _=0;_<R.length;++_){h.hasKey(R[_])||h.add(R[_],w[_],Array.isArray(I)?I[0]:I);let D=i.indexOf(R[_].name);D!==-1&&(l[D]=w[_])}r||J(A)}return h.disposeMasks(),a?l:l[0]}function KV(e,t){v.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){let r=Vv(e[0],t);n=r.sorted,s=r.recipientMap}else{let r=new Set;for(let a of e){let{sorted:o,recipientMap:i}=Vv(a,t);for(let l of o)r.has(l.name)||(n.push(l),r.add(l.name));for(let l in i)s[l]==null&&(s[l]=new Set),i[l].forEach(u=>s[l].add(u))}}return{sorted:n,recipientCounts:ZV(s)}}function ZV(e){let t={};for(let n in e)t[n]=e[n].size;return t}function Vv(e,t){let n=new Set,s=[],r={};for(let i of t.names())n.add(i);let a=[],o=[];for(a.push(e);a.length>0;){let i=a[a.length-1];if(n.has(i.name)){a.pop();continue}let l=o[o.length-1]===a.length-1;if(i.inputs.length===0||l)a.pop(),s.push(i),n.add(i.name),l&&o.pop();else{o.push(a.length-1);for(let u of i.inputs)r[u.name]==null&&(r[u.name]=new Set),r[u.name].add(i.name),!n.has(u.name)&&a.push(u)}}return{sorted:s,recipientMap:r}}function YV(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(let r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}var JV=j();JV.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,XV);var N8={};Ge(N8,{maxNorm:()=>QV,minMaxNorm:()=>nU,nonNeg:()=>tU,unitNorm:()=>eU});function c5(e,t){return Z(()=>Nn(ke(z(e,e),t,!0)))}var Th=class extends de.Serializable{getConfig(){return{}}},d5=class extends Th{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Z(()=>{let t=c5(e,this.axis),n=ms(t,0,this.maxValue);return z(e,fe(n,ue(dn(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};d5.className="MaxNorm";de.registerClass(d5);var p5=class extends Th{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Z(()=>fe(e,ue(dn(),c5(e,this.axis))))}getConfig(){return{axis:this.axis}}};p5.className="UnitNorm";de.registerClass(p5);var h5=class extends Th{apply(e){return Fr(e)}};h5.className="NonNeg";de.registerClass(h5);var f5=class extends Th{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Z(()=>{let t=c5(e,this.axis),n=ue(z(this.rate,ms(t,this.minValue,this.maxValue)),z(1-this.rate,t));return z(e,fe(n,ue(dn(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};f5.className="MinMaxNorm";de.registerClass(f5);var Uv={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function fn(e){return QA(e)}function Gv(e,t={}){return kh(e,de.SerializationMap.getMap().classNameMap,t,"constraint")}function mn(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Uv?Uv[e]:e,config:{}};return Gv(n)}else return e instanceof Th?e:Gv(e)}function QV(e){return new d5(e)}function eU(e){return new p5(e)}function tU(){return new h5}function nU(e){return new f5(e)}var E8={};Ge(E8,{constant:()=>aU,glorotNormal:()=>pU,glorotUniform:()=>dU,heNormal:()=>hU,heUniform:()=>fU,identity:()=>uU,leCunNormal:()=>mU,leCunUniform:()=>gU,ones:()=>rU,orthogonal:()=>yU,randomNormal:()=>iU,randomUniform:()=>oU,truncatedNormal:()=>lU,varianceScaling:()=>cU,zeros:()=>sU});function sU(){return new n5}function rU(){return new s2}function aU(e){return new s5(e)}function oU(e){return new r5(e)}function iU(e){return new a5(e)}function lU(e){return new o5(e)}function uU(e){return new i5(e)}function cU(e){return new gs(e)}function dU(e){return new r2(e)}function pU(e){return new a2(e)}function hU(e){return new o2(e)}function fU(e){return new i2(e)}function mU(e){return new l2(e)}function gU(e){return new u2(e)}function yU(e){return new l5(e)}var R8={};Ge(R8,{Layer:()=>ut,RNN:()=>ea,RNNCell:()=>Dh,activation:()=>UG,add:()=>JG,alphaDropout:()=>FH,average:()=>QG,averagePooling1d:()=>vx,averagePooling2d:()=>wx,averagePooling3d:()=>kx,avgPool1d:()=>lH,avgPool2d:()=>cH,avgPool3d:()=>pH,avgPooling1d:()=>uH,avgPooling2d:()=>dH,avgPooling3d:()=>hH,batchNormalization:()=>aH,bidirectional:()=>TH,concatenate:()=>eH,conv1d:()=>PG,conv2d:()=>FG,conv2dTranspose:()=>OG,conv3d:()=>MG,conv3dTranspose:()=>zG,convLstm2d:()=>kH,convLstm2dCell:()=>IH,cropping2D:()=>BG,dense:()=>GG,depthwiseConv2d:()=>VG,dot:()=>rH,dropout:()=>HG,elu:()=>NG,embedding:()=>YG,flatten:()=>qG,gaussianDropout:()=>PH,gaussianNoise:()=>$H,globalAveragePooling1d:()=>fH,globalAveragePooling2d:()=>mH,globalMaxPool1d:()=>EH,globalMaxPool2d:()=>RH,globalMaxPooling1d:()=>vk,globalMaxPooling2d:()=>wk,gru:()=>yH,gruCell:()=>AH,input:()=>X8,inputLayer:()=>TG,layerNormalization:()=>oH,leakyReLU:()=>RG,lstm:()=>xH,lstmCell:()=>bH,masking:()=>OH,maxPool1d:()=>_H,maxPool2d:()=>DH,maxPooling1d:()=>kk,maxPooling2d:()=>Ik,maxPooling3d:()=>gH,maximum:()=>tH,minimum:()=>nH,multiply:()=>sH,permute:()=>ZG,prelu:()=>_G,reLU:()=>EG,repeatVector:()=>XG,reshape:()=>KG,rnn:()=>SH,separableConv2d:()=>LG,simpleRNN:()=>vH,simpleRNNCell:()=>wH,softmax:()=>DG,spatialDropout1d:()=>jG,stackedRNNCells:()=>CH,thresholdedReLU:()=>$G,timeDistributed:()=>NH,upSampling2d:()=>WG,zeroPadding2d:()=>iH});async function Ua(e){if(e==null)return;let t=[],n=[],s=[];for(let r in e){let a=e[r];if(typeof a!="number"){let o=a;t.push(o.data()),n.push(r),s.push(o)}}if(t.length>0){let r=await Promise.all(t);for(let a=0;a<r.length;++a)e[n[a]]=r[a][0];J(s)}}function _8(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var Hv;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(Hv||(Hv={}));var AU=125,rc=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},D8=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},xU=class extends rc{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let s in t){let r=t[s];if(typeof r=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+r*n;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;let o=Z(()=>ue(this.totals[s],z(r,n)));this.totals[s]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:Z(()=>{let s=z(fe(1,this.seen),this.totals[n]);t[n]=s,this.totals[n].dispose(),An(t[n])}))}},$8=class extends rc{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){let i=a[o];e.push(i.data()),t.push(r),n.push(o)}}let s=await Promise.all(e);for(let r=0;r<s.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}},P8=class extends rc{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||YA,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=AU),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");v.isNumber(this.yieldEvery)&&(this.maybeWait=bV(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let s=[];this.yield!=null&&(await Ua(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Ua(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Ua(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Ua(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Ua(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):v.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Ua(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ua(e),await this.trainEnd(e))}};function F8(e,t){return e==null&&(e={}),e instanceof rc?[e]:Array.isArray(e)&&e[0]instanceof rc?e:_t(e).map(s=>new P8(s,t))}var sr=class{constructor(){}static registerCallbackConstructor(e,t){v.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),sr.checkForDuplicate(t),sr.constructors[e]==null&&(sr.constructors[e]=[]),sr.constructors[e].push(t)}static checkForDuplicate(e){for(let t in sr.constructors)sr.constructors[+t].forEach(s=>{if(s===e)throw new H("Duplicate callback constructor.")})}static clear(){sr.constructors={}}static createCallbacks(e){let t=[];for(let n in sr.constructors){let s=+n;e>=s&&t.push(...sr.constructors[s])}return t.map(n=>new n)}};sr.constructors={};function O8(e,t,n,s,r,a,o,i,l){let u=new $8,c=[new xU,...sr.createCallbacks(t)];e!=null&&c.push(...e),c.push(u);let p=new D8(c);return p.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:l}),{callbackList:p,history:u}}function Rr(e,t={},n=!1){return kh(e,de.SerializationMap.getMap().classNameMap,t,"layer",n)}function Sm(e,t){return Z(()=>{e.dtype!=="float32"&&(e=ye(e,"float32"));let n=ke(Sh(e),t,!0),s=qc(n.shape,dn()),r=Nn(Qr(n,s));return fe(e,r)})}function nu(e,t){return Z(()=>Bt(Sh(me(t,e)),-1))}function d2(e,t){return Z(()=>Bt(en(me(t,e)),-1))}function ed(e,t){return Z(()=>{let n=me(e,t),s=ms(en(e),dn(),Number.MAX_VALUE),r=en(fe(n,s));return z(100,Bt(r,-1))})}function bU(e,t){return Z(()=>{let n=ms(t,dn(),Number.MAX_VALUE),s=$s(ue(1,n)),r=ms(e,dn(),Number.MAX_VALUE),a=$s(ue(1,r));return Bt(Sh(me(s,a)),-1)})}function vU(e,t){return Z(()=>{let n=Qr(0,me(1,z(e,t)));return Bt(Sh(n),-1)})}function wU(e,t){return Z(()=>{let n=Qr(0,me(1,z(e,t)));return Bt(n,-1)})}function kU(e,t){return Z(()=>{let n=ke(z(e,t),-1),s=hn(z(me(1,e),t),-1);return Qr(0,ue(1,me(s,n)))})}function IU(e,t){return Z(()=>{let n=Math.log(2),s=me(t,e),r=me(ue(s,Yl(z(-2,s))),n);return Bt(r,-1)})}function Ep(e,t,n=!1){return Z(()=>{if(n)t=Ql(t);else{let s=ke(t,t.shape.length-1,!0);t=fe(t,s)}return t=ms(t,dn(),1-dn()),Dt(ke(z(ye(e,"float32"),$s(t)),t.shape.length-1))})}function Cm(e,t,n=!1){return Z(()=>{let s=ye(Xc(DV(e)),"int32");t=ms(t,dn(),1-dn());let r=t.shape,a=V(Ju(s,r[r.length-1]),r);return Ep(a,t,n)})}function SU(e,t){if(!v.arraysEqual(e.shape,t.shape))throw new H(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Z(()=>{let n=Fr(t),s=Dt(en(t));return ue(me(n,z(t,e)),hh(Ds(s)))})}function p2(e,t){return Z(()=>{let n;return n=ms(t,dn(),1-dn()),n=$s(fe(n,me(1,n))),Bt(SU(e,n),-1)})}function CU(e,t){return Z(()=>{let n=ms(e,dn(),1),s=ms(t,dn(),1);return ke(z(e,$s(fe(n,s))),-1)})}function TU(e,t){return Z(()=>{let n=$s(ue(dn(),t));return Bt(me(t,z(e,n)),-1)})}function m5(e,t){return Z(()=>{let n=Sm(e,-1),s=Sm(t,-1),r=z(n,s);return Dt(ke(r,-1))})}var Tm={meanSquaredError:nu,meanAbsoluteError:d2,meanAbsolutePercentageError:ed,meanSquaredLogarithmicError:bU,squaredHinge:vU,hinge:wU,categoricalHinge:kU,logcosh:IU,categoricalCrossentropy:Ep,sparseCategoricalCrossentropy:Cm,binaryCrossentropy:p2,kullbackLeiblerDivergence:CU,poisson:TU,cosineProximity:m5};function f3(e){if(typeof e=="string"){if(e in Tm)return Tm[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new H(t)}else return e}function g5(e,t){return Z(()=>{let n=z(.5,Ps(t)),s=t2(As(t,n),e.dtype);return Bt(_s(e,s),-1)})}function y5(e,t){return Z(()=>t2(_s(Rs(e,-1),Rs(t,-1)),"float32"))}function M8(e,t){return Z(()=>ye(ke(ir(_s(e,1),_s(t,1))),"float32"))}function NU(e,t){return Z(()=>ye(ke(ir(_s(e,1),_s(t,0))),"float32"))}function EU(e,t){return Z(()=>ye(ke(ir(_s(e,0),_s(t,1))),"float32"))}function z8(e,t){return Z(()=>{let n=M8(e,t),s=EU(e,t),r=ue(n,s);return ye(zn(As(r,0),fe(n,r),0),"float32")})}function RU(e,t){return Z(()=>{let n=M8(e,t),s=NU(e,t),r=ue(n,s);return ye(zn(As(r,0),fe(n,r),0),"float32")})}function L8(e,t){return p2(e,t)}function B8(e,t){return e.rank===t.rank&&(e=st(e,[e.rank-1])),t=Rs(t,-1),t.dtype!==e.dtype&&(t=ye(t,e.dtype)),ye(_s(e,t),"float32")}var _U=nu,DU=nu,$U=d2,PU=d2,FU=ed,OU=ed,A5=Ep,MU=m5,W8=Cm,Nm={binaryAccuracy:g5,categoricalAccuracy:y5,precision:z8,categoricalCrossentropy:A5,sparseCategoricalCrossentropy:W8,mse:_U,MSE:DU,mae:$U,MAE:PU,mape:FU,MAPE:OU,cosine:MU};function zU(e){if(typeof e=="string"&&e in Nm)return Nm[e];if(typeof e!="string"&&e!=null)return e;throw new H(`Unknown metric ${e}`)}function jf(e){if(Ur(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(Tm))if(Tm[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(Nm))if(Nm[n]===e){t=n;break}return t!==void 0?t:e.name}}function LU(e){let t={Adagrad:()=>Oi.adagrad(.01),Adadelta:()=>Oi.adadelta(1,.95,dn()),Adam:()=>Oi.adam(.001,.9,.999,dn()),Adamax:()=>Oi.adamax(.002,.9,.999,dn(),0),RMSProp:()=>Oi.rmsprop(.001,.9,0,dn()),SGD:()=>Oi.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new H(`Unknown Optimizer ${e}`)}var jv=1*1024*1024;function qv(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!W3(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let s=JSON.stringify(e);s.length>jv&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${jv}.`)}}function W3(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!W3(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!W3(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function BU(e,t,n,s=console.log){let r=VU(e),a=["Layer (type)","Input Shape","Output shape","Param #"];r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(c=>Math.floor(t*c)));let o;if(!r){a.push("Receives inputs"),o=[];for(let c in e.nodesByDepth)o.push(...e.nodesByDepth[c])}s("_".repeat(t)),Em(a,n,s),s("=".repeat(t));let i=e.layers;for(let c=0;c<i.length;++c)r?UU(i[c],n,s):GU(i[c],n,o,s),s((c===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=WU(e),u=wm(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}function WU(e){let t;return e.collectedTrainableWeights!=null?t=wm(e.collectedTrainableWeights):t=wm(e.trainableWeights),t}function VU(e){let t=!0,n=[],s=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(let r of e.layers){let a=!1;for(let o of r.inboundNodes)if(s.indexOf(o)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function Em(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function UU(e,t,n){let s,r;try{r=e.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch(l){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(l){s="multiple"}let a=e.name,o=e.getClassName(),i=[`${a} (${o})`,r,s,e.countParams().toString()];Em(i,t,n)}function GU(e,t,n,s){let r,a;try{a=e.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch(p){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(p){r="multiple"}let o=[];for(let p of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(p)===-1))for(let d=0;d<p.inboundLayers.length;++d){let h=p.inboundLayers[d].name,f=p.nodeIndices[d],m=p.tensorIndices[d];o.push(`${h}[${f}][${m}]`)}let i=e.name,l=e.getClassName(),u=o.length===0?"":o[0],c=[`${i} (${l})`,a,r,e.countParams().toString(),u];Em(c,t,s);for(let p=1;p<o.length;++p)Em(["","","","",o[p]],t,s)}function V8(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function Rp(e,t){if(e===null)return null;if(typeof e=="string")return Bi(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];V8(t,r,a)?n.push(a):n.push(Rp(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{let a=Bi(s);n[a]=Rp(r,a)}}return n}}function V3(e,t){if(e==null)return null;if(typeof e=="string")return ca(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];V8(t,r,a)?n.push(a):n.push(V3(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s],a=ca(s);(s==="name"||s==="className")&&typeof r=="string"?n[a]=r:n[a]=V3(r,s)}return n}}var x5="3.19.0",Vr=class extends ut{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=e2(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ka(this.inputs).length!==this.inputs.length)throw new H(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);Ka(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let x=y.sourceLayer,A=y.nodeIndex,b=y.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(A),this.outputLayersTensorIndices.push(b)}for(let y of this.inputs){let x=y.sourceLayer,A=y.nodeIndex,b=y.tensorIndex;Ur(A===0,"input layer has >1 nodes"),Ur(b===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(A),this.inputLayersTensorIndices.push(b)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let x=this.inputLayers[y];if(!(x instanceof Qc))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},n={},s={},r={},a={},o=[],i=(y,x,A,b,w,I)=>{(b==null||w==null||I==null)&&(b=y.sourceLayer,w=y.nodeIndex,I=y.tensorIndex);let k=b.inboundNodes[w];if(A.indexOf(k)!==-1)throw new Tr(`The tensor ${y.name} at layer "${b.name}" is part of a cycle.`);if(x.indexOf(k)!==-1)return;this.containerNodes.add(Vr.nodeKey(b,w)),b.id in a||(a[b.id]=Object.keys(a).length),A.indexOf(k)===-1&&A.push(k);let R=k.inboundLayers.length;for(let _=0;_<R;_++){let D=k.inputTensors[_],E=k.inboundLayers[_],P=k.nodeIndices[_],C=k.tensorIndices[_];i(D,x,A,E,P,C)}for(x.push(k);A.indexOf(k)>=0;)A.splice(A.indexOf(k),1);o.push(k)},l=[],u=[];for(let y of this.outputs)i(y,l,u);let c=o.slice().reverse();for(let y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let x=t[y.id],A=s[y.outboundLayer.id]==null?0:s[y.outboundLayer.id];x=Math.max(x,A),s[y.outboundLayer.id]=x,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=x;for(let b=0;b<y.inboundLayers.length;b++){let w=y.inboundLayers[b],I=y.nodeIndices[b],k=w.inboundNodes[I],R=t[k.id]==null?0:t[k.id];t[k.id]=Math.max(x+1,R),n[k.id]=k}}let p={};for(let y in t){let x=t[y];x in p||(p[x]=[]),p[x].push(n[y])}let d={};for(let y in s){let x=s[y];x in d||(d[x]=[]),d[x].push(r[y])}let h=Object.keys(d).map(y=>parseInt(y,10)).sort(Uf);this.layers=[];for(let y of h){let x=d[y];x.sort((A,b)=>{let w=a[A.id],I=a[b.id];return w<I?-1:w>I?1:0});for(let A of x)A instanceof Vr&&this.internalContainerRefs.push(A),this.layers.push(A)}this.layersByDepth=d,h=Object.keys(p).map(y=>parseInt(y,10)).sort(Uf);let f=this.inputs.slice(),m=[];for(let y of h)for(let x of p[y]){let A=x.outboundLayer;if(A!=null){for(let b of x.inputTensors)if(f.indexOf(b)===-1)throw new Tr(`Graph disconnected: cannot obtain value for tensor ${b} at layer "${A.name}". The following previous layers were accessed without issue: ${m}`);for(let b of x.outputTensors)f.push(b);m.push(A.name)}}this.nodesByDepth=p;let g=this.layers.map(y=>y.name);for(let y of g){let x=g.filter(A=>A===y).length;if(x!==1)throw new Tr(`The name "${y}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new c2({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new H("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},s=0;for(let a of this.layers)for(let o of a.weights){if(n[o.originalName]!=null)throw new H(`Duplicate weight name: ${o.originalName}`);n[o.originalName]=o,s++}let r=[];for(let a in e){let o=a;if(n[a]==null){let i=a.split("/");o=i.slice(0,-2).concat([i[i.length-1]]).join("/")}if(n[o]!=null)r.push([n[o],e[a]]);else if(t)throw new H(`Provided weight data has no target variable: ${a}`);delete n[o]}if(t){let a=[];for(let o in n)a.push(o);if(a.length>0)throw new H(`${a.length} of ${s} weights are not set: ${a}`)}u5(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${x5}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=V3(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Z(()=>{e=_t(e);let n=new Ui;for(let s=0;s<this.inputs.length;++s)n.add(this.inputs[s],e[s]);return op(this.outputs,n,t)})}computeMask(e,t){return Z(()=>{e=_t(e);let n;return t==null?n=tl(null,e.length):n=_t(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=vm(e);if(t.length!==this.inputLayers.length)throw new H(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let o=0;o<t.length;o++){let i=this.inputLayers[o],l=t[o],u=i.name+"_0_0";n[u]=l}let s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Uf);if(s.length>1)for(let o of s){let i=this.nodesByDepth[o];for(let l of i){let u=l.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(u.id)!==-1)continue;let c=[];for(let f=0;f<l.inboundLayers.length;f++){let m=l.inboundLayers[f],g=l.nodeIndices[f],y=l.tensorIndices[f],x=`${m.name}_${g}_${y}`,A=n[x];c.push(A)}let p=u.computeOutputShape(hs(c)),d=vm(p),h=u.inboundNodes.indexOf(l);for(let f=0;f<d.length;f++){let m=`${u.name}_${h}_${f}`;n[m]=d[f]}}}let r=[],a=[];for(let o=0;o<this.outputLayers.length;o++){let i=this.outputLayers[o],l=this.outputLayersNodeIndices[o],u=this.outputLayersTensorIndices[o],c=`${i.name}_${l}_${u}`;a.push(c)}for(let o=0;o<a.length;o++){let i=a[o];Ur(i in n),r.push(n[i])}return hs(r)}runInternalGraph(e,t){t==null&&(t=tl(null,e.length));let n={};for(let i=0;i<this.inputs.length;++i){let l=this.inputs[i],u=e[i],c=t[i];n[l.id]=[u,c]}let s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Uf);for(let i of s){let l=this.nodesByDepth[i];for(let u of l){let c=u.outboundLayer,p=u.inputTensors,d=u.outputTensors,h=new Array;for(let f of p)f.id in n&&h.push(n[f.id]);if(h.length===p.length){let f={},m,g,y,x;if(u.callArgs!=null&&(f=u.callArgs),h.length===1){let[A,b]=h[0];f.mask==null&&(f.mask=b),y=_t(c.call(A,f)),x=_t(c.computeMask(A,b)),m=[A],g=[b]}else m=h.map(A=>A[0]),g=h.map(A=>A[1]),f.mask==null&&(f.mask=g),y=_t(c.call(m,f)),x=_t(c.computeMask(m,g));if(c.activityRegularizer)throw new qe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let A=0;A<d.length;++A){let b=d[A],w=y[A],I=x[A];n[b.id]=[w,I]}}}}let r=[],a=[],o=[];for(let i of this.outputs){Ur(i.id in n,`Could not compute output ${i.name} : ${i.id}`);let[l,u]=n[i.id];o.push(l.shape),r.push(l),a.push(u)}return[r,a,o]}buildNodeConversionMap(e){let t={},n;for(let s of this.layers){n=s instanceof Vr?1:0;for(let r=0;r<s.inboundNodes.length;r++){let a=Vr.nodeKey(s,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new H(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new H("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new H(`No such layer: ${e}`)}calculateLosses(){return Z(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let s=Vr.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let o=a.getClassName(),i=a.getConfig(),l=[];for(let c=0;c<a.inboundNodes.length;c++){let p=a.inboundNodes[c],d=Vr.nodeKey(a,c),h={};if(this.containerNodes.has(d)){if(p.callArgs)try{JSON.stringify(p.callArgs),h=p.callArgs}catch(f){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(p.inboundLayers.length>0){let f=[];for(let m=0;m<p.inboundLayers.length;m++){let g=p.inboundLayers[m],y=p.nodeIndices[m],x=p.tensorIndices[m],A=Vr.nodeKey(g,y),b=t[A];b==null&&(b=0),f.push([g.name,b,x,h])}l.push(f)}}}let u={};u.name=a.name,u.className=o,u.config=i,u.inboundNodes=l,n.push(u)}e.layers=n;let s=[];for(let a=0;a<this.inputLayers.length;a++){let o=this.inputLayers[a],i=this.inputLayersNodeIndices[a],l=Vr.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);let c=this.inputLayersTensorIndices[a];s.push([o.name,u,c])}e.inputLayers=s;let r=[];for(let a=0;a<this.outputLayers.length;a++){let o=this.outputLayers[a],i=this.outputLayersNodeIndices[a],l=Vr.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);let c=this.outputLayersTensorIndices[a];r.push([o.name,u,c])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){let r={},a={};function o(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function i(m,g){let y=[],x;for(let A of g){let b=A[0],w=A[1],I=A[2];if(x=A[3]==null?{}:A[3],!(b in r)){o(m,g);return}let k=r[b];if(k.inboundNodes.length<=w){o(m,g);return}let R=k.inboundNodes[w];y.push(R.outputTensors[I])}y.length>0&&m.apply(hs(y),x)}function l(m){let g=m.name,y=Rr(m,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(s),r[g]=y,m.inboundNodes.forEach(A=>{if(!(A instanceof Array))throw new H(`Corrupted configuration, expected array for nodeData: ${A}`);o(y,A)})}let u=t.name,c=t.layers;for(let m of c)l(m);for(;!xV(a);)for(let m of c){let g=r[m.name];if(g.name in a){let y=a[g.name];delete a[g.name];for(let x of y)i(g,x)}}let p=[],d=[],h=t.inputLayers;for(let m of h){let g=m[0],y=m[1],x=m[2];Ur(g in r);let b=r[g].inboundNodes[y].outputTensors;p.push(b[x])}let f=t.outputLayers;for(let m of f){let g=m[0],y=m[1],x=m[2];Ur(g in r);let b=r[g].inboundNodes[y].outputTensors;d.push(b[x])}return new e({inputs:p,outputs:d,name:u})}get stateful(){if(this._stateful)throw new H("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Z(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function HU(e,t,n){let s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(a=>{a in e?r.push(e[a]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function U8(e,t){return HU(e,t,"classWeight")}async function G8(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=Z(()=>{if(e.shape.length===1)return On(e);if(e.shape.length===2){if(e.shape[1]>1)return Rs(e,1);if(e.shape[1]===1)return V(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await r.data());J(r);let o=[];return a.forEach(i=>{if(n[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(n[i])}),Pt(o,"float32")}else return null}function jU(e,t){return z(e,t)}var qU=32;function H8(e,t){let n,s,r=t;n=r.xs,s=r.ys,v.assert(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=Xv("input",e.inputNames,n),o=Xv("output",e.outputNames,s),i=a[0].shape[0];v.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),v.assert(o.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<a.length;l++)v.assert(a[l].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let l=0;l<o.length;l++)v.assert(o[l].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:o}}function Xv(e,t,n){if(n instanceof nt)return[n];if(Array.isArray(n))return v.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let s=[];for(let r of t){if(n[r]==null)throw new H(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function XU(e){if(e.length===3)throw new qe("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function KU(e,t,n){let s=n.batchesPerEpoch!=null;if(v.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),v.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),v.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),v.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),v.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,a,o;if(r)if(Kv(n.validationData))v.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=XU(n.validationData);a=g.xs,o=g.ys}let i=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),u;r?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();let c=F8(n.callbacks,n.yieldEvery),p=n.verbose==null?1:n.verbose,{callbackList:d,history:h}=O8(c,p,n.epochs,null,null,ZU(t,n),null,r,u);d.setModel(e),e.history=h,await d.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await d.onEpochBegin(f);let y=0,x=0;for(s||(m=await t.iterator());!s||y<n.batchesPerEpoch;){let A=await m.next();if(s&&A.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(A.value!=null){let{xs:b,ys:w}=H8(e,A.value),I={};I.batch=x,I.size=b[0].shape[0],await d.onBatchBegin(x,I);let k=[];if(n.classWeight!=null){let D=U8(n.classWeight,e.outputNames);for(let E=0;E<D.length;++E)k.push(await G8(w[E],null,D[E]))}let R=b.concat(w).concat(k),_=i(R);J(R);for(let D=0;D<l.length;++D){let E=l[D],P=_[D];I[E]=P,An(P)}await d.onBatchEnd(x,I),_8(I),x++,y++}if(s?y>=n.batchesPerEpoch:A.done){if(r){let b;Kv(n.validationData)?b=_t(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):b=_t(e.evaluate(a,o,{batchSize:n.validationBatchSize==null?qU:n.validationBatchSize,verbose:0}));for(let w=0;w<e.metricsNames.length;++w)g[`val_${e.metricsNames[w]}`]=b[w]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function ZU(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function Kv(e){return typeof e.iterator=="function"}function YU(e){return typeof e.next=="function"}async function JU(e,t,n){n=n||{};let s=n.batches!=null,r=e.testFunction,a=[];if(n.verbose>0)throw new qe("Verbose mode is not implemented yet.");v.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let o=YU(t)?t:await t.iterator(),i=0,l=0;for(;!s||l<n.batches;){let u=await o.next();if(a=Z(()=>{if(u.value){let{xs:c,ys:p}=H8(e,u.value),d=c.concat(p),h=Z(()=>r(d));if(J(d),l===0)for(let m=0;m<h.length;++m)a.push(Ce(0));let f=d[0].shape[0];for(let m=0;m<h.length;++m){let g=h[m],y=a[m];a[m]=Z(()=>ue(a[m],z(f,g))),l>0&&J(y)}J(h),i+=f,++l}return a}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<a.length;++u){let c=a[u];a[u]=fe(a[u],i),J(c)}return hs(a)}function U3(e){v.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function ip(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>qi(s,t,n-t)):qi(e,t,n-t)}function b5(e,t){return Z(()=>e==null?null:Array.isArray(e)?e.map(n=>b5(n,t)):k8(e,t.dtype==="int32"?t:ye(t,"int32")))}function G3(e,t){let n=[],s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function QU(e,t,n,s,r,a,o,i,l,u,c,p,d,h,f){r==null&&(r=32),a==null&&(a=1),c==null&&(c=!0),d==null&&(d=0);let m=!1;if(l!=null&&u!=null&&(m=!0),f!=null&&(m=!0,h==null))throw new H("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,h,"steps_per_epoch"),y;g!=null&&(y=Dr(0,g)),o==null&&(o=1);let{callbackList:x,history:A}=O8(i,o,a,d,g,h,r,m,p);x.setModel(e),e.history=A,await x.onTrainBegin(),e.stopTraining_=!1;for(let b=d;b<a;++b){await x.onEpochBegin(b);let w={};if(h!=null)throw new qe("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new qe("batch shuffling is not implemneted yet");c&&v.shuffle(y);let I=Pt(y),k=G3(g,r);for(let R=0;R<k.length;++R){let _={};if(await x.onBatchBegin(R,_),Z(()=>{let D=k[R][0],E=k[R][1],P=qi(I,D,E-D);_.batch=R,_.size=E-D;let C=b5(n,P),M=t(C);for(let W=0;W<s.length;++W){let G=s[W],X=M[W];_[G]=X,An(X)}if(R===k.length-1&&m){let W=e.testLoop(l,u,r);for(let G=0;G<s.length;++G){let X=s[G],K=W[G];An(K),w["val_"+X]=K}}}),await x.onBatchEnd(R,_),_8(_),e.stopTraining_)break}I.dispose()}if(await x.onEpochEnd(b,w),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}async function eG(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,a,o,i,l,u,c,p,d;try{let h=s.batchSize==null?32:s.batchSize;U3(h);let f=!1,m=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,f,h);r=m[0],a=m[1],d=m[2];let g=!1,y;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new qe("validationData including sample weights is not supported yet."):new H(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);let _=!0,D=await e.standardizeUserData(l,u,null,null,_,h);c=D[0],p=D[1],y=c.concat(p)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;let _=Math.floor(r[0].shape[0]*(1-s.validationSplit)),D=r[0].shape[0];c=ip(r,_,D),o=r,r=ip(r,0,_),p=ip(a,_,D),i=a,a=ip(a,0,_),y=c.concat(p)}else s.validationSteps!=null&&(g=!0);let x=r.concat(a).concat(d);e.checkTrainableWeightsConsistency();let A=e.makeTrainFunction(),b=e.getDedupedMetricsNames(),w,I;g?(e.makeTestFunction(),w=e.testFunction,I=b.slice().concat(b.map(_=>"val_"+_))):(w=null,y=[],I=b.slice());let k=F8(s.callbacks,s.yieldEvery);return await QU(e,A,x,b,h,s.epochs,s.verbose,k,w,y,s.shuffle,I,s.initialEpoch,null,null)}finally{e.isTraining=!1,Cr(r,t),Cr(a,n),Cr(o,t),Cr(i,n),Cr(c,l),Cr(p,u),d!=null&&J(d)}}function j8(e){let t=[];e instanceof nt&&(e=[e]);for(let n=0;n<e.length;++n){let s=e[n];if(s.rank===1)t.push(Ih(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Cr(e,t){if(e==null)return;let n=[];if(t instanceof nt)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let a=t[r];n.push(a.id)}let s=[];if(e instanceof nt)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(let r in e){let a=e[r];n.indexOf(a.id)===-1&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function tG(e){return e instanceof nt}function H3(e){return Array.isArray(e)}function Zv(e){return!tG(e)&&!H3(e)}function Yv(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let o=!1;if(H3(e)&&e.length>0)o=!0;else if(Zv(e)){for(let i in e)if(e.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new H(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(o=>null);let a;if(Zv(e)){e=e,a=[];for(let o of t){if(e[o]==null)throw new H(`No data provided for "${o}". Need data for each key in: ${t}`);a.push(e[o])}}else if(H3(e)){if(e=e,e.length!==t.length)throw new H(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new H(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=j8(a),n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new H(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let u=i.shape[l],c=n[o][l];if(c!=null&&c>=0&&u!==c)throw new H(`${r} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function nG(e,t,n){let s=Ka(e.map(a=>a.shape[0]));s.sort();let r=Ka(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new H(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(r.length>1)throw new H(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!v.arraysEqual(s,r))throw new H(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function sG(e,t,n){let s=[nu,p2,Ep];for(let r=0;r<e.length;++r){let a=e[r],o=t[r],i=n[r];if(o!=null){if(o===Ep&&a.shape[a.shape.length-1]===1)throw new H(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){let l=a.shape.slice(1),u=i.slice(1);for(let c=0;c<l.length;++c){let p=l[c],d=u[c];if(d!=null&&p!==d)throw new H(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Jv(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new H(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new H(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new H(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let u=i.shape[l],c=n[o][l];if(c!=null&&c!==u)throw new H(`Error when checking ${r}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function rG(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{let s=[];for(let r of t){let a=n.hasOwnProperty(r)?n[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}var aG="layers-model",fa=class extends Vr{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new H("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");BU(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=LU(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ia))throw new H("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new H(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(f3(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new H(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(o=>f3(o))}else{let a=f3(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let o=this.internalOutputShapes[a],i=this.outputNames[a];this.feedOutputNames.push(i),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ji("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=rG(e.metrics,this.outputNames),r=(a,o,i)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([i,a])};ji("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=s[a];(l=>{let u="",c,p,d;for(let h of l){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===p2?["accuracy","acc"].indexOf(h)!==-1?p=g5:["crossentropy","ce"].indexOf(h)!==-1&&(p=L8):this.lossFunctions[a]===Cm?["accuracy","acc"].indexOf(h)!==-1?p=B8:["crossentropy","ce"].indexOf(h)!==-1&&(p=W8):["accuracy","acc"].indexOf(h)!==-1?p=y5:["crossentropy","ce"].indexOf(h)!==-1&&(p=A5);let g;["accuracy","acc"].indexOf(h)!==-1?g="acc":["crossentropy","ce"].indexOf(h)!==-1&&(g="ce"),d=p,c=u+g}else d=zU(h),c=u+jf(h);let f;ji(c,()=>{f=d}),r(a,c,f)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let s=n.batchSize==null?32:n.batchSize;U3(s);let r=!0,a=this.standardizeUserDataXY(e,t,r,s);try{let o=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,l=this.testLoop(i,o,s,n.verbose,n.steps);return hs(l)}finally{Cr(a[0],e),Cr(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),JU(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(n!=null){if(r=null,t!=null)throw new H(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new H(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new H("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new Ui;if(e instanceof nt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new H(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)a.add(this.inputs[i],e[i])}else for(let i of this.inputs){let l=e[i.name];if(l==null)throw new H(`No value is provided for the model's input ${i.name}`);a.add(i,l)}let o=op(r,a);return n?o:o[0]}retrieveSymbolicTensors(e){let t=tl(null,e.length),n=e.length;for(let s of this.layers){let r=Array.isArray(s.output)?s.output:[s.output],a=r.map(o=>o.name);for(let o=0;o<e.length;++o){let i=a.indexOf(e[o]);if(i!==-1&&(t[o]=r[i],n--),n===0)break}if(n===0)break}if(n>0){let s=[];throw t.forEach((r,a)=>{r==null&&s.push(e[a])}),new H(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,n=!1){return Z(()=>{let s=this.checkNumSamples(e);if(n)throw new qe("Verbose predictLoop() is not implemented yet.");let r=G3(s,t),a=this.outputs.map(o=>[]);for(let o=0;o<r.length;++o)Z(()=>{let l=r[o][0],u=r[o][1],c=ip(e,l,u),p=[];if(Array.isArray(c))for(let h=0;h<c.length;++h)p.push({key:this.inputs[h],value:c[h]});else p.push({key:this.inputs[0],value:c});let d=new Ui(p);return op(this.outputs,d)}).forEach((l,u)=>a[u].push(l));return hs(a.map(o=>St(o,0)))})}predict(e,t={}){let n=j8(e);Jv(n,this.inputNames,this.feedInputShapes,!1);try{let s=t.batchSize==null?32:t.batchSize;return U3(s),this.predictLoop(n,s)}finally{Cr(n,e)}}predictOnBatch(e){Jv(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(this.optimizer_==null)throw new Tr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let a=0;a<this.feedOutputShapes.length;++a){let o=this.feedOutputShapes[a];this.feedLossFns[a]===Cm?r.push(o.slice(0,o.length-1).concat([1])):r.push(o)}if(e=Yv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Yv(t,this.feedOutputNames,r,!1,"target"),nG(e,t,null),sG(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new H(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){let[o,i]=this.standardizeUserDataXY(e,t,r,a);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(s!=null){let u=U8(s,this.outputNames);l=[];for(let c=0;c<u.length;++c)l.push(await G8(i[c],null,u[c]))}return[o,i,l]}testLoop(e,t,n,s=0,r){return Z(()=>{let a=this.checkNumSamples(t,n,r,"steps"),o=[];if(s>0)throw new qe("Verbose mode is not implemented yet.");if(r!=null)throw new qe("steps mode in testLoop() is not implemented yet");{let i=G3(a,n),l=Pt(Dr(0,a));for(let u=0;u<i.length;++u){let c=i[u][0],p=i[u][1],d=qi(l,c,p-c),h=b5(t,d),f=e(h);if(u===0)for(let m=0;m<f.length;++m)o.push(Ce(0));for(let m=0;m<f.length;++m){let g=f[m];o[m]=ue(o[m],z(p-c,g))}}for(let u=0;u<o.length;++u)o[u]=fe(o[u],a)}return o})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let s=e[n],r=s;Ov(e,s)>1&&(r+=`_${Ov(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{let c=[];for(let f=0;f<this.inputs.length;++f)c.push({key:this.inputs[f],value:n[f]});let p=new Ui(c),d=op(this.outputs,p,{training:!0}),h;for(let f=0;f<this.lossFunctions.length;++f){let m=this.lossFunctions[f],g=m(s[f],d[f]);r[f]!=null&&(g=jU(g,r[f]));let y=Bt(g);t.push(y),f===0?h=g:h=ue(h,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],y=this.metricsTensors[f][1];m=Bt(g(s[y],d[y]))}An(m),a.push(m)}return h=Bt(h),this.calculateLosses().forEach(f=>{h=ue(h,f)}),h},i=this.collectedTrainableWeights.map(c=>c.read()),l=!0;return[this.optimizer_.minimize(o,l,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Z(()=>{let t=[],n,s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:s[l]});let o=new Ui(a),i=op(this.outputs,o);for(let l=0;l<this.lossFunctions.length;++l){let u=this.lossFunctions[l],c=Bt(u(r[l],i[l]));l===0?n=c:n=ue(n,c),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let u=this.metricsTensors[l][0],c=this.metricsTensors[l][1],p=Bt(u(r[c],i[c]));t.push(p)}return t})}async fit(e,t,n={}){return eG(this,e,t,n)}async fitDataset(e,t){return KU(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),s=n[0],r=n[1],o=this.makeTrainFunction()(s.concat(r)),i=[];for(let l of o){let u=await l.data();i.push(u[0])}return J(o),Cr(n[0],e),Cr(n[1],t),hs(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=xm().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-xm().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=ca(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>ca(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let s of t)if(typeof n[s]=="string")e[s]=ca(n[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[ca(jf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ca(jf(e)));{let e={};for(let t in this.metrics)e[t]=ca(jf(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=Rp(e.optimizer_config),n=Rr(t),s;if(typeof e.loss=="string")s=Bi(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>Bi(a));else if(e.loss!=null){s={};for(let a in e.loss)s[a]=Bi(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>Bi(a));else if(e.metrics!=null){r={};for(let a in e.metrics)r[a]=Bi(e.metrics[a])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=Ns.getSaveHandlers(e);if(l.length===0)throw new H(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new H(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new H("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Ns.encodeWeights(this.getNamedWeights(t)),s=!1,r=null,o={modelTopology:this.toJSON(r,s),format:aG,generatedBy:`TensorFlow.js tfjs-layers v${x5}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:u,specs:c}=await Ns.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...c),n.data=Ns.concatenateArrayBuffers([n.data,u])}return this.userDefinedMetadata!=null&&(qv(this.userDefinedMetadata,this.name,!0),o.userDefinedMetadata=this.userDefinedMetadata),o.weightData=n.data,o.weightSpecs=n.specs,e.save(o)}setUserDefinedMetadata(e){qv(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};fa.className="Model";de.registerClass(fa);var q8=class extends fa{};q8.className="Functional";de.registerClass(q8);async function oG(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let s=Rp(n),r=Rr(s,t);if(e.weightsManifest!=null){let a=await Ns.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(i=>i.originalName)),o={};for(let i of r.weights)o[i.originalName]=a[i.originalName];r.loadWeights(o),J(a)}return r}async function iG(e,t){if(t==null&&(t={}),typeof e=="string"){let n=Ns.getLoadHandlers(e,t);if(n.length===0)n.push(Ns.browserHTTPRequest(e,t));else if(n.length>1)throw new H(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return lG(e,void 0,t)}async function lG(e,t,n){if(n==null&&(n={}),e.load==null)throw new H("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let s=await e.load(),r=s.modelTopology;r.model_config!=null&&(r=r.model_config);let a=n.strict==null?!0:n.strict,o=s.weightData!=null&&s.weightSpecs!=null&&a,i=Rr(Rp(r),t,o),l=s.trainingConfig;if(l!=null&&i.loadTrainingConfig(l),s.userDefinedMetadata!=null&&i.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new H("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:c}=uG(s.weightData,s.weightSpecs);i.loadWeights(u,a),i.optimizer!=null&&c.length>0&&await i.optimizer.setWeights(c),J(u),J(c.map(p=>p.tensor))}return i}function uG(e,t){let n=Ns.decodeWeights(e,t),s={},r=[];return t.forEach(a=>{a.group==="optimizer"?r.push({name:a.name,tensor:n[a.name]}):s[a.name]=n[a.name]}),{modelWeights:s,optimizerWeights:r}}var ac=class extends fa{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:e2("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new H(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof ac||e instanceof fa,n;if(t){if(n=e,n.outputs.length!==1)throw new H("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new H("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new H("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=T8({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new H(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new H("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=C8(this.outputs[0])}this.inboundNodes=[],new c2({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:tl(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(At(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new fa({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Tr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Tr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Tr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Tr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new H("Legacy serialization format not supported yet.");r=t}else v.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;let o=new e(a);if(!(o instanceof ac))throw new qe(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let i of r){let u=Rr(i,void 0,s);s&&u.setFastWeightInitDuringBuild(!0),o.add(u)}return o}set stopTraining(e){if(this.model==null)throw new H("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new H("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};ac.className="Sequential";de.registerClass(ac);function cG(e){return new fa(e)}function dG(e){return new ac(e)}function pG(e,t){return t==null&&(t={}),iG(e,t)}function X8(e){return T8(e)}function hG(e,t){sr.registerCallbackConstructor(e,t)}var xs=class extends de.Serializable{getConfig(){return{}}},K8=class extends xs{apply(e,t=1){return PV(e,t)}};K8.className="elu";de.registerClass(K8);var Z8=class extends xs{apply(e){return P0(e)}};Z8.className="selu";de.registerClass(Z8);var Y8=class extends xs{apply(e){return Fr(e)}};Y8.className="relu";de.registerClass(Y8);var J8=class extends xs{apply(e){return Z(()=>Zc(6,Fr(e)))}};J8.className="relu6";de.registerClass(J8);var Q8=class extends xs{apply(e){return e}};Q8.className="linear";de.registerClass(Q8);var ek=class extends xs{apply(e){return Cn(e)}};ek.className="sigmoid";de.registerClass(ek);var tk=class extends xs{apply(e){return OV(e)}};tk.className="hardSigmoid";de.registerClass(tk);var nk=class extends xs{apply(e){return Yl(e)}};nk.className="softplus";de.registerClass(nk);var sk=class extends xs{apply(e){return FV(e)}};sk.className="softsign";de.registerClass(sk);var rk=class extends xs{apply(e){return Ji(e)}};rk.className="tanh";de.registerClass(rk);var v5=class extends xs{apply(e,t=-1){return Ql(e,t)}};v5.className="softmax";de.registerClass(v5);var ak=class extends xs{apply(e,t=-1){return C0(e,t)}};ak.className="logSoftmax";de.registerClass(ak);var ok=class extends xs{apply(e,t=1){return Z(()=>z(Cn(z(e,t)),e))}};ok.className="swish";de.registerClass(ok);var ik=class extends xs{apply(e){return Z(()=>z(e,Ji(Yl(e))))}};ik.className="mish";de.registerClass(ik);function ao(e){return e.getClassName()}function m3(e,t={}){return kh(e,de.SerializationMap.getMap().classNameMap,t,"activation")}function oo(e){if(e==null){let t={};return t.className="linear",t.config={},m3(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},m3(t)}else return e instanceof xs?e:m3(e)}function w5(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var lk=class extends de.Serializable{},Nh=class extends lk{constructor(e){super(),w5(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return Z(()=>{let t=Wt([1]);return this.hasL1&&(t=ue(t,ke(z(this.l1,en(e))))),this.hasL2&&(t=ue(t,ke(z(this.l2,Sh(e))))),V(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Nh.className="L1L2";de.registerClass(Nh);function fG(e){return w5(e),new Nh({l1:e!=null?e.l1:null,l2:0})}function mG(e){return w5(e),new Nh({l2:e!=null?e.l2:null,l1:0})}var Qv={l1l2:"L1L2"};function It(e){return QA(e)}function e7(e,t={}){return kh(e,de.SerializationMap.getMap().classNameMap,t,"regularizer")}function Ot(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Qv?Qv[e]:e,config:{}};return e7(n)}else return e instanceof lk?e:e7(e)}var k5=class extends ut{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Xe(e);let n=Fr(e);return this.maxValue!=null&&(n=ms(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};k5.className="ReLU";de.registerClass(k5);var I5=class extends ut{constructor(e){super(e==null?{}:e),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Xe(e);return ph(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};I5.className="LeakyReLU";de.registerClass(I5);var S5=class extends ut{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ft(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ot(e.alphaRegularizer),this.alphaConstraint=mn(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new H(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=At(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new sn({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Xe(e),Ah(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Vt(this.alphaInitializer),alphaRegularizer:It(this.alphaRegularizer),alphaConstraint:fn(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};S5.className="PReLU";de.registerClass(S5);var C5=class extends ut{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new qe(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Xe(e);return Hc(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};C5.className="ELU";de.registerClass(C5);var T5=class extends ut{constructor(e){super(e==null?{}:e),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Xe(e);return z(n,ye(As(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};T5.className="ThresholdedReLU";de.registerClass(T5);var N5=class extends ut{constructor(e){super(e==null?{}:e),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new v5().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Xe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};N5.className="Softmax";de.registerClass(N5);function qu(e,t,n){if(typeof e=="number")return tl(e,t);if(e.length!==t)throw new H(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){let r=e[s];if(!RV(r))throw new H(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function _r(e,t,n,s,r=1){if(e==null)return e;let a=t+(t-1)*(r-1),o;return n==="same"?o=e:o=e-a+1,Math.floor((o+s-1)/s)}function Gr(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+ro([n-t,0]);else if(s==="same")e=e*t;else throw new H(`Unsupport padding mode: ${s}.`);return e}function E5(e,t){return Z(()=>(Zt(t),t==="channelsFirst"?et(e,[0,2,3,1]):e))}function uk(e,t){return Z(()=>(Zt(t),t==="channelsFirst"?et(e,[0,2,3,4,1]):e))}function gG(e,t,n,s=1,r="valid",a,o=1){return Z(()=>{if(a==null&&(a=$r()),Zt(a),e.shape.length!==3)throw new H(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new H(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new H(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=et(e,[0,2,1])),r==="causal")throw new qe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=x0(e,t,s,r==="same"?"same":"valid","NWC",o);return n!=null&&(i=Or(i,n)),i})}function t7(e,t,n,s=[1,1],r="valid",a,o,i=null){return Z(()=>{if(a==null&&(a=$r()),Zt(a),e.rank!==3&&e.rank!==4)throw new H(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new H(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=E5(e,a);if(r==="causal")throw new qe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=nc.conv2d({x:l,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),a==="channelsFirst"&&(l=et(l,[0,3,1,2])),l})}function yG(e,t,n,s=[1,1,1],r="valid",a,o){return Z(()=>{if(a==null&&(a=$r()),Zt(a),e.rank!==4&&e.rank!==5)throw new H(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new H(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=uk(e,a);if(r==="causal")throw new qe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=mA(i,t,s,r==="same"?"same":"valid","NDHWC",o),n!=null&&(i=Or(i,n)),a==="channelsFirst"&&(i=et(i,[0,4,1,2,3])),i})}var R5=class extends ut{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",R5.verifyArgs(t),this.rank=e,xn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new qe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=qu(t.kernelSize,e,"kernelSize"),this.strides=qu(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Ys(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Zt(this.dataFormat),this.activation=oo(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Ft(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=mn(t.biasConstraint),this.biasRegularizer=Ot(t.biasRegularizer),this.activityRegularizer=Ot(t.activityRegularizer),this.dilationRate=qu(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new H(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new H(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new H(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Ur("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!e5(e.kernelSize,"number",1,3))throw new H(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ao(this.activation),useBias:this.useBias,biasInitializer:Vt(this.biasInitializer),biasRegularizer:It(this.biasRegularizer),activityRegularizer:It(this.activityRegularizer),biasConstraint:fn(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Eh=class extends R5{constructor(e,t){super(e,t),this.kernel=null,Eh.verifyArgs(t),this.filters=t.filters,xn(this.filters,"filters"),this.kernelInitializer=Ft(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=mn(t.kernelConstraint),this.kernelRegularizer=Ot(t.kernelRegularizer)}build(e){e=At(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Z(()=>{e=Xe(e);let n,s=this.bias==null?null:this.bias.read(),r=y8(this.activation.getClassName());if(r!=null&&this.rank===2)n=t7(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=gG(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=t7(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=yG(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new qe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=At(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let a=_r(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){let e={filters:this.filters,kernelInitializer:Vt(this.kernelInitializer),kernelRegularizer:It(this.kernelRegularizer),kernelConstraint:fn(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new H(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},Rh=class extends Eh{constructor(e){super(2,e),Rh.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!e5(e.kernelSize,"number",1,2))throw new H(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};Rh.className="Conv2D";de.registerClass(Rh);var _h=class extends Eh{constructor(e){super(3,e),_h.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new H(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};_h.className="Conv3D";de.registerClass(_h);var _5=class extends Rh{constructor(e){if(super(e),this.inputSpec=[new sn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new H(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=At(e),e.length!==4)throw new H("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new sn({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Z(()=>{let n=Xe(e);if(n.shape.length!==4)throw new H(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);let i=s[a],l=s[o],u=this.kernelSize[0],c=this.kernelSize[1],p=this.strides[0],d=this.strides[1],h=Gr(i,p,u,this.padding),f=Gr(l,d,c,this.padding),m=[r,h,f,this.filters];this.dataFormat!=="channelsLast"&&(n=et(n,[0,2,3,1]));let g=b0(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=et(g,[0,3,1,2])),this.bias!=null&&(g=Or(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=At(e);let t=e.slice(),n,s,r;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3):(n=3,s=1,r=2);let a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=Gr(t[s],i,a,this.padding),t[r]=Gr(t[r],l,o,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};_5.className="Conv2DTranspose";de.registerClass(_5);var D5=class extends _h{constructor(e){if(super(e),this.inputSpec=[new sn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new H(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=At(e),e.length!==5)throw new H("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new sn({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Z(()=>{let n=Xe(e);if(n.shape.length!==5)throw new H(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o,i;this.dataFormat==="channelsFirst"?(i=2,a=3,o=4):(i=1,a=2,o=3);let l=s[i],u=s[a],c=s[o],p=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=Gr(l,f,p,this.padding),x=Gr(u,m,d,this.padding),A=Gr(c,g,h,this.padding),b=[r,y,x,A,this.filters];this.dataFormat!=="channelsLast"&&(n=et(n,[0,2,3,4,1]));let w=gA(n,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(w=et(w,[0,4,1,2,3])),this.bias!==null&&(w=Or(w,this.bias.read(),this.dataFormat)),this.activation!==null&&(w=this.activation.apply(w)),w})}computeOutputShape(e){e=At(e);let t=e.slice(),n,s,r,a;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);let o=this.kernelSize[0],i=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],p=this.strides[2];return t[n]=this.filters,t[s]=Gr(t[s],u,o,this.padding),t[r]=Gr(t[r],c,i,this.padding),t[a]=Gr(t[a],p,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};D5.className="Conv3DTranspose";de.registerClass(D5);var ck=class extends Eh{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new H("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new H("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new H(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Ft(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ot(t.depthwiseRegularizer),this.depthwiseConstraint=mn(t.depthwiseConstraint),this.pointwiseInitializer=Ft(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ot(t.pointwiseRegularizer),this.pointwiseConstraint=mn(t.pointwiseConstraint)}build(e){if(e=At(e),e.length<this.rank+2)throw new H(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new H(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new sn({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Z(()=>{e=Xe(e);let n;if(this.rank===1)throw new qe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=et(e,[0,2,3,1])),n=F0(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=Or(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=et(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Vt(this.depthwiseInitializer),e.pointwiseInitializer=Vt(this.pointwiseInitializer),e.depthwiseRegularizer=It(this.depthwiseRegularizer),e.pointwiseRegularizer=It(this.pointwiseRegularizer),e.depthwiseConstraint=fn(this.depthwiseConstraint),e.pointwiseConstraint=fn(this.pointwiseConstraint),e}};ck.className="SeparableConv";var $5=class extends ck{constructor(e){super(2,e)}};$5.className="SeparableConv2D";de.registerClass($5);var h2=class extends Eh{constructor(e){super(1,e),h2.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!e5(e.kernelSize,"number",1,1))throw new H(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};h2.className="Conv1D";de.registerClass(h2);var P5=class extends ut{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Z(()=>{if(e=Xe(e),this.dataFormat==="channelsLast"){let n=Hf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Hf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Hf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Hf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};P5.className="Cropping2D";de.registerClass(P5);var F5=class extends ut{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Zt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,TV(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Z(()=>{let n=Xe(e),s=n.shape;if(this.dataFormat==="channelsFirst"){n=et(n,[0,2,3,1]);let r=this.size[0]*s[2],a=this.size[1]*s[3],o=this.interpolation==="nearest"?Se.resizeNearestNeighbor(n,[r,a]):Se.resizeBilinear(n,[r,a]);return et(o,[0,3,1,2])}else{let r=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?Se.resizeNearestNeighbor(n,[r,a]):Se.resizeBilinear(n,[r,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};F5.className="UpSampling2D";de.registerClass(F5);function AG(e,t,n=[1,1],s="valid",r,a){return Z(()=>{r==null&&(r=$r()),Zt(r);let o=E5(e,r);if(e.rank!==4)throw new H(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new H(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=Gc(o,t,n,s==="same"?"same":"valid","NHWC",a),r==="channelsFirst"&&(o=et(o,[0,3,1,2])),o})}var O5=class extends R5{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Ft(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=mn(e.depthwiseConstraint),this.depthwiseRegularizer=Ot(e.depthwiseRegularizer)}build(e){if(e=At(e),e.length<4)throw new H(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new H(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Z(()=>{e=Xe(e);let n=AG(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=Or(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=At(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=_r(t,this.kernelSize[0],this.padding,this.strides[0]),a=_r(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Vt(this.depthwiseInitializer),e.depthwiseRegularizer=It(this.depthwiseRegularizer),e.depthwiseConstraint=fn(this.depthwiseRegularizer),e}};O5.className="DepthwiseConv2D";de.registerClass(O5);function dk(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new H("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(a){return a==null||Array.isArray(a)?a:[a]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function pk(e,t,n,s=!1,r,a,o=!1,i=!1){return Z(()=>{let l=t.shape.length;if(l<3)throw new H(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(Dr(2,l));if(t=et(t,u),a!=null)throw new qe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=ye(ye(r,"bool"),"float32"),r.rank===l-1&&(r=Lt(r,-1)),r=et(r,u)),s&&(t=Xs(t,0),r!=null&&(r=Xs(r,0)));let c=[],p,d=n,h=t.shape[0],f=En(t),m;r!=null&&(m=En(r));for(let y=0;y<h;++y){let x=f[y],A=Z(()=>e(x,d));if(r==null)p=A[0],d=A[1];else{let b=Z(()=>{let w=m[y],I=me(Ps(w),w),k=ue(z(A[0],w),z(d[0],I)),R=d.map((_,D)=>ue(z(A[1][D],w),z(_,I)));return{output:k,newStates:R}});p=b.output,d=b.newStates}i&&c.push(p)}let g;return i&&(g=an(c,1)),[p,g,d]})}var ea=class extends ut{constructor(e){super(e);let t;if(e.cell==null)throw new H("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new g2({cells:e.cell}):t=e.cell,t.stateSize==null)throw new H("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new sn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Dr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){L3(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],s;if(this.returnSequences?s=[e[0],e[1],n]:s=[e[0],n],this.returnState){let r=[];for(let a of t)r.push([e[0],a]);return[s].concat(r)}else return s}computeMask(e,t){return Z(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let s=this.states.map(r=>null);return[n].concat(s)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new qe("Constants support is not implemented in RNN yet.");L3(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new sn({shape:[n,null,...s]});let r=[e[0]].concat(e.slice(2));this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!v.arraysEqual(this.stateSpec.map(o=>o.shape[o.shape.length-1]),a))throw new H(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(o=>new sn({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Z(()=>{if(!this.stateful)throw new ua("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new H("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Wt([n,s])):this.states_=[Wt([n,this.cell.stateSize])];else if(e==null)J(this.states_),this.keptStates!=null&&(J(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Wt([n,s])):this.states_[0]=Wt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new H(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):J(this.states_);for(let s=0;s<this.states_.length;++s){let r=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,o=[n,a];if(!v.arraysEqual(r.shape,o))throw new H(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[s]=r}}this.states_=this.states_.map(s=>An(s.clone()))})}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=dk(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],o=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new sn({shape:l.shape}));o=o.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof Nr){let l=[e].concat(a),u=this.inputSpec.concat(o),c=this.inputSpec;this.inputSpec=u;let p=super.apply(l,t);return this.inputSpec=c,p}else return super.apply(e,t)}call(e,t){return Z(()=>{let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;e=Xe(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new H(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:s},l=pk((h,f)=>{let m=this.cell.call([h].concat(f),o);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=l[0],c=l[1],p=l[2];this.stateful&&this.resetStates(p,s);let d=this.returnSequences?c:u;return this.returnState?[d].concat(p):d})}getInitialState(e){return Z(()=>{let t=Wt(e.shape);return t=ke(t,[1,2]),t=Ih(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?M3(t,[1,n]):t):this.cell.stateSize>1?[M3(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===ea.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let s=t.cell,r=Rr(s,n);return new e(Object.assign(t,{cell:r}))}};ea.className="RNN";de.registerClass(ea);var Dh=class extends ut{},f2=class extends Dh{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,xn(this.units,"units"),this.activation=oo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ft(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ft(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ft(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ot(e.kernelRegularizer),this.recurrentRegularizer=Ot(e.recurrentRegularizer),this.biasRegularizer=Ot(e.biasRegularizer),this.kernelConstraint=mn(e.kernelConstraint),this.recurrentConstraint=mn(e.recurrentConstraint),this.biasConstraint=mn(e.biasConstraint),this.dropout=sc([1,ro([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=sc([1,ro([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=At(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Z(()=>{if(e=e,e.length!==2)throw new H(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=io({ones:()=>Ps(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=io({ones:()=>Ps(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let r,a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?r=qr(z(e,a),this.kernel.read()):r=qr(e,this.kernel.read()),this.bias!=null&&(r=Or(r,this.bias.read())),o!=null&&(n=z(n,o));let i=ue(r,qr(n,this.recurrentKernel.read()));return this.activation!=null&&(i=this.activation.apply(i)),[i,i]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ao(this.activation),useBias:this.useBias,kernelInitializer:Vt(this.kernelInitializer),recurrentInitializer:Vt(this.recurrentInitializer),biasInitializer:Vt(this.biasInitializer),kernelRegularizer:It(this.kernelRegularizer),recurrentRegularizer:It(this.recurrentRegularizer),biasRegularizer:It(this.biasRegularizer),activityRegularizer:It(this.activityRegularizer),kernelConstraint:fn(this.kernelConstraint),recurrentConstraint:fn(this.recurrentConstraint),biasConstraint:fn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};f2.className="SimpleRNNCell";de.registerClass(f2);var M5=class extends ea{constructor(e){e.cell=new f2(e),super(e)}call(e,t){return Z(()=>{this.cell.dropoutMask!=null&&(J(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(J(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return new e(t)}};M5.className="SimpleRNN";de.registerClass(M5);var m2=class extends Dh{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new H("GRUCell does not support reset_after parameter set to true.");this.units=e.units,xn(this.units,"units"),this.activation=oo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=oo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ft(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ft(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ft(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ot(e.kernelRegularizer),this.recurrentRegularizer=Ot(e.recurrentRegularizer),this.biasRegularizer=Ot(e.biasRegularizer),this.kernelConstraint=mn(e.kernelConstraint),this.recurrentConstraint=mn(e.recurrentConstraint),this.biasConstraint=mn(e.biasConstraint),this.dropout=sc([1,ro([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=sc([1,ro([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=At(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Z(()=>{if(e=e,e.length!==2)throw new H(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=io({ones:()=>Ps(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=io({ones:()=>Ps(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let r=this.dropoutMask,a=this.recurrentDropoutMask,o,i,l;0<this.dropout&&this.dropout<1&&(e=z(e,r[0]));let u=qr(e,this.kernel.read());this.useBias&&(u=Or(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=z(s,a[0]));let c=this.recurrentKernel.read(),[p,d]=Kt(c,[2*this.units,this.units],c.rank-1),h=qr(s,p),[f,m,g]=Kt(u,3,u.rank-1),[y,x]=Kt(h,2,h.rank-1);o=this.recurrentActivation.apply(ue(f,y)),i=this.recurrentActivation.apply(ue(m,x));let A=qr(z(i,s),d);l=this.activation.apply(ue(g,A));let b=ue(z(o,s),z(ue(1,Dt(o)),l));return[b,b]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ao(this.activation),recurrentActivation:ao(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Vt(this.kernelInitializer),recurrentInitializer:Vt(this.recurrentInitializer),biasInitializer:Vt(this.biasInitializer),kernelRegularizer:It(this.kernelRegularizer),recurrentRegularizer:It(this.recurrentRegularizer),biasRegularizer:It(this.biasRegularizer),activityRegularizer:It(this.activityRegularizer),kernelConstraint:fn(this.kernelConstraint),recurrentConstraint:fn(this.recurrentConstraint),biasConstraint:fn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};m2.className="GRUCell";de.registerClass(m2);var z5=class extends ea{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new m2(e),super(e)}call(e,t){return Z(()=>{this.cell.dropoutMask!=null&&(J(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(J(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};z5.className="GRU";de.registerClass(z5);var $h=class extends Dh{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,xn(this.units,"units"),this.activation=oo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=oo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ft(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ft(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ft(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ot(e.kernelRegularizer),this.recurrentRegularizer=Ot(e.recurrentRegularizer),this.biasRegularizer=Ot(e.biasRegularizer),this.kernelConstraint=mn(e.kernelConstraint),this.recurrentConstraint=mn(e.recurrentConstraint),this.biasConstraint=mn(e.biasConstraint),this.dropout=sc([1,ro([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=sc([1,ro([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=At(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,a=this.units;s=new(t=class extends dr{apply(i,l){let u=r.apply([a]),c=new s2().apply([a]),p=r.apply([a*2]);return zv(zv(u,c),p)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Z(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new H(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=io({ones:()=>Ps(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=io({ones:()=>Ps(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,o=this.recurrentDropoutMask,i,l,u,c;0<this.dropout&&this.dropout<1&&(e=z(e,a[0]));let p=qr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=z(s,o[0])),p=ue(p,qr(s,this.recurrentKernel.read())),this.useBias&&(p=Or(p,this.bias.read()));let[d,h,f,m]=Kt(p,4,p.rank-1);i=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(h),u=ue(z(l,r),z(i,this.activation.apply(f))),c=this.recurrentActivation.apply(m);let g=z(c,this.activation.apply(u));return[g,g,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ao(this.activation),recurrentActivation:ao(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Vt(this.kernelInitializer),recurrentInitializer:Vt(this.recurrentInitializer),biasInitializer:Vt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:It(this.kernelRegularizer),recurrentRegularizer:It(this.recurrentRegularizer),biasRegularizer:It(this.biasRegularizer),activityRegularizer:It(this.activityRegularizer),kernelConstraint:fn(this.kernelConstraint),recurrentConstraint:fn(this.recurrentConstraint),biasConstraint:fn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};$h.className="LSTMCell";de.registerClass($h);var L5=class extends ea{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new $h(e),super(e)}call(e,t){return Z(()=>{this.cell.dropoutMask!=null&&(J(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(J(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};L5.className="LSTM";de.registerClass(L5);var g2=class extends Dh{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Z(()=>{e=e;let n=e.slice(1),s=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(n.splice(0,o.stateSize.length)):s.push(n.splice(0,1));s.reverse();let r=[],a;for(let o=0;o<this.cells.length;++o){let i=this.cells[o];n=s[o],o===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=i.call(a,t),r.push(a.slice(1))}n=[];for(let o of r.slice().reverse())n.push(...o);return[a[0]].concat(n)})}build(e){L3(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,s)=>{ji(`RNNCell_${s}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),s={cells:this.cells.map(t)};return Object.assign({},e,s)}static fromConfig(e,t,n={}){let s=[];for(let r of t.cells)s.push(Rr(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return B3(e)}setWeights(e){let t=[];for(let n of this.cells){let s=n.weights.length,r=e.splice(s);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],r[a]])}u5(t)}};g2.className="StackedRNNCells";de.registerClass(g2);function io(e){let{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,o=()=>a!=null?a(t(),n):I8(t(),n),i=()=>Ch(o,t,s);return!r||r<=1?An(i().clone()):Array(r).fill(void 0).map(i).map(u=>An(u.clone()))}var xG=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]]);return n},hk=class extends ea{constructor(e){if(e.unroll)throw new qe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new qe("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new sn({ndim:5})]}call(e,t){return Z(()=>{if(this.cell.dropoutMask!=null&&(J(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(J(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new H("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Z(()=>{let{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=Wt(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){Z(()=>{if(!this.stateful)throw new ua("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(n[0]==null)throw new H("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Wt(r)):this.states_=[Wt(r)];else if(e==null)J(this.states_),this.keptStates!=null&&(J(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Wt(r)):this.states_[0]=Wt(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new H(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):J(this.states_);for(let o=0;o<this.states_.length;++o){let i=e[o],l=r;if(!v.arraysEqual(i.shape,l))throw new H(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>An(o.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:o}=this.cell,i=t==="channelsFirst",l=e[i?3:2],u=e[i?4:3],c=_r(l,s[0],r,a[0],o[0]),p=_r(u,s[1],r,a[1],o[1]);return[...e.slice(0,2),...i?[n,c,p]:[c,p,n]]}};hk.className="ConvRNN2D";var y2=class extends $h{constructor(e){let{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:o}=e;super(Object.assign({},e,{units:t})),this.filters=t,xn(this.filters,"filters"),this.kernelSize=qu(n,2,"kernelSize"),this.kernelSize.forEach(i=>xn(i,"kernelSize")),this.strides=qu(s||1,2,"strides"),this.strides.forEach(i=>xn(i,"strides")),this.padding=r||"valid",Ys(this.padding),this.dataFormat=a||"channelsLast",Zt(this.dataFormat),this.dilationRate=qu(o||1,2,"dilationRate"),this.dilationRate.forEach(i=>xn(i,"dilationRate"))}build(e){var t;e=At(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new H(`The channel dimension of the input should be defined. Found ${e[n]}`);let s=e[n],r=4,a=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let o=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let i;if(this.unitForgetBias){let l=this.biasInitializer,u=this.filters;i=new(t=class extends dr{apply(p,d){let h=l.apply([u]),f=Es([u]),m=l.apply([u*2]);return t5([h,f,m])}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,i,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Z(()=>{if(e.length!==3)throw new H(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,s=e[0],r=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=io({ones:()=>Ps(s),rate:this.dropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,l=(Y,se,ee)=>!se||!se[ee]?Y:z(se[ee],Y),u=l(s,i,0),c=l(s,i,1),p=l(s,i,2),d=l(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=io({ones:()=>Ps(r),rate:this.recurrentDropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,f=l(r,h,0),m=l(r,h,1),g=l(r,h,2),y=l(r,h,3),x=3,[A,b,w,I]=Kt(this.kernel.read(),o,x),[k,R,_,D]=this.useBias?Kt(this.bias.read(),o):[null,null,null,null];u=this.inputConv(u,A,k,this.padding),c=this.inputConv(c,b,R,this.padding),p=this.inputConv(p,w,_,this.padding),d=this.inputConv(d,I,D,this.padding);let[E,P,C,M]=Kt(this.recurrentKernel.read(),o,x);f=this.recurrentConv(f,E),m=this.recurrentConv(m,P),g=this.recurrentConv(g,C),y=this.recurrentConv(y,M);let W=this.recurrentActivation.apply(ue(u,f)),G=this.recurrentActivation.apply(ue(c,m)),X=ue(z(G,a),z(W,this.activation.apply(ue(p,g)))),K=z(this.recurrentActivation.apply(ue(d,y)),this.activation.apply(X));return[K,K,X]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=xG(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(e,t,n,s){let r=ga(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?Or(r,n,this.dataFormat):r}recurrentConv(e,t){return ga(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};y2.className="ConvLSTM2DCell";de.registerClass(y2);var B5=class extends hk{constructor(e){let t=new y2(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};B5.className="ConvLSTM2D";de.registerClass(B5);var A2=class extends ut{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return n}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let n=Xe(e);if(0<this.rate&&this.rate<1){let s=t.training==null?!1:t.training,r=this.getNoiseShape(n);return Ch(()=>I8(n,this.rate,r,this.seed),()=>n,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};A2.className="Dropout";de.registerClass(A2);var W5=class extends A2{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};W5.className="SpatialDropout1D";de.registerClass(W5);var V5=class extends ut{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,xn(this.units,"units"),this.activation=oo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Ft(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ft(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=mn(e.kernelConstraint),this.biasConstraint=mn(e.biasConstraint),this.kernelRegularizer=Ot(e.kernelRegularizer),this.biasRegularizer=Ot(e.biasRegularizer),this.activityRegularizer=Ot(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=At(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=At(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let n=Xe(e),s=y8(this.activation.getClassName()),r;return s!=null?r=qr(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=qr(n,this.kernel.read()),this.bias!=null&&(r=Or(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:ao(this.activation),useBias:this.useBias,kernelInitializer:Vt(this.kernelInitializer),biasInitializer:Vt(this.biasInitializer),kernelRegularizer:It(this.kernelRegularizer),biasRegularizer:It(this.biasRegularizer),activityRegularizer:It(this.activityRegularizer),kernelConstraint:fn(this.kernelConstraint),biasConstraint:fn(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};V5.className="Dense";de.registerClass(V5);var U5=class extends ut{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=At(e);for(let t of e.slice(1))if(t==null)throw new H(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Za(e,1)]}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let n=Xe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let s=[0];for(let r=2;r<n.rank;++r)s.push(r);s.push(1),n=et(n,s)}return $V(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};U5.className="Flatten";de.registerClass(U5);var G5=class extends ut{constructor(e){super(e),this.supportsMasking=!0,this.activation=oo(e.activation)}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let n=Xe(e);return this.activation.apply(n)})}getConfig(){let e={activation:ao(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};G5.className="Activation";de.registerClass(G5);var H5=class extends ut{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Z(()=>(e=Xe(e),_V(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};H5.className="RepeatVector";de.registerClass(H5);var j5=class extends ut{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",s=t.slice(),r=1,a=null;for(let i=0;i<s.length;++i){let l=s[i];if(this.isUnknown(l))if(a===null)a=i;else throw new H("Can only specifiy one unknown dimension.");else r*=l}let o=Za(e);if(a!==null){if(r===0||o%r!==0)throw new H(n);s[a]=o/r}else if(o!==r)throw new H(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let n=Xe(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return V(n,r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};j5.className="Reshape";de.registerClass(j5);var q5=class extends ut{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Dr(1,e.dims.length+1);if(!v.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new sn({ndim:this.dims.length+1})]}computeOutputShape(e){e=At(e);let t=e.slice();return this.dims.forEach((n,s)=>{t[s+1]=e[n]}),t}call(e,t){return et(Xe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};q5.className="Permute";de.registerClass(q5);var X5=class extends ut{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Xe(e),s=-1;return Tp(el(n,this.maskValue),s)}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let n=Xe(e),s=-1,r=!0,a=Tp(el(n,this.maskValue),s,r);return z(n,ye(a,n.dtype))})}};X5.className="Masking";de.registerClass(X5);var K5=class extends ut{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(_t(e.inputLength))}this.inputDim=e.inputDim,xn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,xn(this.outputDim,"outputDim"),this.embeddingsInitializer=Ft(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ot(e.embeddingsRegularizer),this.activityRegularizer=Ot(e.activityRegularizer),this.embeddingsConstraint=mn(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Z(()=>this.maskZero?(e=Xe(e),el(e,it(e))):null)}computeOutputShape(e){if(e=At(e),this.inputLength==null)return[...e,this.outputDim];let t=_t(this.inputLength);if(t.length!==e.length-1)throw new H(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){let r=t[s],a=e[s+1];if(r!=null&&a!=null&&r!==a)throw new H(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let n=Xe(e);n.dtype!=="int32"&&(n=t2(n,"int32"));let s=k8(this.embeddings.read(),V(n,[n.size]));return V(s,At(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Vt(this.embeddingsInitializer),embeddingsRegularizer:It(this.embeddingsRegularizer),activityRegularizer:It(this.activityRegularizer),embeddingsConstraint:fn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};K5.className="Embedding";de.registerClass(K5);var su=class extends ut{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new qe}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){let r=e[e.length-t.length+s],a=t[s];if(r==null||a==null||r<0||a<0)n.push(null);else if(r===1)n.push(a);else if(a===1)n.push(r);else{if(r!==a)throw new H("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[At(e)]),e=e,e.length<2)throw new H(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=Ka(t),t.length>1)throw new H(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let s=e.map(r=>r.length);e.indexOf(null)===-1&&Ka(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Z(()=>{if(e=e,this.reshapeRequired){let n=[],s=e.map(r=>r.rank);if(s.indexOf(null)===-1){let r=ro(s);for(let a of e){let o=a.rank;for(let i=0;i<r-o;++i)a=Ih(a,1);n.push(a)}return this.mergeFunction(n)}else{let r=!1;for(let i of e){let l=i.rank;if(l==null){let u=i.shape,c=u[0],p=u.slice(1).concat([c]),d=V(i,[c].concat(Za(u.slice(1))));d=et(d,[1,0]),d=V(d,p),n.push(d),r=!0}else if(l>1){let u=Dr(1,l).concat([0]);n.push(et(i,u)),r=!0}else n.push(i)}let a=this.mergeFunction(n),o=a.rank;if(r){if(o==null){let i=a.shape,l=i.length,u=i[l-1],c=[u].concat(i.slice(0,i.length-1));a=V(et(V(a,[-1,u]),[1,0]),c)}else if(o>1){let i=[o-1].concat(Dr(0,o-1));a=et(a,i)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){let r=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let s of e)s!=null&&s[0]!==null&&n.push(s[0]);return n=Ka(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return Z(()=>{if(t==null)return null;if(!Array.isArray(t))throw new H("`mask` should be an Array");if(!Array.isArray(e))throw new H("`inputs` should be an Array");if(t.length!==e.length)throw new H(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:Lt(s,0));let n=t[0];for(let s=1;s<t.length-1;++s)n=ir(n,t[s]);return n})}},Z5=class extends su{constructor(e){super(e)}mergeFunction(e){return Z(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ue(t,e[n]);return t})}};Z5.className="Add";de.registerClass(Z5);var Y5=class extends su{constructor(e){super(e)}mergeFunction(e){return Z(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=z(t,e[n]);return t})}};Y5.className="Multiply";de.registerClass(Y5);var J5=class extends su{constructor(e){super(e)}mergeFunction(e){return Z(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ue(t,e[n]);return z(1/e.length,t)})}};J5.className="Average";de.registerClass(J5);var Q5=class extends su{constructor(e){super(e)}mergeFunction(e){return Z(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Qr(t,e[n]);return t})}};Q5.className="Maximum";de.registerClass(Q5);var ex=class extends su{constructor(e){super(e)}mergeFunction(e){return Z(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Zc(t,e[n]);return t})}};ex.className="Minimum";de.registerClass(ex);var tx=class extends su{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new H("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let s of e)if(s!=null){t=!1;break}if(t)return;let n=[];for(let s=0;s<e.length;++s){let r=e[s].slice();r.splice(this.axis,1);let a=!1;for(let o of n)if(v.arraysEqual(o,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new H("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Z(()=>t5(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new H("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[s]==null||r[s]==null){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new H("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new H("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new H(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Z(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(ye(Ps(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Lt(t[a],-1)):s.push(t[a]);let r=St(s,this.axis);return A0(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};tx.className="Concatenate";de.registerClass(tx);function tp(e,t){for(;e<0;)e+=t;return e}function bG(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new qe("batchDot is not implemented for tensors of 4D or higher rank yet");if(v.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),v.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new qe("batchDot is not implemented for complex64-type Tensors yet.");let s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);let a=n;return Z(()=>{let o;if(s>r){o=s-r;let l=[];for(let u=0;u<o;++u)l.push(1);t=V(t,t.shape.concat(l))}else if(r>s){o=r-s;let l=[];for(let u=0;u<o;++u)l.push(1);e=V(e,e.shape.concat(l))}else o=0;let i;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?i=ke(z(e,t),a[0]):i=ke(z(et(e,[1,0]),t),a[1]);else{let l=a[0]!==e.shape.length-1,u=a[1]===t.shape.length-1;i=Qe(e,t,l,u)}if(o>0){let l;s>r?l=s+r-3:l=s-1;let u=[];for(let c=l;c<l+o;++c)u.push(c);i=st(i,u)}return i.shape.length===1&&(i=Lt(i,1)),i})}var nx=class extends su{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new qe("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new H(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new H(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((r,a)=>tp(r,e[a].shape.length)):s=[tp(this.axes,t.shape.length),tp(this.axes,n.shape.length)],this.normalize&&(t=Sm(t,s[0]),n=Sm(n,s[1])),bG(t,n,s)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[tp(this.axes,e.length),tp(this.axes,t.length)],n}computeOutputShape(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new qe("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};nx.className="Dot";de.registerClass(nx);var sx=class extends ut{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let n=Xe(e);return Ch(()=>ue(n2(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};sx.className="GaussianNoise";de.registerClass(sx);var rx=class extends ut{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let n=Xe(e);return this.rate>0&&this.rate<1?Ch(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return z(n,n2(n.shape,1,r))},()=>n,t.training||!1):n})}};rx.className="GaussianDropout";de.registerClass(rx);var ax=class extends ut{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Xe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Z(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return Ch(()=>{let r=Xe(e),a=1.6732632423543772,o=1.0507009873554805,i=-a*o,l=ui(Yc(n),this.rate);l=t2(l,"float32");let u=((1-this.rate)*(1+this.rate*i**2))**-.5,c=-u*i*this.rate,p=ue(z(r,l),z(ue(l,-1),i));return ue(z(p,u),c)},()=>Xe(e),t.training||!1)}return e})}};ax.className="AlphaDropout";de.registerClass(ax);function _p(e,t,n,s,r,a=.001){let o;if(e.rank===2)o=oA(e,t,n,s,r,a);else if(e.rank===3)o=iA(e,t,n,s,r,a);else if(e.rank===4)o=lA(e,t,n,s,r,a);else throw new qe(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return o}function vG(e,t,n,s,r=.001){return Z(()=>{let a=gh(e,s),o=a.mean,i=a.variance;return[_p(e,o,i,n,t,r),o,i]})}function wG(e,t,n,s,r=.001){return Z(()=>{let a=gh(e,s),o=a.mean,i=a.variance,l=[];for(let f of Dr(0,e.rank))s.indexOf(f)!==-1?l.push(1):l.push(e.shape[f]);let u=V(o,l),c=V(i,l),p=t==null?null:V(t,l),d=n==null?null:V(n,l);return[_p(e,u,c,d,p,r),o,i]})}function kG(e,t,n,s,r=.001){return v.arraysEqual(s.slice().sort(),Dr(0,e.rank-1))?vG(e,t,n,s,r):wG(e,t,n,s,r)}var ox=class extends ut{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ft(e.betaInitializer||"zeros"),this.gammaInitializer=Ft(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ft(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ft(e.movingVarianceInitializer||"ones"),this.betaConstraint=mn(e.betaConstraint),this.gammaConstraint=mn(e.gammaConstraint),this.betaRegularizer=Ot(e.betaRegularizer),this.gammaRegularizer=Ot(e.gammaRegularizer)}build(e){e=At(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new H(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new sn({ndim:e.length,axes:{[t]:n}})];let s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Z(()=>{let n=t.training==null?!1:t.training,s=Xe(e),r=s.shape,a=r.length,o=Dr(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);let l=tl(1,a);l[i]=r[i];let u=o.slice();u.sort();let c=!v.arraysEqual(u,Dr(0,a).slice(0,a-1)),p=()=>{if(c){let y=V(this.movingMean.read(),l),x=V(this.movingVariance.read(),l),A=this.center?V(this.beta.read(),l):null,b=this.scale?V(this.gamma.read(),l):null;return _p(s,y,x,A,b,this.epsilon)}else return _p(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return p();let[d,h,f]=kG(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(y,x,A)=>{Z(()=>{let b=1-A,w=y.read(),I=z(me(w,x),b);y.write(me(w,I))})};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,f,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Vt(this.betaInitializer),gammaInitializer:Vt(this.gammaInitializer),movingMeanInitializer:Vt(this.movingMeanInitializer),movingVarianceInitializer:Vt(this.movingVarianceInitializer),betaRegularizer:It(this.betaRegularizer),gammaRegularizer:It(this.gammaRegularizer),betaConstraint:fn(this.betaConstraint),gammaConstraint:fn(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};ox.className="BatchNormalization";de.registerClass(ox);var ix=class extends ut{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ft(e.betaInitializer||"zeros"),this.gammaInitializer=Ft(e.gammaInitializer||"ones"),this.betaRegularizer=Ot(e.betaRegularizer),this.gammaRegularizer=Ot(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=At(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Ka(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){let n=Xe(e),s=n.shape,r=s.length;return Z(()=>{let{mean:o,variance:i}=gh(n,this.axis,!0),l=tl(1,r);for(let f of this.axis)l[f]=s[f];let u=f=>f!=null&&f.shape.length!==r?V(f,l):f,c=this.scale?u(this.gamma.read()):null,p=this.center?u(this.beta.read()):null,d=[],h=[];for(let f=0;f<r;++f)this.axis.indexOf(f)!==-1?(d.push(s[f]),h.push(1)):(d.push(1),h.push(s[f]));return o=Hs(o,d),i=Hs(i,d),c!=null&&(c=Hs(c,h)),p!=null&&(p=Hs(p,h)),_p(n,o,i,p,c,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Vt(this.betaInitializer),gammaInitializer:Vt(this.gammaInitializer),betaRegularizer:It(this.betaRegularizer),gammaRegularizer:It(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};ix.className="LayerNormalization";de.registerClass(ix);function IG(e,t,n){return Z(()=>{if(e.rank!==4)throw new H(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new H("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=$r()),n!=="channelsLast"&&n!=="channelsFirst")throw new H(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Zs(e,s)})}var lx=class extends ut{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?$r():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new H(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new H(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new H(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new sn({ndim:4})]}computeOutputShape(e){e=At(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return Z(()=>IG(Xe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};lx.className="ZeroPadding2D";de.registerClass(lx);function x2(e,t,n,s,r,a){return Z(()=>{Zt(r),x8(a),Ys(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=$r()),a==null&&(a="max"),e=E5(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=mh(e,t,n,i):o=uh(e,t,n,i),r==="channelsFirst"&&(o=et(o,[0,3,1,2])),o})}function fk(e,t,n,s,r,a){return Z(()=>{Zt(r),x8(a),Ys(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=$r()),a==null&&(a="max"),e=uk(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=DA(e,t,n,i):o=aA(e,t,n,i),r==="channelsFirst"&&(o=et(o,[0,4,1,2,3])),o})}var mk=class extends ut{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new H(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(xn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new H(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);xn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Ys(this.padding),this.inputSpec=[new sn({ndim:3})]}computeOutputShape(e){e=At(e);let t=_r(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Z(()=>{this.invokeCallHook(e,t),e=Ih(Xe(e),2);let n=this.poolingFunction(Xe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return st(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},ux=class extends mk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Zt(r),Ys(s),x2(e,t,n,s,r,"max")}};ux.className="MaxPooling1D";de.registerClass(ux);var cx=class extends mk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Zt(r),Ys(s),x2(e,t,n,s,r,"avg")}};cx.className="AveragePooling1D";de.registerClass(cx);var gk=class extends ut{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new H(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];xn(this.poolSize,"poolSize"),xn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Zt(this.dataFormat),Ys(this.padding),this.inputSpec=[new sn({ndim:4})]}computeOutputShape(e){e=At(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=_r(t,this.poolSize[0],this.padding,this.strides[0]),n=_r(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Z(()=>(this.invokeCallHook(e,t),this.poolingFunction(Xe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},dx=class extends gk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Zt(r),Ys(s),x2(e,t,n,s,r,"max")}};dx.className="MaxPooling2D";de.registerClass(dx);var px=class extends gk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Zt(r),Ys(s),x2(e,t,n,s,r,"avg")}};px.className="AveragePooling2D";de.registerClass(px);var yk=class extends ut{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new H(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];xn(this.poolSize,"poolSize"),xn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Zt(this.dataFormat),Ys(this.padding),this.inputSpec=[new sn({ndim:5})]}computeOutputShape(e){e=At(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=_r(t,this.poolSize[0],this.padding,this.strides[0]),n=_r(n,this.poolSize[1],this.padding,this.strides[1]),s=_r(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return Z(()=>(this.invokeCallHook(e,t),this.poolingFunction(Xe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},hx=class extends yk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Zt(r),Ys(s),fk(e,t,n,s,r,"max")}};hx.className="MaxPooling3D";de.registerClass(hx);var fx=class extends yk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Zt(r),Ys(s),fk(e,t,n,s,r,"avg")}};fx.className="AveragePooling3D";de.registerClass(fx);var Ak=class extends ut{constructor(e){super(e),this.inputSpec=[new sn({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new qe}},mx=class extends Ak{constructor(e){super(e||{})}call(e,t){return Z(()=>{let n=Xe(e);return Bt(n,1)})}};mx.className="GlobalAveragePooling1D";de.registerClass(mx);var gx=class extends Ak{constructor(e){super(e||{})}call(e,t){return Z(()=>{let n=Xe(e);return hn(n,1)})}};gx.className="GlobalMaxPooling1D";de.registerClass(gx);var xk=class extends ut{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Zt(this.dataFormat),this.inputSpec=[new sn({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new qe}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},yx=class extends xk{call(e,t){return Z(()=>{let n=Xe(e);return this.dataFormat==="channelsLast"?Bt(n,[1,2]):Bt(n,[2,3])})}};yx.className="GlobalAveragePooling2D";de.registerClass(yx);var Ax=class extends xk{call(e,t){return Z(()=>{let n=Xe(e);return this.dataFormat==="channelsLast"?hn(n,[1,2]):hn(n,[2,3])})}};Ax.className="GlobalMaxPooling2D";de.registerClass(Ax);var bk=class extends ut{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let s=t.layer,r=Rr(s,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},xx=class extends bk{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=At(e),e.length<3)throw new H(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=At(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return Z(()=>(e=Xe(e),pk((a,o)=>[Xe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};xx.className="TimeDistributed";de.registerClass(xx);function SG(e){tu(CV,"BidirectionalMergeMode",e)}var CG="concat",bx=class extends bk{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Rr(n),t.goBackwards=t.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Rr(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?CG:e.mergeMode,SG(this.mergeMode),e.weights)throw new qe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,s,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,s=[n]):this.mergeMode==null?s=[n,n.slice()]:s=[n],this.returnState?this.mergeMode==null?s.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):hs(s)}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=dk(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&s==null)return super.apply(e,t);let a=[],o=[];if(n!=null){let l=n.length;if(l%2>0)throw new H("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let u=n.map(c=>new sn({shape:c.shape}));this.forwardLayer.stateSpec=u.slice(0,l/2),this.backwardLayer.stateSpec=u.slice(l/2),o.push(...u)}if(s!=null)throw new qe("Support for constants in Bidirectional layers is not implemented yet.");let i=a[0]instanceof Nr;for(let l of a)if(l instanceof Nr!==i)throw new H("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){let l=[e].concat(a),u=this.inputSpec.concat(o),c=this.inputSpec;this.inputSpec=u;let p=super.apply(l,t);return this.inputSpec=c,p}else return super.apply(e,t)}call(e,t){return Z(()=>{let n=t.initialState,s,r;if(n==null)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let i=n.slice(0,n.length/2),l=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Xs(r,1));let o;return this.mergeMode==="concat"?o=t5([s,r]):this.mergeMode==="sum"?o=ue(s,r):this.mergeMode==="ave"?o=z(.5,ue(s,r)):this.mergeMode==="mul"?o=z(s,r):this.mergeMode==null&&(o=[s,r]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){ji(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),ji(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Rr(t.layer);if(delete t.layer,t.numConstants!=null)throw new qe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=t;return s.layer=n,new e(s)}};bx.className="Bidirectional";de.registerClass(bx);function TG(e){return new Qc(e)}function NG(e){return new C5(e)}function EG(e){return new k5(e)}function RG(e){return new I5(e)}function _G(e){return new S5(e)}function DG(e){return new N5(e)}function $G(e){return new T5(e)}function PG(e){return new h2(e)}function FG(e){return new Rh(e)}function OG(e){return new _5(e)}function MG(e){return new _h(e)}function zG(e){return new D5(e)}function LG(e){return new $5(e)}function BG(e){return new P5(e)}function WG(e){return new F5(e)}function VG(e){return new O5(e)}function UG(e){return new G5(e)}function GG(e){return new V5(e)}function HG(e){return new A2(e)}function jG(e){return new W5(e)}function qG(e){return new U5(e)}function XG(e){return new H5(e)}function KG(e){return new j5(e)}function ZG(e){return new q5(e)}function YG(e){return new K5(e)}function JG(e){return new Z5(e)}function QG(e){return new J5(e)}function eH(e){return new tx(e)}function tH(e){return new Q5(e)}function nH(e){return new ex(e)}function sH(e){return new Y5(e)}function rH(e){return new nx(e)}function aH(e){return new ox(e)}function oH(e){return new ix(e)}function iH(e){return new lx(e)}function vx(e){return new cx(e)}function lH(e){return vx(e)}function uH(e){return vx(e)}function wx(e){return new px(e)}function cH(e){return wx(e)}function dH(e){return wx(e)}function kx(e){return new fx(e)}function pH(e){return kx(e)}function hH(e){return kx(e)}function fH(e){return new mx(e)}function mH(e){return new yx(e)}function vk(e){return new gx(e)}function wk(e){return new Ax(e)}function kk(e){return new ux(e)}function Ik(e){return new dx(e)}function gH(e){return new hx(e)}function yH(e){return new z5(e)}function AH(e){return new m2(e)}function xH(e){return new L5(e)}function bH(e){return new $h(e)}function vH(e){return new M5(e)}function wH(e){return new f2(e)}function kH(e){return new B5(e)}function IH(e){return new y2(e)}function SH(e){return new ea(e)}function CH(e){return new g2(e)}function TH(e){return new bx(e)}function NH(e){return new xx(e)}var EH=vk,RH=wk,_H=kk,DH=Ik;function $H(e){return new sx(e)}function PH(e){return new rx(e)}function FH(e){return new ax(e)}function OH(e){return new X5(e)}var Sk={};Ge(Sk,{MAPE:()=>qH,MSE:()=>ZH,binaryAccuracy:()=>MH,binaryCrossentropy:()=>zH,categoricalAccuracy:()=>BH,categoricalCrossentropy:()=>WH,cosineProximity:()=>GH,mape:()=>XH,meanAbsoluteError:()=>HH,meanAbsolutePercentageError:()=>jH,meanSquaredError:()=>KH,mse:()=>YH,precision:()=>VH,recall:()=>UH,sparseCategoricalAccuracy:()=>LH});function MH(e,t){return g5(e,t)}function zH(e,t){return L8(e,t)}function LH(e,t){return B8(e,t)}function BH(e,t){return y5(e,t)}function WH(e,t){return A5(e,t)}function VH(e,t){return z8(e,t)}function UH(e,t){return RU(e,t)}function GH(e,t){return m5(e,t)}function HH(e,t){return d2(e,t)}function jH(e,t){return ed(e,t)}function qH(e,t){return ed(e,t)}function XH(e,t){return ed(e,t)}function KH(e,t){return nu(e,t)}function ZH(e,t){return nu(e,t)}function YH(e,t){return nu(e,t)}var Ck={};Ge(Ck,{modelFromJSON:()=>oG});var Tk={};Ge(Tk,{l1:()=>QH,l1l2:()=>JH,l2:()=>ej});function JH(e){return new Nh(e)}function QH(e){return fG(e)}function ej(e){return mG(e)}var Nk=class extends rc{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof fa))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function qf(e,t){return e<t}function n7(e,t){return e>t}var Ek=class extends Nk{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new qe("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=qf:this.mode==="max"?this.monitorFunc=n7:this.monitor.indexOf("acc")!==-1?this.monitorFunc=n7:this.monitorFunc=qf,this.monitorFunc===qf&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===qf?1/0:-1/0}async onEpochEnd(e,t){await Ua(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function tj(e){return new Ek(e)}var nj={earlyStopping:tj},sj=j();sj.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var nr;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"})(nr||(nr={}));var s7;(function(e){let t;(function(n){n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(s7||(s7={}));var Ix={};function rj(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Ix[e]=n}function Rk(e){return Ix[e]}function aj(e){delete Ix[e]}function S(e,t,n,s,r){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let i=a.inputIndexStart,l=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?i+1:a.inputIndexEnd;if(a.type==="tensor")return ts(t.inputNames[a.inputIndexStart],n,s,r);if(a.type==="tensors")return t.inputNames.slice(i,l).map(d=>ts(d,n,s,r));let u=ts(t.inputNames.slice(i)[0],n,s,r),c=u.dataSync();return a.type==="number"?c[0]:v.toNestedArray(u.shape,c)}let o=t.attrParams[e];return o&&o.value}function ts(e,t,n,s){let[r,a]=Cs(e);if(s!=null){let i=s.getHashTableHandleByName(r);if(i!=null)return i}let o=n.currentContextIds.find(i=>!!t[Rm(r,i)]);return o!==void 0?t[Rm(r,o)][a]:void 0}function oj(e,t,n){return t[Rm(e,n.currentContextId)]}function Hr(e,t){let[n,s,r]=Cs(e);return[Rm(n,t&&t.currentContextId),s,r]}function Rm(e,t){return t?`${e}-${t}`:e}function Cs(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],s=t.length===3?t[1]:void 0,r=Number(t[t.length-1]);return[n,r,s]}function sm(e,t,n){let s=S("pad",e,t,n);if(s==="explicit"){s=S("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[a*2],r[a][1]=s[a*2+1];return r}return s}function da(e){return e.kept?e:On(e)}var _k={};Ge(_k,{json:()=>ij});var ij=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Dk={};Ge(Dk,{json:()=>lj});var lj=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],$k={};Ge($k,{json:()=>uj});var uj=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Pk={};Ge(Pk,{json:()=>cj});var cj=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Fk={};Ge(Fk,{json:()=>dj});var dj=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Ok={};Ge(Ok,{json:()=>pj});var pj=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Mk={};Ge(Mk,{json:()=>hj});var hj=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],zk={};Ge(zk,{json:()=>fj});var fj=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Lk={};Ge(Lk,{json:()=>mj});var mj=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],Bk={};Ge(Bk,{json:()=>gj});var gj=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Wk={};Ge(Wk,{json:()=>yj});var yj=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Vk={};Ge(Vk,{json:()=>Aj});var Aj=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],Uk={};Ge(Uk,{json:()=>xj});var xj=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],Gk={};Ge(Gk,{json:()=>bj});var bj=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Hk={};Ge(Hk,{json:()=>vj});var vj=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],jk={};Ge(jk,{json:()=>wj});var wj=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],qk={};Ge(qk,{json:()=>kj});var kj=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Xk={};Ge(Xk,{json:()=>Ij});var Ij=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Kk={};Ge(Kk,{json:()=>Sj});var Sj=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],r7=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[_k,Dk,$k,Pk,Fk,Ok,Mk,zk,Lk,Bk,Wk,Vk,Uk,Gk,Hk,jk,qk,Xk,Kk],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,s)=>(n[s.tfOpName]=s,n),{})}transformGraph(e,t={}){let n=e.node,s=[],r=[],a=[],o=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?s.push(f[m.name]):m.op==="Const"?r.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),i=[],l=[],u={},c={};t!=null&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));let p=Object.keys(o);p.forEach(f=>{let m=o[f];m.inputNames.forEach((g,y)=>{let[x,,A]=Hr(g),b=o[x];if(b.outputs!=null){let w=b.outputs.indexOf(A);if(w!==-1){let I=`${x}:${w}`;m.inputNames[y]=I}}m.inputs.push(b),b.children.push(m)})}),Object.keys(c).length===0?p.forEach(f=>{let m=o[f];m.children.length===0&&l.push(m)}):Object.keys(c).forEach(f=>{let[m]=Hr(f),g=o[m];g!=null&&(g.signatureKey=c[f],l.push(g))}),Object.keys(u).length>0?Object.keys(u).forEach(f=>{let[m]=Hr(f),g=o[m];g&&(g.signatureKey=u[f],i.push(g))}):i=s;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let h={nodes:o,inputs:i,outputs:l,weights:r,placeholders:s,signature:t,functions:d};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=Rk(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((s,r)=>(s[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},s),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((s,r)=>{let a=r.type,o;switch(r.type){case"string":o=j3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=j3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":o=Q3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Q3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":o=X3(e.attr,r.tfName,r.defaultValue||0),o===void 0&&!!r.tfDeprecatedName&&(o=X3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":o=J3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=J3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":o=q3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=q3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":o=ty(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=ty(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":o=Y3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Y3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":o=ey(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=ey(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":o=K3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=K3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":o=Z3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Z3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":o=a7(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=a7(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return s[r.name]={value:o,type:a},s},{})),n}mapFunction(e){let t=e.nodeDef,n=[],s=[],r={};t!=null&&(r=t.reduce((c,p)=>(c[p.name]=this.mapNode(p),p.op==="Const"&&s.push(c[p.name]),c),{}));let a=[],o=[];e.signature.inputArg.forEach(c=>{let[p]=Hr(c.name),d={name:p,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Sx(c.type),type:"dtype"}},children:[]};d.signatureKey=c.name,a.push(d),r[p]=d}),Object.keys(r).forEach(c=>{let p=r[c];p.inputNames.forEach((d,h)=>{let[f,,m]=Hr(d),g=r[f];if(g.outputs!=null){let y=g.outputs.indexOf(m);if(y!==-1){let x=`${f}:${y}`;p.inputNames[h]=x}}p.inputs.push(g),g.children.push(p)})});let l=e.ret;e.signature.outputArg.forEach(c=>{let[p,d]=Hr(l[c.name]),h=r[p];h!=null&&(h.defaultOutput=d,o.push(h))});let u=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:o,weights:s,placeholders:n,signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function Cj(e){let t=j().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function Zk(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):Cj(e);return t?n:n.toLowerCase()}function j3(e,t,n,s=!1){let r=e[t];return r!=null?Zk(r.s,s):n}function q3(e,t,n){let s=e[t];return s?s.b:n}function X3(e,t,n){let s=e[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function Sx(e){switch(typeof e=="string"&&(e=nr[e]),e){case nr.DT_FLOAT:case nr.DT_HALF:return"float32";case nr.DT_INT32:case nr.DT_INT64:case nr.DT_INT8:case nr.DT_UINT8:return"int32";case nr.DT_BOOL:return"bool";case nr.DT_DOUBLE:return"float32";case nr.DT_STRING:return"string";default:return null}}function a7(e,t,n){let s=e[t];return s&&s.func?s.func.name:n}function K3(e,t,n){let s=e[t];return s&&s.type?Sx(s.type):n}function Z3(e,t,n){let s=e[t];return s&&s.list&&s.list.type?s.list.type.map(r=>Sx(r)):n}function Yk(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function Y3(e,t,n){let s=e[t];return s&&s.shape?Yk(s.shape):n}function J3(e,t,n){let s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function Q3(e,t,n,s=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(a=>Zk(a,s)):n}function ey(e,t,n){let s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>Yk(r)):n}function ty(e,t,n){let s=e[t];return s&&s.list&&s.list.b?s.list.b:n}var Tj=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,r)=>(s[r]=this.getAttr(r),s),{}))}getInput(e){return ts(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return ts(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return X3(this.node.rawAttrs,e,t);if(n.s!=null)return j3(this.node.rawAttrs,e,t);if(n.b!=null)return q3(this.node.rawAttrs,e,t);if(n.shape!=null)return Y3(this.node.rawAttrs,e,t);if(n.type!=null)return K3(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return J3(this.node.rawAttrs,e,t);if(n.list.s!=null)return Q3(this.node.rawAttrs,e,t);if(n.list.shape!=null)return ey(this.node.rawAttrs,e,t);if(n.list.b!=null)return ty(this.node.rawAttrs,e,t);if(n.list.type!=null)return Z3(this.node.rawAttrs,e,t)}return t}},Rn={};Ge(Rn,{OP_SCOPE_SUFFIX:()=>_y,abs:()=>en,acos:()=>Zy,acosh:()=>Yy,add:()=>ue,addN:()=>y0,all:()=>A0,any:()=>Tp,argMax:()=>Rs,argMin:()=>Jy,asin:()=>Qy,asinh:()=>eA,atan:()=>tA,atan2:()=>nA,atanh:()=>sA,avgPool:()=>uh,avgPool3d:()=>aA,basicLSTMCell:()=>lw,batchNorm:()=>Uc,batchNorm2d:()=>oA,batchNorm3d:()=>iA,batchNorm4d:()=>lA,batchToSpaceND:()=>ch,bincount:()=>uA,booleanMaskAsync:()=>Uw,broadcastArgs:()=>uw,broadcastTo:()=>ju,buffer:()=>We,cast:()=>ye,ceil:()=>cA,clipByValue:()=>ms,clone:()=>On,complex:()=>ma,concat:()=>St,concat1d:()=>dA,concat2d:()=>Zl,concat3d:()=>pA,concat4d:()=>hA,conv1d:()=>x0,conv2d:()=>ga,conv2dTranspose:()=>b0,conv3d:()=>mA,conv3dTranspose:()=>gA,cos:()=>dh,cosh:()=>v0,cosineWindow:()=>U0,cumprod:()=>Np,cumsum:()=>w0,denseBincount:()=>dw,depthToSpace:()=>yA,depthwiseConv2d:()=>Gc,diag:()=>pw,dilation2d:()=>AA,div:()=>fe,divNoNan:()=>xA,dot:()=>bA,dropout:()=>jA,einsum:()=>hw,elu:()=>Hc,enclosingPowerOfTwo:()=>qA,equal:()=>_s,erf:()=>vA,euclideanNorm:()=>IA,exp:()=>Ds,expandDims:()=>Lt,expm1:()=>SA,eye:()=>k0,fft:()=>bh,fill:()=>qc,floor:()=>Xc,floorDiv:()=>Vc,fused:()=>nc,gather:()=>Kc,gatherND:()=>qw,greater:()=>As,greaterEqual:()=>ui,ifft:()=>tc,imag:()=>ih,image:()=>Se,inTopKAsync:()=>Xw,irfft:()=>L0,isFinite:()=>CA,isInf:()=>TA,isNaN:()=>NA,leakyRelu:()=>ph,less:()=>I0,lessEqual:()=>ci,linalg:()=>ZA,linspace:()=>Aw,localResponseNormalization:()=>EA,log:()=>$s,log1p:()=>hh,logSigmoid:()=>RA,logSoftmax:()=>C0,logSumExp:()=>T0,logicalAnd:()=>ir,logicalNot:()=>fh,logicalOr:()=>N0,logicalXor:()=>_A,losses:()=>o8,lowerBound:()=>bw,matMul:()=>Qe,max:()=>hn,maxPool:()=>mh,maxPool3d:()=>DA,maxPoolWithArgmax:()=>vw,maximum:()=>Qr,mean:()=>Bt,meshgrid:()=>ww,min:()=>ya,minimum:()=>Zc,mirrorPad:()=>$A,mod:()=>Jl,moments:()=>gh,movingAverage:()=>Gw,mul:()=>z,multiRNNCell:()=>kw,multinomial:()=>Iw,neg:()=>Dt,norm:()=>jc,notEqual:()=>el,oneHot:()=>Ju,ones:()=>Es,onesLike:()=>Ps,op:()=>B,outerProduct:()=>Sw,pad:()=>Zs,pad1d:()=>Cw,pad2d:()=>Tw,pad3d:()=>Nw,pad4d:()=>Ew,pool:()=>PA,pow:()=>Aa,prelu:()=>Ah,print:()=>Fy,prod:()=>FA,rand:()=>Rw,randomGamma:()=>_w,randomNormal:()=>R0,randomStandardNormal:()=>Dw,randomUniform:()=>Yc,range:()=>ec,real:()=>Qu,reciprocal:()=>zA,relu:()=>Fr,relu6:()=>_0,reshape:()=>V,reverse:()=>Xs,reverse1d:()=>$w,reverse2d:()=>Pw,reverse3d:()=>Fw,reverse4d:()=>Ow,rfft:()=>vh,round:()=>D0,rsqrt:()=>$0,scalar:()=>Ce,scatterND:()=>Hw,searchSorted:()=>E0,selu:()=>P0,separableConv2d:()=>F0,setdiff1dAsync:()=>Mw,sigmoid:()=>Cn,sign:()=>LA,signal:()=>a8,sin:()=>O0,sinh:()=>M0,slice:()=>ze,slice1d:()=>xh,slice2d:()=>z0,slice3d:()=>di,slice4d:()=>so,softmax:()=>Ql,softplus:()=>Yl,spaceToBatchND:()=>yh,sparse:()=>i8,sparseToDense:()=>jw,spectral:()=>r8,split:()=>Kt,sqrt:()=>Nn,square:()=>bt,squaredDifference:()=>B0,squeeze:()=>st,stack:()=>an,step:()=>eu,stridedSlice:()=>BA,string:()=>l8,sub:()=>me,sum:()=>ke,tan:()=>WA,tanh:()=>Ji,tensor:()=>ct,tensor1d:()=>Pt,tensor2d:()=>ar,tensor3d:()=>Vy,tensor4d:()=>zw,tensor5d:()=>Lw,tensor6d:()=>Bw,tile:()=>Hs,topk:()=>VA,transpose:()=>et,truncatedNormal:()=>W0,unique:()=>UA,unsortedSegmentSum:()=>V0,unstack:()=>En,upperBound:()=>Ww,variable:()=>GA,where:()=>zn,whereAsync:()=>HA,zeros:()=>Wt,zerosLike:()=>it});var Nj=(e,t,n,s=Rn)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(S("a",e,t,n),S("b",e,t,n))];case"AddN":return[s.addN(S("tensors",e,t,n))];case"FloorMod":case"Mod":return[s.mod(S("a",e,t,n),S("b",e,t,n))];case"Mul":return[s.mul(S("a",e,t,n),S("b",e,t,n))];case"RealDiv":case"Div":return[s.div(S("a",e,t,n),S("b",e,t,n))];case"DivNoNan":return[s.divNoNan(S("a",e,t,n),S("b",e,t,n))];case"FloorDiv":return[s.floorDiv(S("a",e,t,n),S("b",e,t,n))];case"Sub":return[s.sub(S("a",e,t,n),S("b",e,t,n))];case"Minimum":return[s.minimum(S("a",e,t,n),S("b",e,t,n))];case"Maximum":return[s.maximum(S("a",e,t,n),S("b",e,t,n))];case"Pow":return[s.pow(S("a",e,t,n),S("b",e,t,n))];case"SquaredDifference":return[s.squaredDifference(S("a",e,t,n),S("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Ej=(e,t,n,s=Rn)=>{switch(e.op){case"Abs":case"ComplexAbs":return[s.abs(S("x",e,t,n))];case"Acos":return[s.acos(S("x",e,t,n))];case"Acosh":return[s.acosh(S("x",e,t,n))];case"Asin":return[s.asin(S("x",e,t,n))];case"Asinh":return[s.asinh(S("x",e,t,n))];case"Atan":return[s.atan(S("x",e,t,n))];case"Atan2":return[s.atan2(S("x",e,t,n),S("y",e,t,n))];case"Atanh":return[s.atanh(S("x",e,t,n))];case"Ceil":return[s.ceil(S("x",e,t,n))];case"Complex":return[s.complex(S("real",e,t,n),S("imag",e,t,n))];case"Cos":return[s.cos(S("x",e,t,n))];case"Cosh":return[s.cosh(S("x",e,t,n))];case"Elu":return[s.elu(S("x",e,t,n))];case"Erf":return[s.erf(S("x",e,t,n))];case"Exp":return[s.exp(S("x",e,t,n))];case"Expm1":return[s.expm1(S("x",e,t,n))];case"Floor":return[s.floor(S("x",e,t,n))];case"Log":return[s.log(S("x",e,t,n))];case"Log1p":return[s.log1p(S("x",e,t,n))];case"Imag":return[s.imag(S("x",e,t,n))];case"Neg":return[s.neg(S("x",e,t,n))];case"Reciprocal":return[s.reciprocal(S("x",e,t,n))];case"Real":return[s.real(S("x",e,t,n))];case"Relu":return[s.relu(S("x",e,t,n))];case"Round":return[s.round(S("x",e,t,n))];case"Selu":return[s.selu(S("x",e,t,n))];case"Sigmoid":return[s.sigmoid(S("x",e,t,n))];case"Sin":return[s.sin(S("x",e,t,n))];case"Sign":return[s.sign(S("x",e,t,n))];case"Sinh":return[s.sinh(S("x",e,t,n))];case"Softplus":return[s.softplus(S("x",e,t,n))];case"Sqrt":return[s.sqrt(S("x",e,t,n))];case"Square":return[s.square(S("x",e,t,n))];case"Tanh":return[s.tanh(S("x",e,t,n))];case"Tan":return[s.tan(S("x",e,t,n))];case"ClipByValue":return[s.clipByValue(S("x",e,t,n),S("clipValueMin",e,t,n),S("clipValueMax",e,t,n))];case"Relu6":return[s.relu6(S("x",e,t,n))];case"Rsqrt":return[s.rsqrt(ts(e.inputNames[0],t,n))];case"Prod":return[s.prod(S("x",e,t,n),S("axes",e,t,n))];case"LeakyRelu":return[s.leakyRelu(S("x",e,t,n),S("alpha",e,t,n))];case"Prelu":return[s.prelu(S("x",e,t,n),S("alpha",e,t,n))];case"IsNan":return[s.isNaN(ts(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function rr(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){v.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let s=0;s<e.length;s++){let r=e[s],a=t[s];v.assert(r<0||a<0||r===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function o7(e){return!(typeof e=="number"||e.some(t=>t<0))}function np(e,t,n){let s=ny(e,n),r=!o7(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(a=>{s=ny(a.shape,s)}),!o7(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function ny(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let s=0;s<e.length;++s){let r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}var Rj=class{constructor(e,t,n,s,r,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ce(0),An(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),rr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,An(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,s)=>this.write(n,t[s]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return ct([],[0].concat(this.elementShape));let n=this.readMany(e);return rr(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),an(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return ct([],[0].concat(this.elementShape));let t=[];for(let s=0;s<this.size();s++)t.push(s);let n=this.readMany(t);return rr(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),St(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,En(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,s=e.map(i=>(n+=i,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,a=[];Z(()=>{t=V(t,[1,n,r]);for(let i=0;i<e.length;++i){let l=i===0?0:s[i-1],u=[0,l,0],c=[1,e[i],r];a[i]=V(ze(t,u,c),this.elementShape)}return a});let o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}},oc=class{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);rr(t,r.shape,"TensorList shape mismatch: "),An(r)}),this.idTensor=Ce(0),this.maxNumElements=s,An(this.idTensor)}get id(){return this.idTensor.id}copy(){return new oc([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);rr(e,this.elementShape,"TensorList shape mismatch: ");let s=np(this.elementShape,this.tensors,e);return Z(()=>{let r=this.tensors.map(a=>V(a,s));return an(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=np(this.elementShape,this.tensors,e),s=this.tensors.pop();return rr(s.shape,e,"TensorList shape mismatch: "),V(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(rr(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");An(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new oc([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);rr(this.tensors[e].shape,t,"TensorList shape mismatch: ");let s=np(this.elementShape,this.tensors,t);return V(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);rr(this.elementShape,t.shape,"TensorList shape mismatch: "),An(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);rr(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let s=np(this.elementShape,this.tensors,n);return e.length===0?ct([],[0].concat(s)):Z(()=>{let r=e.map(a=>V(this.tensors[a],s));return an(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);rr(this.elementShape,t,"TensorList shape mismatch: ");let n=np(this.elementShape,this.tensors,t);return this.size()===0?ct([],[0].concat(n)):Z(()=>{let s=this.tensors.map(r=>V(r,n));return St(s,0)})}};function _j(e,t,n){let s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);rr(r,t,"TensorList shape mismatch: ");let a=En(e);return new oc(a,t,s)}function Dj(e,t,n,s){return new oc([],e,t,s)}function $j(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);let a=new oc([],n,e.dtype,s),o=En(e,0);return t.forEach((i,l)=>{a.setItem(i,o[l])}),a}function Pj(e,t,n){let s=0,r=t.map(c=>(s+=c,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),o=ny(a,n),i=s===0?0:e.size/s,l=Z(()=>{let c=[];e=V(e,[1,s,i]);for(let p=0;p<t.length;++p){let d=p===0?0:r[p-1],h=[0,d,0],f=[1,t[p],i];c[p]=V(ze(e,h,f),o)}return e.dispose(),c}),u=new oc([],n,e.dtype,t.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}var Fj=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let s=S("thenBranch",e,t,n),r=S("elseBranch",e,t,n),a=S("cond",e,t,n),o=S("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let s=S("body",e,t,n),r=S("cond",e,t,n),a=S("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map(c=>c.id),l=await o[0].data();o.forEach(c=>{!c.kept&&i.indexOf(c.id)===-1&&c.dispose()});let u=a;for(;l[0];){let c=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let p=u.map(h=>h.id);c.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()});let d=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await d[0].data(),d.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()})}return u}case"LoopCond":{let s=S("pred",e,t,n);return[da(s)]}case"Switch":{let s=S("pred",e,t,n),r=S("data",e,t,n);return r.kept||(r=da(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let s=e.inputNames.find(r=>ts(r,t,n)!==void 0);if(s){let r=ts(s,t,n);return[da(r)]}return}case"Enter":{let s=S("frameName",e,t,n),r=S("tensor",e,t,n);return n.enterFrame(s),[da(r)]}case"Exit":{let s=S("tensor",e,t,n);return n.exitFrame(),[da(s)]}case"NextIteration":{let s=S("tensor",e,t,n);return n.nextIteration(),[da(s)]}case"TensorArrayV3":{let s=S("size",e,t,n),r=S("dtype",e,t,n),a=S("elementShape",e,t,n),o=S("dynamicSize",e,t,n),i=S("clearAfterRead",e,t,n),l=S("identicalElementShapes",e,t,n),u=S("name",e,t,n),c=new Rj(u,r,s,a,l,o,i);return n.addTensorArray(c),[c.idTensor,Ce(1)]}case"TensorArrayWriteV3":{let s=S("tensorArrayId",e,t,n),r=S("index",e,t,n),a=S("tensor",e,t,n),o=n.getTensorArray(s.id);return o.write(r,a),[o.idTensor]}case"TensorArrayReadV3":{let s=S("tensorArrayId",e,t,n),r=S("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{let s=S("tensorArrayId",e,t,n),r=S("indices",e,t,n),a=S("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{let s=S("tensorArrayId",e,t,n),r=S("indices",e,t,n),a=S("tensor",e,t,n),o=n.getTensorArray(s.id);return o.scatter(r,a),[o.idTensor]}case"TensorArrayConcatV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=S("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{let s=S("tensorArrayId",e,t,n),r=S("tensor",e,t,n),a=S("lengths",e,t,n),o=n.getTensorArray(s.id);return o.split(a,r),[o.idTensor]}case"TensorArraySizeV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[Ce(r.size(),"int32")]}case"TensorArrayCloseV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let s=S("tensorListId",e,t,n),r=S("index",e,t,n),a=S("tensor",e,t,n),o=n.getTensorList(s.id);return o.setItem(r,a),[o.idTensor]}case"TensorListGetItem":{let s=S("tensorListId",e,t,n),r=S("index",e,t,n),a=S("elementShape",e,t,n),o=S("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{let s=S("indices",e,t,n),r=S("tensor",e,t,n),a=S("elementShape",e,t,n),o=S("numElements",e,t,n),i=$j(r,s,a,o);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let s=S("elementShape",e,t,n),r=S("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let o=S(a,e,t,n),i=e.op==="TensorListReserve"?-1:o,l=Dj(s,r,o,i);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{let s=S("tensorListId",e,t,n),r=S("indices",e,t,n),a=S("elementShape",e,t,n),o=S("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,o,a)]}case"TensorListStack":{let s=S("tensorListId",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n),o=S("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,o)]}case"TensorListFromTensor":{let s=S("tensor",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n),o=_j(s,r,a);return n.addTensorList(o),[o.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let s=S("tensorListId",e,t,n),r=n.getTensorList(s.id),a=S("dtype",e,t,n),o=S("elementShape",e,t,n);return[r.concat(a,o)]}case"TensorListPushBack":{let s=S("tensorListId",e,t,n),r=S("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{let s=S("tensorListId",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{let s=S("tensor",e,t,n),r=S("elementShape",e,t,n),a=S("lengths",e,t,n),o=Pj(s,a,r);return n.addTensorList(o),[o.idTensor]}case"TensorListLength":{let s=S("tensorListId",e,t,n),r=n.getTensorList(s.id);return[Ce(r.size(),"int32")]}case"TensorListResize":{let s=S("tensorListId",e,t,n),r=S("size",e,t,n),o=n.getTensorList(s.id).resize(r);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function i7(e,t,n){let[s,r]=S("fusedOps",e,t,n),a=s==="biasadd",o=!a,i=r==="prelu",l=s==="fusedbatchnorm",u=S("numArgs",e,t,n);if(a){if(i&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let c=S("strides",e,t,n),p=sm(e,t,n),d=S("dataFormat",e,t,n).toUpperCase(),h=S("dilations",e,t,n),[f,m]=S("args",e,t,n);o&&(m=f,f=void 0);let g=S("leakyreluAlpha",e,t,n);return{stride:c,pad:p,dataFormat:d,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}var Oj=(e,t,n,s=Rn)=>{switch(e.op){case"Conv1D":{let r=S("stride",e,t,n),a=S("pad",e,t,n),o=S("dataFormat",e,t,n).toUpperCase(),i=S("dilation",e,t,n);return[s.conv1d(S("x",e,t,n),S("filter",e,t,n),r,a,o,i)]}case"Conv2D":{let r=S("strides",e,t,n),a=sm(e,t,n),o=S("dataFormat",e,t,n).toUpperCase(),i=S("dilations",e,t,n);return[s.conv2d(S("x",e,t,n),S("filter",e,t,n),[r[1],r[2]],a,o,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:r,pad:a,dataFormat:o,dilations:i,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=i7(e,t,n);return[s.fused.conv2d({x:S("x",e,t,n),filter:S("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:a,dataFormat:o,dilations:i,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=i7(e,t,n);return[s.fused.depthwiseConv2d({x:S("x",e,t,n),filter:S("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=S("outputShape",e,t,n),a=S("strides",e,t,n),o=sm(e,t,n);return[s.conv2dTranspose(S("x",e,t,n),S("filter",e,t,n),r,[a[1],a[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=S("strides",e,t,n),a=sm(e,t,n),o=S("dilations",e,t,n),i=S("dataFormat",e,t,n).toUpperCase();return[s.depthwiseConv2d(S("input",e,t,n),S("filter",e,t,n),[r[1],r[2]],a,i,[o[1],o[2]])]}case"Conv3D":{let r=S("strides",e,t,n),a=S("pad",e,t,n),o=S("dataFormat",e,t,n).toUpperCase(),i=S("dilations",e,t,n);return[s.conv3d(S("x",e,t,n),S("filter",e,t,n),[r[1],r[2],r[3]],a,o,[i[1],i[2],i[3]])]}case"AvgPool":{let r=S("strides",e,t,n),a=S("pad",e,t,n),o=S("kernelSize",e,t,n);return[s.avgPool(S("x",e,t,n),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPool":{let r=S("strides",e,t,n),a=S("pad",e,t,n),o=S("kernelSize",e,t,n);return[s.maxPool(S("x",e,t,n),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{let r=S("strides",e,t,n),a=S("pad",e,t,n),o=S("kernelSize",e,t,n),i=S("includeBatchInIndex",e,t,n),{result:l,indexes:u}=s.maxPoolWithArgmax(S("x",e,t,n),[o[1],o[2]],[r[1],r[2]],a,i);return[l,u]}case"AvgPool3D":{let r=S("strides",e,t,n),a=S("pad",e,t,n),o=S("kernelSize",e,t,n);return[s.avgPool3d(S("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{let r=S("strides",e,t,n),a=S("pad",e,t,n),o=S("kernelSize",e,t,n);return[s.maxPool3d(S("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{let r=S("strides",e,t,n),a=S("pad",e,t,n),o=S("dilations",e,t,n),i=r[1],l=r[2],u=o[1],c=o[2];return[s.dilation2d(S("x",e,t,n),S("filter",e,t,n),[i,l],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Mj=(e,t,n,s=Rn)=>{switch(e.op){case"Fill":{let r=S("shape",e,t,n),a=S("dtype",e,t,n),o=S("value",e,t,n);return[s.fill(r,o,a)]}case"LinSpace":{let r=S("start",e,t,n),a=S("stop",e,t,n),o=S("num",e,t,n);return[s.linspace(r,a,o)]}case"Multinomial":{let r=S("logits",e,t,n),a=S("numSamples",e,t,n),o=S("seed",e,t,n);return[s.multinomial(r,a,o)]}case"OneHot":{let r=S("indices",e,t,n),a=S("depth",e,t,n),o=S("onValue",e,t,n),i=S("offValue",e,t,n);return[s.oneHot(r,a,o,i)]}case"Ones":return[s.ones(S("shape",e,t,n),S("dtype",e,t,n))];case"OnesLike":return[s.onesLike(S("x",e,t,n))];case"RandomStandardNormal":return[s.randomStandardNormal(S("shape",e,t,n),S("dtype",e,t,n),S("seed",e,t,n))];case"RandomUniform":return[s.randomUniform(S("shape",e,t,n),S("minval",e,t,n),S("maxval",e,t,n),S("dtype",e,t,n))];case"Range":{let r=S("start",e,t,n),a=S("stop",e,t,n),o=S("step",e,t,n);return[s.range(r,a,o,S("dtype",e,t,n))]}case"TruncatedNormal":{let r=S("shape",e,t,n),a=S("mean",e,t,n),o=S("stdDev",e,t,n),i=S("seed",e,t,n);return[s.truncatedNormal(r,a,o,S("dtype",e,t,n),i)]}case"Zeros":return[s.zeros(S("shape",e,t,n),S("dtype",e,t,n))];case"ZerosLike":return[s.zerosLike(S("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function g3(e,t,n){let s=S("boxes",e,t,n),r=S("scores",e,t,n),a=S("maxOutputSize",e,t,n),o=S("iouThreshold",e,t,n),i=S("scoreThreshold",e,t,n),l=S("softNmsSigma",e,t,n);return{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}}var zj=async(e,t,n,s,r=Rn)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:a,scores:o,maxOutputSize:i,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=g3(e,t,n),p=await r.image.nonMaxSuppressionWithScoreAsync(a,o,i,l,u,c);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:a,scores:o,maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=g3(e,t,n),c=S("padToMaxOutputSize",e,t,n),p=await r.image.nonMaxSuppressionPaddedAsync(a,o,i,l,u,c);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:a,scores:o,maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=g3(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,o,i,l,u)]}case"Where":{let a=r.cast(S("condition",e,t,n),"bool"),o=[await r.whereAsync(a)];return a.dispose(),o}case"ListDiff":return r.setdiff1dAsync(S("x",e,t,n),S("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},Lj=(e,t,n,s=Rn)=>{switch(e.op){case"LowerBound":{let r=S("sortedSequence",e,t,n),a=S("values",e,t,n);return[s.lowerBound(r,a)]}case"TopKV2":{let r=S("x",e,t,n),a=S("k",e,t,n),o=S("sorted",e,t,n),i=s.topk(r,a,o);return[i.values,i.indices]}case"UpperBound":{let r=S("sortedSequence",e,t,n),a=S("values",e,t,n);return[s.upperBound(r,a)]}case"Unique":{let r=S("x",e,t,n),a=s.unique(r);return[a.values,a.indices]}case"UniqueV2":{let r=S("x",e,t,n),a=S("axis",e,t,n),o=s.unique(r,a);return[o.values,o.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Bj=(e,t,n,s=Rn)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=S("default",e,t,n);return[ts(e.name,t,n)||r];case"Placeholder":return[ts(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=S("x",e,t,n);return[da(c)]}case"IdentityN":return S("x",e,t,n).map(c=>da(c));case"Snapshot":let a=S("x",e,t,n);return[da(a)];case"Shape":return[s.tensor1d(S("x",e,t,n).shape,"int32")];case"ShapeN":return S("x",e,t,n).map(c=>s.tensor1d(c.shape));case"Size":return[s.scalar(S("x",e,t,n).size,"int32")];case"Rank":return[s.scalar(S("x",e,t,n).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":let o=S("x",e,t,n),i=S("data",e,t,n),l=S("message",e,t,n),u=S("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<i.length;c++)console.log(Array.prototype.slice.call(i[c].dataSync()).slice(0,u));return[o];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Wj=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ce(0),this.tensorMap=new Map,An(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ce(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),Z(()=>{let s=En(t),r=n.length,a=s.length;v.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let o=0;o<r;o++){let i=n[o],l=s[o];An(l),this.tensorMap.set(i,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return Z(()=>{let s=[];for(let r=0;r<n.length;r++){let a=n[r],o=this.findWithDefault(a,t);s.push(o)}return an(s)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},Vj=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=S("keyDType",e,t,n),a=S("valueDType",e,t,n),o=new Wj(r,a);return s.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=S("tableHandle",e,t,n,s),a=S("keys",e,t,n),o=S("values",e,t,n);return[await s.getHashTableById(r.id).import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{let r=S("tableHandle",e,t,n,s),a=S("keys",e,t,n),o=S("defaultValue",e,t,n);return[await s.getHashTableById(r.id).find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=S("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Uj=(e,t,n,s=Rn)=>{switch(e.op){case"ResizeBilinear":{let r=S("images",e,t,n),a=S("size",e,t,n),o=S("alignCorners",e,t,n),i=S("halfPixelCenters",e,t,n);return[s.image.resizeBilinear(r,[a[0],a[1]],o,i)]}case"ResizeNearestNeighbor":{let r=S("images",e,t,n),a=S("size",e,t,n),o=S("alignCorners",e,t,n),i=S("halfPixelCenters",e,t,n);return[s.image.resizeNearestNeighbor(r,[a[0],a[1]],o,i)]}case"CropAndResize":{let r=S("image",e,t,n),a=S("boxes",e,t,n),o=S("boxInd",e,t,n),i=S("cropSize",e,t,n),l=S("method",e,t,n),u=S("extrapolationValue",e,t,n);return[s.image.cropAndResize(r,a,o,i,l,u)]}case"ImageProjectiveTransformV3":{let r=S("images",e,t,n),a=S("transforms",e,t,n),o=S("outputShape",e,t,n),i=S("fillValue",e,t,n),l=S("interpolation",e,t,n),u=S("fillMode",e,t,n);return[s.image.transform(r,a,l.toLowerCase(),u.toLowerCase(),i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Gj=(e,t,n,s=Rn)=>{switch(e.op){case"Equal":return[s.equal(S("a",e,t,n),S("b",e,t,n))];case"NotEqual":return[s.notEqual(S("a",e,t,n),S("b",e,t,n))];case"Greater":return[s.greater(S("a",e,t,n),S("b",e,t,n))];case"GreaterEqual":return[s.greaterEqual(S("a",e,t,n),S("b",e,t,n))];case"Less":return[s.less(S("a",e,t,n),S("b",e,t,n))];case"LessEqual":return[s.lessEqual(S("a",e,t,n),S("b",e,t,n))];case"LogicalAnd":return[s.logicalAnd(S("a",e,t,n),S("b",e,t,n))];case"LogicalNot":return[s.logicalNot(S("a",e,t,n))];case"LogicalOr":return[s.logicalOr(S("a",e,t,n),S("b",e,t,n))];case"Select":case"SelectV2":return[s.where(S("condition",e,t,n),S("a",e,t,n),S("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Hj=(e,t,n,s=Rn)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(S("a",e,t,n),S("b",e,t,n),S("transposeA",e,t,n),S("transposeB",e,t,n))];case"Einsum":return[s.einsum(S("equation",e,t,n),...S("tensors",e,t,n))];case"Transpose":return[s.transpose(S("x",e,t,n),S("perm",e,t,n))];case"_FusedMatMul":let[r,a]=S("fusedOps",e,t,n),o=r==="biasadd",i=a==="prelu",l=S("numArgs",e,t,n),u=S("leakyreluAlpha",e,t,n);if(o){if(i&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,p]=S("args",e,t,n);return[s.fused.matMul({a:S("a",e,t,n),b:S("b",e,t,n),transposeA:S("transposeA",e,t,n),transposeB:S("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:p,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},jj=(e,t,n,s=Rn)=>{switch(e.op){case"EuclideanNorm":return[s.euclideanNorm(S("x",e,t,n),S("axis",e,t,n),S("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(S("x",e,t,n),S("mean",e,t,n),S("variance",e,t,n),S("offset",e,t,n),S("scale",e,t,n),S("epsilon",e,t,n))];case"FusedBatchNormV3":return[s.batchNorm(S("x",e,t,n),S("mean",e,t,n),S("variance",e,t,n),S("offset",e,t,n),S("scale",e,t,n),S("epsilon",e,t,n))];case"LRN":return[s.localResponseNormalization(S("x",e,t,n),S("radius",e,t,n),S("bias",e,t,n),S("alpha",e,t,n),S("beta",e,t,n))];case"Softmax":return[s.softmax(S("x",e,t,n))];case"LogSoftmax":return[s.logSoftmax(S("x",e,t,n))];case"SparseToDense":return[s.sparseToDense(S("sparseIndices",e,t,n),S("outputShape",e,t,n),S("sparseValues",e,t,n),S("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},qj=(e,t,n,s=Rn)=>{switch(e.op){case"Max":{let i=S("axis",e,t,n),l=S("keepDims",e,t,n);return[s.max(S("x",e,t,n),i,l)]}case"Mean":{let i=S("axis",e,t,n),l=S("keepDims",e,t,n);return[s.mean(S("x",e,t,n),i,l)]}case"Min":{let i=S("axis",e,t,n),l=S("keepDims",e,t,n);return[s.min(S("x",e,t,n),i,l)]}case"Sum":{let i=S("axis",e,t,n),l=S("keepDims",e,t,n);return[s.sum(S("x",e,t,n),i,l)]}case"All":{let i=S("axis",e,t,n),l=S("keepDims",e,t,n);return[s.all(S("x",e,t,n),i,l)]}case"Any":{let i=S("axis",e,t,n),l=S("keepDims",e,t,n);return[s.any(S("x",e,t,n),i,l)]}case"ArgMax":{let i=S("axis",e,t,n);return[s.argMax(S("x",e,t,n),i)]}case"ArgMin":{let i=S("axis",e,t,n);return[s.argMin(S("x",e,t,n),i)]}case"Prod":{let i=S("axis",e,t,n),l=S("keepDims",e,t,n);return[s.prod(S("x",e,t,n),i,l)]}case"Cumprod":{let i=S("axis",e,t,n),l=S("exclusive",e,t,n),u=S("reverse",e,t,n);return[s.cumprod(S("x",e,t,n),i,l,u)]}case"Cumsum":{let i=S("axis",e,t,n),l=S("exclusive",e,t,n),u=S("reverse",e,t,n);return[s.cumsum(S("x",e,t,n),i,l,u)]}case"Bincount":let r=S("x",e,t,n),a=S("weights",e,t,n),o=S("size",e,t,n);return[s.bincount(r,a,o)];case"DenseBincount":{let i=S("x",e,t,n),l=S("weights",e,t,n),u=S("size",e,t,n),c=S("binaryOutput",e,t,n);return[s.denseBincount(i,l,u,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Xj=(e,t,n,s=Rn)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=S("n",e,t,n),a=S("axis",e,t,n),o=S("tensors",e,t,n);return o=o.slice(0,r),[s.concat(o,a)]}case"Gather":{let r=S("x",e,t,n),a=S("indices",e,t,n);return[s.gather(r,s.cast(a,"int32"),0)]}case"GatherV2":{let r=S("axis",e,t,n),a=S("batchDims",e,t,n),o=S("x",e,t,n),i=S("indices",e,t,n);return[s.gather(o,s.cast(i,"int32"),r,a)]}case"Reverse":{let r=S("dims",e,t,n),a=[];for(let i=0;i<r.length;i++)r[i]&&a.push(i);let o=S("x",e,t,n);return[s.reverse(o,a)]}case"ReverseV2":{let r=S("axis",e,t,n),a=S("x",e,t,n);return[s.reverse(a,r)]}case"Slice":{let r=S("begin",e,t,n),a=S("size",e,t,n);return[s.slice(S("x",e,t,n),r,a)]}case"StridedSlice":{let r=S("begin",e,t,n),a=S("end",e,t,n),o=S("strides",e,t,n),i=S("beginMask",e,t,n),l=S("endMask",e,t,n),u=S("ellipsisMask",e,t,n),c=S("newAxisMask",e,t,n),p=S("shrinkAxisMask",e,t,n),d=S("x",e,t,n);return[s.stridedSlice(d,r,a,o,i,l,u,c,p)]}case"Pack":return Z(()=>{let r=S("axis",e,t,n),a=S("tensors",e,t,n),o=a[0].shape,i=s.squeeze(a[0]).shape,l=a.map(u=>{let c=v.arraysEqual(u.shape,o);if(!c&&!v.arraysEqual(s.squeeze(u).shape,i))throw new Error("the input tensors shape does not match");return c?u:s.reshape(u,o)});return[s.stack(l,r)]});case"Unpack":{let r=S("axis",e,t,n),a=S("tensor",e,t,n);return s.unstack(a,r)}case"Tile":{let r=S("reps",e,t,n);return[s.tile(S("x",e,t,n),r)]}case"Split":case"SplitV":{let r=S("axis",e,t,n),a=S("numOrSizeSplits",e,t,n),o=S("x",e,t,n);return s.split(o,a,r)}case"ScatterNd":{let r=S("indices",e,t,n),a=S("values",e,t,n),o=S("shape",e,t,n);return[s.scatterND(r,a,o)]}case"GatherNd":{let r=S("x",e,t,n),a=S("indices",e,t,n);return[s.gatherND(r,a)]}case"SparseToDense":{let r=S("sparseIndices",e,t,n),a=S("outputShape",e,t,n),o=S("sparseValues",e,t,n),i=S("defaultValue",e,t,n);return[s.sparseToDense(r,o,a,o.dtype===i.dtype?i:s.cast(i,o.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Kj=(e,t,n,s=Rn)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:a,emptyRowIndicator:o,reverseIndexMap:i}=s.sparse.sparseFillEmptyRows(S("indices",e,t,n),S("values",e,t,n),S("denseShape",e,t,n),S("defaultValue",e,t,n));return[r,a,o,i]}case"SparseReshape":{let{outputIndices:r,outputShape:a}=s.sparse.sparseReshape(S("inputIndices",e,t,n),S("inputShape",e,t,n),S("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(S("data",e,t,n),S("indices",e,t,n),S("segmentIds",e,t,n))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(S("data",e,t,n),S("indices",e,t,n),S("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Zj=(e,t,n,s=Rn)=>{switch(e.op){case"FFT":return[s.fft(S("x",e,t,n))];case"IFFT":return[s.ifft(S("x",e,t,n))];case"RFFT":return[s.rfft(S("x",e,t,n))];case"IRFFT":return[s.irfft(S("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Yj=(e,t,n,s=Rn)=>{switch(e.op){case"StringNGrams":{let{nGrams:r,nGramsSplits:a}=s.string.stringNGrams(S("data",e,t,n),S("dataSplits",e,t,n),S("separator",e,t,n),S("nGramWidths",e,t,n),S("leftPad",e,t,n),S("rightPad",e,t,n),S("padWidth",e,t,n),S("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{let{indices:r,values:a,shape:o}=s.string.stringSplit(S("input",e,t,n),S("delimiter",e,t,n),S("skipEmpty",e,t,n));return[r,a,o]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(S("input",e,t,n),S("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Jj=(e,t,n,s=Rn)=>{switch(e.op){case"Cast":return[s.cast(S("x",e,t,n),S("dtype",e,t,n))];case"ExpandDims":{let r=S("axis",e,t,n);return[s.expandDims(S("x",e,t,n),r)]}case"Squeeze":{let r=S("axis",e,t,n);return[s.squeeze(S("x",e,t,n),r)]}case"Reshape":return[s.reshape(S("x",e,t,n),S("shape",e,t,n))];case"MirrorPad":return[s.mirrorPad(S("x",e,t,n),S("padding",e,t,n),S("mode",e,t,n))];case"PadV2":case"Pad":return[s.pad(S("x",e,t,n),S("padding",e,t,n),S("constantValue",e,t,n))];case"SpaceToBatchND":{let r=S("blockShape",e,t,n),a=S("paddings",e,t,n);return[s.spaceToBatchND(S("x",e,t,n),r,a)]}case"BatchToSpaceND":{let r=S("blockShape",e,t,n),a=S("crops",e,t,n);return[s.batchToSpaceND(S("x",e,t,n),r,a)]}case"DepthToSpace":{let r=S("blockSize",e,t,n),a=S("dataFormat",e,t,n).toUpperCase();return[s.depthToSpace(S("x",e,t,n),r,a)]}case"BroadcastTo":return[s.broadcastTo(S("x",e,t,n),S("shape",e,t,n))];case"BroadcastArgs":return[s.broadcastArgs(S("s0",e,t,n),S("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function l7(e,t,n,s,r=Z){let a=((o,i,l)=>{switch(o.category){case"arithmetic":return r(()=>Nj(o,i,l));case"basic_math":return r(()=>Ej(o,i,l));case"control":return Fj(o,i,l);case"convolution":return r(()=>Oj(o,i,l));case"creation":return r(()=>Mj(o,i,l));case"dynamic":return zj(o,i,l);case"evaluation":return r(()=>Lj(o,i,l));case"image":return r(()=>Uj(o,i,l));case"graph":return r(()=>Bj(o,i,l));case"logical":return r(()=>Gj(o,i,l));case"matrices":return r(()=>Hj(o,i,l));case"normalization":return r(()=>jj(o,i,l));case"reduction":return r(()=>qj(o,i,l));case"slice_join":return r(()=>Xj(o,i,l));case"sparse":return r(()=>Kj(o,i,l));case"spectral":return r(()=>Zj(o,i,l));case"string":return r(()=>Yj(o,i,l));case"transformation":return r(()=>Jj(o,i,l));case"hash_table":return Vj(o,i,l,s);case"custom":let u=Rk(o.op);if(u&&u.customExecutor)return u.customExecutor(new Tj(o,i,l));throw TypeError(`Custom op ${o.op} is not registered.`);default:throw TypeError(`Unknown op '${o.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return v.isPromise(a)?a.then(o=>[].concat(o)):[].concat(a)}var u7=class{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function c7(e,t,n,s){let r=new Set,a=[],o=null,i=null,l=new Set,u=Object.keys(e).map(d=>Cs(d)[0]),c=[];s!=null&&(c=s.map(d=>Cs(d.name)[0]));let p=[...t];for(;p.length>0;){let d=p.pop();if((Jk(d)||sq(d)||rq(d))&&o==null&&(o=d,i=o.children.map(h=>h.name).filter(h=>r.has(h))),r.add(d.name),n[d.name]==null&&u.indexOf(d.name)===-1&&c.indexOf(d.name)===-1){if(d.inputs.length===0){a.push(d.name);continue}d.inputs.forEach(h=>{l.has(h.name)||(l.add(h.name),p.push(h))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:o,syncInputs:i}}function Qj(e,t,n){let{usedNodes:s,inputs:r}=n,a=[],o=Object.keys(r).map(c=>Cs(c)[0]).map(c=>e.nodes[c]),i=e.initNodes;o.forEach(c=>{s.has(c.name)&&a.push(c)}),e.weights.forEach(c=>{s.has(c.name)&&a.push(c)}),i!=null&&i.forEach(c=>{s.has(c.name)&&a.push(c)});let l=new Set,u=[];for(;a.length>0;){let c=a.pop();l.add(c.name),t[c.name]||u.push(c),c.children.forEach(p=>{!l.has(p.name)&&s.has(p.name)&&p.inputs.every(d=>l.has(d.name))&&a.push(p)})}return u}var eq=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],tq=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],nq=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Jk(e){return eq.indexOf(e.op)>=0}function sq(e){return tq.indexOf(e.op)>=0}function rq(e){return nq.indexOf(e.op)>=0}var sy=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new sy(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),s=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){let n=c7(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){let o=t.map(l=>l.name),i=Object.keys(e);throw new Error(`Cannot compute the outputs [${o}] from the provided inputs [${i}]. Missing the following inputs: [${s}]`)}return Qj(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let s=n.map(c=>this.graph.nodes[Cs(c)[0]]),r=t.map(c=>Cs(c)[0]),a=r.map(c=>this.graph.nodes[c]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let o=this.getCompilationKey(s,a),i=this.compiledMap.get(o);i==null&&(i=this.compile(e,a),this.compiledMap.set(o,i));let l={},u={};return Z(()=>{let c=new u7(this.weightMap,l,u,this.functionExecutorMap),p=Object.assign({},this.weightMap);Object.keys(e).forEach(f=>{let[m,g]=Cs(f),y=[];y[g]=e[f],p[m]=y});let d=this.getFrozenTensorIds(p),h={};for(let f=0;f<i.length;f++){let m=i[f];if(!p[m.name]){let g=l7(m,p,c,this._resourceManager);if(v.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);p[m.name]=g,this.checkTensorForDisposal(m.name,m,p,c,d,r,h)}}return this.parent==null&&c.dispose(d),t.map(f=>ts(f,p,c))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,o){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(i=>{i!=null&&(o[i.id]=(o[i.id]||0)+t.children.length)}),t.inputs.forEach(i=>{if(i.category!=="control"){let l=oj(i.name,n,s);l!=null&&l.forEach(u=>{if(u&&!u.kept&&!r.has(u.id)){let c=o[u.id];if(c===1){if(!this.keepTensorForDebug)u.dispose();else{let[p,d]=Hr(t.name,s);this.intermediateTensors[p]?this.intermediateTensors[p][d]=u:(this.intermediateTensors[p]=[],this.intermediateTensors[p][d]=u)}delete o[u.id]}else c!=null&&o[u.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=j().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(u){console.warn(u.message)}this.resetIntermediateTensors();let a=new u7(this.weightMap,s,r,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let o=t.map(u=>ts(u,this.tensorsMap,a)),i=o.map(u=>u.id),l=Object.keys(e).map(u=>e[u].id);return this.keepIds=new Set([...i,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),o}async executeFunctionAsync(e,t,n){let s=e.reduce((r,a,o)=>(r[this.inputs[o].name]=a,r),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){let r=Object.keys(e),a=r.map(x=>this.graph.nodes[Cs(x)[0]]),o=n.map(x=>Cs(x)[0]),i=o.map(x=>this.graph.nodes[x]);i.length===0&&(i=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:p}=c7(e,i,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),h=Object.assign({},this.weightMap);Object.keys(e).forEach(x=>{let[A,b]=Cs(x),w=[];w[b]=e[x],h[A]=w});let f={},m=this.getFrozenTensorIds(h),g={};for(;d.length>0;){let x=this.processStack(a,d,t,h,g,m,o,f,l);await Promise.all(x)}c==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=i.filter(x=>!Jk(x)&&!ts(x.name,h,t)).map(x=>x.name);if(y.length>0){let x="";throw c!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${x}`)}return h}processStack(e,t,n,s,r,a,o,i,l){let u=[];for(;t.length>0;){let c=t.pop();n.currentContext=c.contexts;let p="";if(c.node.op==="Enter"&&S("isConstant",c.node,s,n)&&([p]=Hr(c.node.name,n)),s[c.node.name]==null){let d=l7(c.node,s,n,this._resourceManager);p||([p]=Hr(c.node.name,n));let h=n.currentContext;v.isPromise(d)?u.push(d.then(f=>(s[p]=f,n.currentContext=h,this.checkTensorForDisposal(p,c.node,s,n,a,o,i),this.processChildNodes(c.node,t,n,s,r,l),f))):(s[p]=d,this.checkTensorForDisposal(p,c.node,s,n,a,o,i),this.processChildNodes(c.node,t,n,s,r,l))}else this.processChildNodes(c.node,t,n,s,r,l)}return u}processChildNodes(e,t,n,s,r,a){e.children.forEach(o=>{let[i]=Hr(o.name,n);r[i]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(l=>!!ts(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})):o.inputNames.every(l=>!!ts(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[s]=Cs(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){let a=r.attrParams.shape.value,o=a.length===n.shape.length&&n.shape.every((i,l)=>a[l]===-1||a[l]===i);v.assert(o,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&v.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let s=this._signature.inputs[n];t[s.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[s]=Cs(n);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=Cs(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},aq=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},oq="?tfjs-format=file",iq="model.json",Ph=class{constructor(e,t={},n=Ns){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,t==null&&(this.loadOptions={}),this.resourceManager=new aq}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return v.isPromise(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let r=this.artifacts.userDefinedMetadata;r.signature!=null&&(n=r.signature),r.structuredOutputKeys!=null&&(this.structuredOutputKeys=r.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let s=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new sy(r7.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=r7.Instance.transformGraph(e.modelInitializer);this.initializer=new sy(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=this.io.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){let n=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){let s=n instanceof nt?[n]:n,r={};return s.forEach((a,o)=>r[this.structuredOutputKeys[o]]=a),r}return n}normalizeInputs(e){if(!(e instanceof nt)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,s)=>(t[n]=e[s],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function lq(e,t={},n=Ns){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof e=="string"&&(e=cq(e));let s=new Ph(e,t,n);return await s.load(),s}function uq(e){if(e==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide a url or an IOHandler that loads the model");if(!e.load)throw new Error(`modelUrl IO Handler ${e} has no load function`);let t=new Ph(e);return t.load(),t}function cq(e){return e.endsWith("/")||(e=e+"/"),`${e}${iq}${oq}`}var dq="3.19.0",Qk={};Ge(Qk,{CSVDataset:()=>lI,Dataset:()=>td,FileDataSource:()=>mI,TextLineDataset:()=>iI,URLDataSource:()=>gI,array:()=>Pq,csv:()=>Hq,func:()=>jq,generator:()=>qq,microphone:()=>Kq,version_data:()=>Zq,webcam:()=>Xq,zip:()=>Fq});var pq=co(Um()),hq=co(Um());function fq(e,t){return _m(e,t)}function _m(e,t,n=new Map,s=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(ic(e)){let a=Array.isArray(e)?[]:{};s.add(e);for(let o in e){let i=e[o],l=_m(i,t,n,s);a[o]=l}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function mq(e,t=tI){return eI(e,t)}function eI(e,t,n=new Set){let s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(ic(s)){let a=Array.isArray(s)?[]:{};n.add(s);for(let o in s){let i=e.map(u=>u[o]),l=eI(i,t,n);a[o]=l}return n.delete(s),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function tI(e){return e===null?null:ic(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function nI(e,t){let n=new Map;_m(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(v.isPromise(a)){let o=await a;n.set(r,o)}}return _m(e,t,n)}function ic(e){let t=!1;if(j().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=n6();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof nt)&&!(e instanceof Promise)&&!t)}function gq(e){return e==null||yq(e)||Array.isArray(e)||typeof e=="object"&&e instanceof nt||v.isTypedArray(e)}function yq(e){return e===null||typeof e!="object"&&typeof e!="function"}function Aq(e){return fq(e,xq)}function xq(e){return e instanceof nt?{value:e.clone(),recurse:!1}:ic(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var sI=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},Cx=class extends sI{constructor(){super(Cx.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};Cx.INITIAL_CAPACITY=32;function rI(e){return new wq(e)}function Tx(e){return new kq(e)}function bq(e,t){return new aI(e,t)}function vq(e,t=qa.FAIL){return new Dq(e,t)}var bn=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Rq(this,e)}filter(e){return new Nq(this,e)}map(e){return new Eq(this,e)}mapAsync(e){return new d7(this,e)}serialMapAsync(e){return new d7(this,e).serial()}flatmap(e){return new _q(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new Tq(this,e,t)}columnMajorBatch(e,t=!0,n=tI){return this.rowMajorBatch(e,t).map(r=>mq(r,n))}concatenate(e,t){return new aI(rI([this,e]),t)}take(e){return e<0||e==null?this:new Cq(this,e)}skip(e){return e<0||e==null?this:new Sq(this,e)}prefetch(e){return new oI(this,e)}shuffle(e,t){return new $q(this,e,t)}serial(){return new Iq(this)}},wq=class extends bn{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:Aq(e),done:!1}}},kq=class extends bn{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},Iq=class extends bn{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},Sq=class extends bn{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;J(e.value)}return this.upstream.next()}},Cq=class extends bn{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},Tq=class extends bn{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},Nq=class extends bn{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;J(e.value)}}},Eq=class extends bn{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Er.getTensorsInContainer(e.value),n=this.transform(e.value),s=Er.getTensorsInContainer(n);for(let r of t)Er.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},Rq=class extends bn{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},d7=class extends bn{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Er.getTensorsInContainer(e.value),n=await this.transform(e.value),s=Er.getTensorsInContainer(n);for(let r of t)Er.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},Nx=class extends bn{constructor(){super(),this.outputQueue=new Cx,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},_q=class extends Nx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Er.getTensorsInContainer(e.value),n=this.transform(e.value),s=Er.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)Er.isTensorInList(r,s)||r.dispose();return!0}},aI=class extends bn{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},qa;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(qa||(qa={}));var Dq=class extends bn{constructor(e,t=qa.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function s(a){return a instanceof bn?{value:a.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let r=await nI(this.iterators,s);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case qa.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case qa.SHORTEST:return{value:null,done:!0};case qa.LONGEST:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},oI=class extends bn{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new sI(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},$q=class extends oI{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=hq.alea(n||v.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},td=class{constructor(){this.size=null}batch(e,t=!0){let n=this;v.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),Ss(async()=>(await n.iterator()).columnMajorBatch(e,t,Oq),s)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Ss(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Ss(async()=>(await t.iterator()).filter(s=>Z(()=>e(s))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Ss(async()=>(await t.iterator()).map(n=>Z(()=>e(n))),this.size)}mapAsync(e){let t=this;return Ss(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Ss(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Ss(async()=>{let s=Tx(async()=>({value:await t.iterator(),done:!1}));return bq(s.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Ss(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let s=this,r=pq.alea(t||v.now().toString());return Ss(async()=>{let a=r.int32();return n&&(a+=r.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Ss(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};td.MAX_BUFFER_SIZE=1e4;function Ss(e,t=null){return new class extends td{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Pq(e){return Ss(async()=>rI(e),e.length)}function Fq(e){if(!ic(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return Ss(async()=>{let n=await nI(e,s=>{if(s instanceof td)return{value:s.iterator(),recurse:!1};if(ic(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return vq(n,qa.SHORTEST)},t)}function Oq(e){if(e===null)return null;let t=e[0];return gq(t)?{value:Mq(e),recurse:!1}:{value:null,recurse:!0}}function Mq(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof nt?an(e):ct(e)}var iI=class extends td{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}},Xf='"',sp=Symbol("out"),p7=Symbol("field"),Kf=Symbol("quote"),y3=Symbol("quoteafterquote"),h7=Symbol("quoteinquote"),lI=class extends td{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new iI(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(v.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&v.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((s,r)=>(s[r]=s[r]+1||1,s),{}),n=Object.keys(t).filter(s=>t[s]>1);if(v.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){let a=this.fullColumnNames[r],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){let i=t[r],l=null;if(i==="")if(o&&o.default!==void 0)l=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{let u=Number(i);if(isNaN(u))o&&o.dtype==="bool"?l=this.getBoolean(i):l=i;else if(!o||!o.dtype)l=u;else switch(o.dtype){case"float32":l=u;break;case"int32":l=Math.floor(u);break;case"bool":l=this.getBoolean(i);break;default:l=u}}o&&o.isLabel?s[a]=l:n[a]=l}}return Object.keys(s).length===0?n:{xs:n,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],s=0,r=e.length,a=sp;for(let o=0;o<r;o++)switch(a){case sp:switch(e.charAt(o)){case Xf:s=o+1,a=Kf;break;case this.delimiter:if(s=o+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=sp;break;default:a=p7,s=o;break}break;case p7:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o)),a=sp,s=o+1;break;default:}break;case Kf:switch(e.charAt(o)){case Xf:a=y3;break;default:}break;case y3:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o-1)),a=sp,s=o+1;break;case Xf:a=Kf;break;default:a=h7;break}break;case h7:switch(e.charAt(o)){case Xf:a=Kf;break;default:}break;default:}if(a===y3?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},uI=class extends bn{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!j().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new uI(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(s=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((s,r)=>n.set(s,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(v.sizeFromShape(t));return n.set(e,n.length-e.length),ct(n,t)}},cI=class extends bn{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Pt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,a=(1-s)/2,o=r+n,i=s+a;this.cropBox=ar([a,r,i,o],[1,4])}else this.cropBox=ar([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!j().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new cI(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&v.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Ks.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return Z(()=>{let t=Lt(ye(e,"float32"),0),n;n=Se.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=n.shape;return V(n,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},dI=class{},pI=class extends bn{split(e){return new zq(this,e)}},zq=class extends pI{constructor(e,t){super(),this.upstream=e,this.impl=new Lq(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},Lq=class extends Nx{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},Bq=class extends bn{decodeUTF8(){return new Wq(this)}},Wq=class extends pI{constructor(e){super(),this.upstream=e,this.impl=new Vq(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},Vq=class extends Nx{constructor(e){if(super(),this.upstream=e,j().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=n6();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return j().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},hI=class extends Bq{constructor(e,t={}){super(),this.file=e,this.options=t,v.assert(e instanceof Uint8Array||(j().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,s)));else{let r=new FileReader;r.onload=o=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(i)},r.onabort=o=>n(new Error("Aborted")),r.onerror=o=>n(new Error(o.type));let a=this.file.slice(this.offset,s);r.readAsArrayBuffer(a)}this.offset=s}),done:!1}}};async function Uq(e,t={},n){let s,r;typeof e=="string"?s=e:(s=e.url,r=Gq(e));let a=await(n||v.fetch)(s,r);if(a.ok){let o=new Uint8Array(await a.arrayBuffer());return new hI(o,t)}else throw new Error(a.statusText)}var Gq=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function fI(e){return typeof e=="string"&&e.slice(0,7)==="file://"}var mI=class extends dI{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(fI(this.input)&&j().get("IS_NODE")){let e=ky();this.input=e.readFileSync(this.input.slice(7))}return new hI(this.input,this.options)}},gI=class extends dI{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return fI(this.url)?new mI(this.url,this.fileOptions).iterator():Uq(this.url,this.fileOptions)}};function Hq(e,t={}){return new lI(new gI(e),t)}function jq(e){let t=Tx(e);return Ss(async()=>t)}function qq(e){return Ss(async()=>{let t=await e();return Tx(()=>t.next())})}async function Xq(e,t){return cI.create(e,t)}async function Kq(e){return uI.create(e)}var Zq="3.19.0";function Te(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var Yq=cr.whereImpl,Ex=class extends pc{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new zp(this,nn())}nextDataId(){return Ex.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,j().get("IS_NODE")&&T.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let s=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return T.mergeRealAndImagArrays(s,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(s=>v.decodeString(s));return We(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return We(e.shape,e.dtype,t)}makeOutput(e,t,n){return nn().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Te([e],"where");let t=this.readSync(e.dataId);return Yq(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};Ex.nextDataId=0;var Rx={};Ge(Rx,{addImpl:()=>AI,bincountImpl:()=>Dx,bincountReduceImpl:()=>xI,ceilImpl:()=>bI,concatImpl:()=>$x,equalImpl:()=>vI,expImpl:()=>kI,expm1Impl:()=>SI,floorImpl:()=>CI,gatherNdImpl:()=>TI,gatherV2Impl:()=>NI,greaterEqualImpl:()=>RI,greaterImpl:()=>EI,lessEqualImpl:()=>DI,lessImpl:()=>_I,linSpaceImpl:()=>$I,logImpl:()=>PI,maxImpl:()=>FI,maximumImpl:()=>OI,minimumImpl:()=>MI,multiplyImpl:()=>Px,negImpl:()=>zI,notEqualImpl:()=>LI,prodImpl:()=>BI,rangeImpl:()=>Ox,rsqrtImpl:()=>WI,scatterImpl:()=>Vu,sigmoidImpl:()=>LX,simpleAbsImpl:()=>yI,sliceImpl:()=>$m,sparseFillEmptyRowsImpl:()=>UI,sparseReshapeImpl:()=>GI,sparseSegmentReductionImpl:()=>Mx,sqrtImpl:()=>VX,squaredDifferenceImpl:()=>HI,stridedSliceImpl:()=>jI,stringNGramsImpl:()=>zx,stringSplitImpl:()=>Lx,stringToHashBucketFastImpl:()=>Bx,subImpl:()=>qI,tileImpl:()=>XI,topKImpl:()=>ZI,transposeImpl:()=>Fx,uniqueImpl:()=>YI});function yI(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var Jq=e=>{let{x:t}=e.inputs,n=e.backend;Te(t,"abs");let s=new Float32Array(v.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return s=yI(r),n.makeOutput(s,t.shape,t.dtype)},Qq={kernelName:ll,backendName:"cpu",kernelFunc:Jq};function ln(e){return(t,n,s,r,a)=>{let o=T.assertAndGetBroadcastShape(t,n),i=o.length,l=v.computeStrides(o),u=v.sizeFromShape(o),c=v.getTypedArrayFromDType(a,u),p=t.length,d=n.length,h=v.computeStrides(t),f=v.computeStrides(n),m=T.getBroadcastDims(t,o),g=T.getBroadcastDims(n,o);if(m.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=e(s[y%s.length],r[y%r.length]);else for(let y=0;y<c.length;++y){let x=v.indexToLoc(y,i,l),A=x.slice(-p);m.forEach(k=>A[k]=0);let b=v.locToIndex(A,p,h),w=x.slice(-d);g.forEach(k=>w[k]=0);let I=v.locToIndex(w,d,f);c[y]=e(s[b],r[I])}return[c,o]}}function Ts(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(i.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",o)},i}var eX={kernelName:Bp,backendName:"cpu",kernelFunc:Ts};function Dm(e,t,n="float32"){if(n==="complex64"){let r=Dm(e,t,"float32"),a=Dm(e,t,"float32");return Ts({inputs:{real:r,imag:a},backend:e})}let s=v.makeZerosTypedArray(v.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function Yr(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var tX={kernelName:Do,backendName:"cpu",kernelFunc:Yr};function nl(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var nX={kernelName:Xp,backendName:"cpu",kernelFunc:nl};function lo(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Yr({inputs:{x:r},backend:n});let o=Dm(n,r.shape,r.dtype),i=lo({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=Ts({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=nl({inputs:{input:r},backend:n}),i=lo({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=Yr({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32"){let o=n.data.get(r.dataId).values,i=Int32Array.from(o);return n.makeTensorInfo(r.shape,"int32",i)}if(a==="bool"){let o=n.data.get(r.dataId).values,i=v.toTypedArray([0],r.dtype),[l,u]=ln((c,p)=>c!==p?1:0)(r.shape,[],o,i,"bool");return n.makeTensorInfo(u,"bool",l)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var sX={kernelName:yo,backendName:"cpu",kernelFunc:lo};function vn(e,t,n,s){return n==null?({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;Te([o,i],e);let u=l.data.get(o.dataId).values,c=l.data.get(i.dataId).values,p=o.dtype==="string"?T.fromUint8ToStringArray(u):u,d=o.dtype==="string"?T.fromUint8ToStringArray(c):c,h=s||o.dtype,[f,m]=t(o.shape,i.shape,p,d,h);return l.makeTensorInfo(m,h,f)}:({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(o.dtype==="complex64"||i.dtype==="complex64"){let u=lo({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),p=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,h=l.data.get(p.dataId).values,f=l.data.get(d.dataId).values,m=lo({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,A=l.data.get(y.dataId).values,b=l.data.get(x.dataId).values,[w,I,k]=n(o.shape,i.shape,h,f,A,b),R=l.makeTensorInfo(k,"float32",w),_=l.makeTensorInfo(k,"float32",I),D=Ts({inputs:{real:R,imag:_},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(R),l.disposeIntermediateTensorInfo(_),D}else{let u=l.data.get(o.dataId).values,c=l.data.get(i.dataId).values,p=s||o.dtype,[d,h]=t(o.shape,i.shape,u,c,p);return l.makeTensorInfo(h,p,d)}}}function _x(e){return(t,n,s,r,a,o)=>{let i=T.assertAndGetBroadcastShape(t,n),l=v.sizeFromShape(i),u=i.length,c=v.computeStrides(i),p=v.getTypedArrayFromDType("float32",l),d=v.getTypedArrayFromDType("float32",l),h=T.getBroadcastDims(t,i),f=T.getBroadcastDims(n,i),m=T.mergeRealAndImagArrays(s,r),g=T.mergeRealAndImagArrays(a,o),y=t.length,x=v.computeStrides(t),A=n.length,b=v.computeStrides(n);if(h.length+f.length===0)for(let w=0;w<p.length;w++){let I=w%m.length,k=w%g.length,R=e(m[I*2],m[I*2+1],g[k*2],g[k*2+1]);p[w]=R.real,d[w]=R.imag}else for(let w=0;w<p.length;w++){let I=v.indexToLoc(w,u,c),k=I.slice(-y);h.forEach(P=>k[P]=0);let R=v.locToIndex(k,y,x),_=I.slice(-A);f.forEach(P=>_[P]=0);let D=v.locToIndex(_,A,b),E=e(m[R*2],m[R*2+1],g[D*2],g[D*2+1]);p[w]=E.real,d[w]=E.imag}return[p,d,i]}}var AI=ln((e,t)=>e+t),rX=_x((e,t,n,s)=>({real:e+n,imag:t+s})),lc=vn(ba,AI,rX),aX={kernelName:ba,backendName:"cpu",kernelFunc:lc};function Dx(e,t,n,s,r){let a=v.sizeFromShape(s),o=v.makeZerosTypedArray(r,n);for(let i=0;i<e.length;i++){let l=e[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(a>0?o[l]+=t[i]:o[l]+=1)}return o}function xI(e,t,n,s=!1){let r=e.shape[0],a=e.shape[1],o=We([r,n],t.dtype);for(let i=0;i<r;i++)for(let l=0;l<a;l++){let u=e.get(i,l);if(u<0)throw new Error("Input x must be non-negative!");u>=n||(s?o.set(1,i,u):t.size>0?o.set(o.get(i,u)+t.get(i,l),i,u):o.set(o.get(i,u)+1,i,u))}return o}function pi(e){return(t,n,s)=>{let r=v.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function xt(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Te(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,u=v.sizeFromShape(o.shape),c=n||o.dtype,p=v.getArrayFromDType(c,u);for(let d=0;d<u;++d)p[d]=t(l[d],r);return i.makeTensorInfo(o.shape,c,p)}}function nd(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Te(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,u=n||o.dtype,c=t(l,u,r);return i.makeTensorInfo(o.shape,u,c)}}var bI=pi(e=>Math.ceil(e)),oX=nd(Ao,bI),iX={kernelName:Ao,backendName:"cpu",kernelFunc:oX};function $x(e,t,n,s){let r=v.getArrayFromDType(n,v.sizeFromShape(t));if(s&&n!=="string"){let a=0;e.forEach(o=>{let i=v.sizeFromShape(o.shape);r.set(o.vals,a),a+=i})}else{let a=0;e.forEach(o=>{let i=n==="string"?T.fromUint8ToStringArray(o.vals):o.vals,l=0;for(let u=0;u<o.shape[0];++u){let c=u*t[1]+a;for(let p=0;p<o.shape[1];++p)r[c+p]=i[l++]}a+=o.shape[1]})}return r}var vI=ln((e,t)=>e===t?1:0),wI=vn(fl,vI,null,"bool"),lX={kernelName:fl,backendName:"cpu",kernelFunc:wI},kI=pi(e=>Math.exp(e)),II=nd(To,kI,"float32"),uX={kernelName:To,backendName:"cpu",kernelFunc:II},SI=pi(e=>Math.expm1(e)),cX=nd(gl,SI),dX={kernelName:gl,backendName:"cpu",kernelFunc:cX},CI=pi(e=>Math.floor(e)),pX=nd(No,CI),hX={kernelName:No,backendName:"cpu",kernelFunc:pX};function TI(e,t,n,s,r,a,o,i,l){let u=We([s,a],n);for(let c=0;c<s;c++){let p=[],d=0;for(let h=0;h<r;h++){let f=e[c*r+h];d+=f*o[h],p.push(f)}if(d<0||d>=l/a)throw new Error(`Invalid indices: ${p} does not index into ${i}`);for(let h=0;h<a;h++)u.values[c*a+h]=t.get(...t.indexToLoc(d*a+h))}return u}function NI(e,t,n){let s=We(n,e.dtype);for(let r=0;r<s.size;++r){let o=s.indexToLoc(r).slice(),i=o[0],l=o[2],u=t.locToIndex([i,l]);o[2]=t.values[u];let c=e.locToIndex(o);0<=c&&c<e.values.length&&(s.values[r]=e.values[c])}return s}var EI=ln((e,t)=>e>t?1:0),fX=vn(bl,EI,null,"bool"),mX={kernelName:bl,backendName:"cpu",kernelFunc:fX},RI=ln((e,t)=>e>=t?1:0),gX=vn(_o,RI,null,"bool"),yX={kernelName:_o,backendName:"cpu",kernelFunc:gX},_I=ln((e,t)=>e<t?1:0),AX=vn(vl,_I,null,"bool"),xX={kernelName:vl,backendName:"cpu",kernelFunc:AX},DI=ln((e,t)=>e<=t?1:0),bX=vn(wl,DI,null,"bool"),vX={kernelName:wl,backendName:"cpu",kernelFunc:bX};function $I(e,t,n){let s=(t-e)/(n-1),r=v.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}var PI=pi(e=>Math.log(e)),wX=nd(Po,PI),kX={kernelName:Po,backendName:"cpu",kernelFunc:wX};function FI(e,t,n,s){let r=v.getTypedArrayFromDType(s,v.sizeFromShape(n));for(let a=0;a<r.length;++a){let o=a*t,i=e[o];for(let l=0;l<t;++l){let u=e[o+l];(Number.isNaN(u)||u>i)&&(i=u)}r[a]=i}return r}var OI=ln((e,t)=>Math.max(e,t)),IX=vn(Oo,OI),SX={kernelName:Oo,backendName:"cpu",kernelFunc:IX},MI=ln((e,t)=>Math.min(e,t)),CX=vn(Bo,MI),TX={kernelName:Bo,backendName:"cpu",kernelFunc:CX},Px=ln((e,t)=>e*t),NX=_x((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),b2=vn(Vo,Px,NX),EX={kernelName:Vo,backendName:"cpu",kernelFunc:b2};function zI(e,t,n){let s=v.createScalarValue(-1,n);return Px([],t,s,e,n)}function RX(e){let{inputs:t,backend:n}=e,{x:s}=t;Te(s,"neg");let r=n.data.get(s.dataId).values,[a,o]=zI(r,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,a)}var _X={kernelName:Sl,backendName:"cpu",kernelFunc:RX},LI=ln((e,t)=>e!==t?1:0),DX=vn(Cl,LI,null,"bool"),$X={kernelName:Cl,backendName:"cpu",kernelFunc:DX};function Fx(e,t,n,s,r){let a=t.length,o=v.sizeFromShape(t),i=v.computeStrides(t),l=v.computeStrides(r),u=v.getTypedArrayFromDType(n,v.sizeFromShape(r));for(let c=0;c<o;++c){let p=v.indexToLoc(c,a,i),d=new Array(p.length);for(let f=0;f<d.length;f++)d[f]=p[s[f]];let h=v.locToIndex(d,a,l);u[h]=e[c]}return u}function ys(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;Te(r,"transpose");let o=r.shape.length,i=new Array(o);for(let p=0;p<i.length;p++)i[p]=r.shape[a[p]];let l=s.data.get(r.dataId).values,u=Fx(l,r.shape,r.dtype,a,i);return{dataId:s.write(u,i,r.dtype),shape:i,dtype:r.dtype}}var PX={kernelName:jr,backendName:"cpu",kernelFunc:ys};function BI(e,t,n,s){let[r,a]=T.computeOutAndReduceShapes(e,s),o=Mn(t,"int32"),i=v.makeZerosTypedArray(v.sizeFromShape(r),o),l=v.sizeFromShape(a);for(let u=0;u<i.length;++u){let c=u*l,p=1;for(let d=0;d<l;++d)p*=n[c+d];i[u]=p}return{outVals:i,outShape:r,outDtype:o}}function FX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Te(r,"prod");let i=r.shape.length,l=v.parseAxisParam(a,r.shape),u=T.getAxesPermutation(l,i),c=l,p=r,d=[];u!=null&&(p=ys({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(p),c=T.getInnerMostAxes(c.length,i));let h=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=BI(p.shape,p.dtype,h,c),y=m;return o&&(y=T.expandShapeToKeepDim(m,l)),d.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(y,g,f)}var OX={kernelName:jo,backendName:"cpu",kernelFunc:FX};function Ox(e,t,n,s){let r=e===t,a=e<t&&n<0,o=t<e&&n>1;if(r||a||o)return v.makeZerosTypedArray(0,s);let i=Math.abs(Math.ceil((t-e)/n)),l=v.makeZerosTypedArray(i,s);t<e&&n===1&&(n=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}var WI=pi(e=>1/Math.sqrt(e)),MX=nd(Yo,WI),zX={kernelName:Yo,backendName:"cpu",kernelFunc:MX};function Vu(e,t,n,s,r,a,o,i,l,u){let c=[s/r,r],p=e.values,d=t.values;if(s===0)return We(n,t.dtype);let h=We(c,t.dtype);typeof l=="string"||typeof l=="number"?h.values.fill(l):typeof l=="boolean"&&h.values.fill(+l);for(let f=0;f<a;f++){let m=[],g=0;for(let y=0;y<o;y++){let x=p[f*o+y];m.push(x),g+=x*i[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let y=0;y<r;y++)u?h.values[g*r+y]+=d[f*r+y]:h.values[g*r+y]=t.rank===0?d[0]:d[f*r+y]}return h}var LX=pi(e=>1/(1+Math.exp(-e))),VI=xt(Qo,e=>1/(1+Math.exp(-e))),BX={kernelName:Qo,backendName:"cpu",kernelFunc:VI};function $m(e,t,n,s,r){let a=Ut.isSliceContinous(s,t,n),o=v.sizeFromShape(n),i=v.computeStrides(s);if(a){let p=Ut.computeFlatOffset(t,i);return r==="string"?e.slice(p,p+o):e.subarray(p,p+o)}let l=r==="string"?T.fromUint8ToStringArray(e):e,u=We(s,r,l),c=We(n,r);for(let p=0;p<c.size;++p){let d=c.indexToLoc(p),h=d.map((f,m)=>f+t[m]);c.set(u.get(...h),...d)}return r==="string"?T.fromStringArrayToUint8(c.values):c.values}function sl(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s;Te(r,"slice");let[i,l]=Ut.parseSliceParams(r,a,o);Ut.assertParamsValid(r,i,l);let u=n.data.get(r.dataId).values,c=$m(u,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,c)}var WX={kernelName:Ml,backendName:"cpu",kernelFunc:sl};function UI(e,t,n,s,r,a,o){let i=t[0],l=a[0],u=new Array(l),c=new Array(i),p=t[1];if(l===0){if(i!==0)throw new Error(T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=v.getArrayFromDType(n,0),y=v.getArrayFromDType(r,0);return[g,[0,p],y,u,c]}let d=!0,h=0,f=new Array(l).fill(0);for(let g=0;g<i;++g){let y=e[g*p];if(y<0)throw new Error(T.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=l)throw new Error(T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,l));++f[y],d=d&&y>=h,h=y}let m=!0;for(let g=0;g<l;++g){let y=f[g]===0;u[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){let g=e,y=s;for(let x=0;x<i;++x)c[x]=x;return[g,[i,p],y,u,c]}else{let g=f[l-1],y=v.getArrayFromDType(n,g*p),x=v.getArrayFromDType(r,g),A=new Array(l).fill(0);for(let b=0;b<i;++b){let w=e[b*p],I=A[w],k=(w===0?0:f[w-1])+I;A[w]++;for(let R=0;R<p;++R)y[k*p+R]=e[b*p+R];x[k]=s[b],c[b]=k}for(let b=0;b<l;++b)if(A[b]===0){let I=b===0?0:f[b-1];y[I*p+0]=b;for(let k=1;k<p;++k)y[I*p+k]=0;x[I]=o}return[y,[g,p],x,u,c]}}function GI(e,t,n,s,r){let a=v.sizeFromShape(s),o=t[0],i=r.length,l=[],u=1,c=-1;for(let g=0;g<i;++g){let y=r[g];if(y===-1){if(c!==-1)throw new Error(T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,g));c=g,l.push(1)}else{if(y<0)throw new Error(T.getSparseReshapeNegativeOutputDimErrorMessage(g,y));u*=y,l.push(y)}}if(c!==-1){if(u<=0)throw new Error(T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(a/u);if(u*g!==a)throw new Error(T.getSparseReshapeInputOutputMultipleErrorMessage(s,l));l[c]=g}if(v.sizeFromShape(l)!==a)throw new Error(T.getSparseReshapeInputOutputMismatchErrorMessage(s,l));let d=s.length,h=[];if(d>0){h[d-1]=1;for(let g=d-2;g>=0;--g)h[g]=h[g+1]*s[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}let m=v.getArrayFromDType(n,o*i);for(let g=0;g<o;++g){let y=0;for(let x=0;x<d;++x)y+=e[g*d+x]*h[x];for(let x=0;x<i;++x)m[g*i+x]=Math.trunc(y/f[x]),y%=f[x]}return[m,[o,i],l]}function Mx(e,t,n,s,r,a=!1,o=0){let i=s.length,l=[t[0],e.length/t[0]],u=l[1],p=i>0?r[i-1]+1:0;if(p<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=p;let h=d.reduce((A,b)=>A*b,1),f=v.getArrayFromDType(n,h);if(i===0)return p>0&&f.fill(o),[f,d];if(p<=0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,x=r[m];for(;;){let A=0;if(g<i){if(A=r[g],x===A){++g;continue}if(x>=A)throw new Error(T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=p)throw new Error(T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,p));x>y&&f.fill(o,y*u,x*u);for(let b=m;b<g;++b){let w=s[b];if(w<0||w>=l[0])throw new Error(T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b,s[b],l[0]));for(let I=0;I<u;I++)f[x*u+I]+=e[w*u+I]}if(a)for(let b=0;b<u;b++)f[x*u+b]/=g-m;if(m=g,++g,y=x+1,x=A,g>i)break}return y<p&&f.fill(o,y*u,p*u),[f,d]}var VX=pi(e=>Math.sqrt(e)),UX=xt(ei,e=>Math.sqrt(e)),GX={kernelName:ei,backendName:"cpu",kernelFunc:UX},HI=ln((e,t)=>{let n=e-t;return n*n}),HX=vn(si,HI),jX={kernelName:si,backendName:"cpu",kernelFunc:HX};function jI(e,t,n,s){let r=We(e,t.dtype);for(let a=0;a<r.size;a++){let o=r.indexToLoc(a),i=new Array(o.length);for(let l=0;l<i.length;l++)i[l]=o[l]*n[l]+s[l];r.set(t.get(...i),...o)}return r}var qX=class{constructor(e,t,n,s,r,a){this.separator=v.encodeString(e),this.nGramWidths=t,this.leftPad=v.encodeString(n),this.rightPad=v.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let o=0;o<r;++o){let i=this.getPadWidth(a),l=Math.max(0,i-o),u=Math.max(0,i-(r-(o+1))),c=a-(l+u),p=t+(l>0?0:o-i),d=0;d+=l*this.leftPad.length;for(let y=0;y<c;++y)d+=e[p+y].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[s+o]=new Uint8Array(d);let f=n[s+o],m=0,g=y=>y.forEach(x=>f[m++]=x);for(let y=0;y<l;++y)g(this.leftPad),g(this.separator);for(let y=0;y<c-1;++y)g(e[p+y]),g(this.separator);if(c>0){g(e[p+c-1]);for(let y=0;y<u;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<u-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,s=t.length;if(s>0){let i=t[0];if(i!==0)throw new Error(`First split value must be 0, got ${i}`);for(let l=1;l<s;++l){let u=t[l]>=i;if(u=u&&t[l]<=n,!u)throw new Error(`Invalid split value ${t[l]}, must be in [${i}, ${n}]`);i=t[l]}if(i!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${i}`)}let r=s-1,a=v.getArrayFromDType("int32",s);if(n===0||s===0){let i=new Array(n);for(let l=0;l<=r;++l)a[l]=0;return[i,a]}a[0]=0;for(let i=1;i<=r;++i){let l=t[i]-t[i-1],u=0;this.nGramWidths.forEach(c=>{u+=this.getNumNGrams(l,c)}),this.preserveShort&&l>0&&u===0&&(u=1),a[i]=a[i-1]+u}let o=new Array(a[r]);for(let i=0;i<r;++i){let l=t[i],u=a[i];if(this.nGramWidths.forEach(c=>{let p=t[i+1]-t[i],d=this.getNumNGrams(p,c);this.createNGrams(e,l,o,u,d,c),u+=d}),this.preserveShort&&u===a[i]){let c=t[i+1]-t[i];if(c===0)continue;let p=c+2*this.padWidth,d=1;this.createNGrams(e,l,o,u,d,p)}}return[o,a]}};function zx(e,t,n,s,r,a,o,i){return new qX(n,s,r,a,o,i).compute(e,t)}function XX(e,t,n,s){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)s.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],o=e.indexOf(a);for(;o!==-1;){let i=e.subarray(0,o);(!n||i.length!==0)&&s.push(i),e=e.subarray(o+1),o=e.indexOf(a)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let o=e.subarray(r,a);(!n||o.length!==0)&&s.push(o),r=a+1}}function Lx(e,t,n){let s=e.length,r=[],a=0,o=0,i=new Array(s);for(let d=0;d<s;++d){let h=r.length;XX(e[d],t,n,r);let f=r.length-h;i[d]=f,a+=f,o=Math.max(o,f)}let l=v.getArrayFromDType("int32",a*2),u=new Array(a),c=[s,o],p=0;for(let d=0;d<s;++d)for(let h=0;h<i[d];++h)l[p*2]=d,l[p*2+1]=h,u[p]=r[p],++p;return[l,u,c]}function Bx(e,t){let n=v.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=v.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}var qI=ln((e,t)=>e-t),KX=_x((e,t,n,s)=>({real:e-n,imag:t-s})),Wx=vn(ri,qI,KX),ZX={kernelName:ri,backendName:"cpu",kernelFunc:Wx};function XI(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let s=We(n,e.dtype);for(let r=0;r<s.values.length;++r){let a=s.indexToLoc(r),o=new Array(e.rank);for(let l=0;l<o.length;l++)o[l]=a[l]%e.shape[l];let i=e.locToIndex(o);s.values[r]=e.values[i]}return s}var lp=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function KI(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){let i=s-n+1,l=t-n+1,u=Math.log(i),c=.5*Math.exp(2*u/3),p=.5*Math.sqrt(u*c*(i-c)/i)*Math.sign(l-i/2),d=Math.max(n,Math.floor(t-l*c/i+p)),h=Math.min(s,Math.floor(t+(i-l)*c/i+p));KI(e,t,d,h)}let r=e[t],a=n,o=s;for(v.swap(e,n,t),lp(e[s],r)>0&&v.swap(e,n,s);a<o;){for(v.swap(e,a,o),a++,o--;lp(e[a],r)<0;)a=a+1;for(;lp(e[o],r)>0;)o=o-1}lp(e[n],r)===0?v.swap(e,n,o):(o=o+1,v.swap(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}function ZI(e,t,n,s,r){let a=t[t.length-1],[o,i]=[e.length/a,a],l=v.getTypedArrayFromDType(n,o*s),u=v.getTypedArrayFromDType("int32",o*s);for(let p=0;p<o;p++){let d=p*i,h=e.subarray(d,d+i),f=new Array(h.length);h.forEach((x,A)=>f[A]={value:x,index:A}),s<f.length&&(KI(f,s),f=f.slice(0,s)),r&&f.sort(lp);let m=p*s,g=l.subarray(m,m+s),y=u.subarray(m,m+s);for(let x=0;x<s;x++)g[x]=f[x].value,y[x]=f[x].index}let c=t.slice();return c[c.length-1]=s,[We(c,n,l),We(c,"int32",u)]}function YI(e,t,n,s){let r=v.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];let o={},i=new Int32Array(n[r]),l=new pn(a,s,e),u=[],c=a[0]===1&&a[2]===1;for(let f=0;f<n[r];f++){let m;if(c)m=e[f].toString();else{let g=[];for(let y=0;y<a[0];y++)for(let x=0;x<a[2];x++)g.push(l.get(y,f,x));m=g.join(",")}if(o[m]!==void 0)i[f]=o[m];else{let g=Object.keys(o).length;o[m]=g,i[f]=g,u.push(f)}}let p=a.slice();p[1]=Object.keys(o).length;let d=new pn(p,s);u.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let y=0;y<a[2];y++)d.set(l.get(g,f,y),g,m,y)});let h=n.slice();return h[r]=p[1],{outputValues:d.values,outputShape:h,indices:i}}Xl("cpu",()=>new Ex,1);var JI=xt(Co,e=>e>=0?e:Math.exp(e)-1),YX={kernelName:Co,backendName:"cpu",kernelFunc:JI};function QI(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;Te([r],"leakyRelu");let o=v.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,l=v.getTypedArrayFromDType("float32",o);for(let u=0;u<i.length;u++)l[u]=i[u]<0?a*i[u]:i[u];return n.makeTensorInfo(r.shape,"float32",l)}var JX={kernelName:$o,backendName:"cpu",kernelFunc:QI},QX=ln((e,t)=>e<0?t*e:e);function eS(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t;Te([s,r],"prelu");let a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,[i,l]=QX(s.shape,r.shape,a,o,"float32");return n.makeTensorInfo(l,"float32",i)}var eK={kernelName:Ho,backendName:"cpu",kernelFunc:eS},tS=xt(qo,e=>Math.max(0,e)),tK={kernelName:qo,backendName:"cpu",kernelFunc:tS},nS=xt(Zo,e=>Math.min(Math.max(0,e),6)),nK={kernelName:Zo,backendName:"cpu",kernelFunc:nS};function Pm(e,t,n,s,r){if(n==="linear")return Yr({inputs:{x:t},backend:e});if(n==="relu")return tS({inputs:{x:t},backend:e});if(n==="elu")return JI({inputs:{x:t},backend:e});if(n==="relu6")return nS({inputs:{x:t},backend:e});if(n==="prelu")return eS({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return QI({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return VI({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Et(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=v.sizeFromShape(r.shape),i=v.inferFromImplicitShape(a,o),l=v.sizeFromShape(i);v.assert(o===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let u=n.data.get(r.dataId);if(u.complexTensorInfos!=null){let c=u.complexTensorInfos.real,p=u.complexTensorInfos.imag;c.shape=i,p.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}var sK={kernelName:Dl,backendName:"cpu",kernelFunc:Et};function sS(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;Te([r,a],"matMul");let l=r.shape.length,u=a.shape.length,c=o?r.shape[l-2]:r.shape[l-1],p=i?a.shape[u-1]:a.shape[u-2],d=o?r.shape[l-1]:r.shape[l-2],h=i?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=v.sizeFromShape(f),y=v.sizeFromShape(m),A=Kl.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,h]);v.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,c,d]:[g,d,c],w=i?[y,h,p]:[y,p,h],I=Et({inputs:{x:r},backend:n,attrs:{shape:b}}),k=Et({inputs:{x:a},backend:n,attrs:{shape:w}}),R=o?I.shape[1]:I.shape[2],_=o?I.shape[2]:I.shape[1],D=i?k.shape[1]:k.shape[2],E=Math.max(g,y),P=n.data.get(I.dataId).values,C=n.data.get(k.dataId).values,M=v.computeStrides(I.shape),W=v.computeStrides(k.shape),[G,X,K]=o?[M[0],1,M[1]]:[M[0],M[1],1],[Y,se,ee]=i?[1,W[1],W[0]]:[W[1],1,W[0]],le=_*D,re=We([E,_,D],I.dtype),pe=re.values,ce=n.blockSize;for(let Ae=0;Ae<E;Ae++)for(let oe=0;oe<_;oe+=ce)for(let Re=0;Re<D;Re+=ce)for(let _e=0;_e<R;_e+=ce){let Ve=Math.min(oe+ce,_),Fe=Math.min(Re+ce,D),ot=Math.min(_e+ce,R);for(let gt=oe;gt<Ve;gt++)for(let pt=Re;pt<Fe;pt++){let yt=0;for(let Pe=_e;Pe<ot;Pe++){let Ct=Math.min(Ae,g-1)*G,kt=Math.min(Ae,y-1)*ee,jn=P[Ct+gt*X+Pe*K],Jt=C[Pe*Y+pt*se+kt];yt+=jn*Jt}pe[Ae*le+(gt*D+pt)]+=yt}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(A,re.dtype,re.values)}var rK={kernelName:go,backendName:"cpu",kernelFunc:sS};function aK(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=s,d,h,f,m=[];d=sS({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),o&&(h=lc({inputs:{a:d,b:o},backend:n}),m.push(d),d=h),c&&(f=Pm(n,d,c,i,p),m.push(d),d=f);for(let y of m)n.disposeIntermediateTensorInfo(y);return d}var oK={kernelName:Qa,backendName:"cpu",kernelFunc:aK},iK=xt(fc,e=>Math.acos(e)),lK={kernelName:fc,backendName:"cpu",kernelFunc:iK},uK=xt(mc,e=>Math.acosh(e)),cK={kernelName:mc,backendName:"cpu",kernelFunc:uK};function dK(e){let{inputs:t,backend:n}=e,s=t;Te(t,"addN");let r=s.map(i=>n.data.get(i.dataId).values),a=We(s[0].shape,s[0].dtype),o=a.values;for(let i=0;i<s.length;i++){let l=r[i];for(let u=0;u<o.length;u++)o[u]+=l[u]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var pK={kernelName:ho,backendName:"cpu",kernelFunc:dK};function hK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Te(r,"all");let i=v.parseAxisParam(a,r.shape),l=i,u=T.getAxesPermutation(l,r.shape.length),c=r;u!=null&&(c=ys({inputs:{x:r},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("all",l,c.shape.length);let[p,d]=T.computeOutAndReduceShapes(c.shape,l),h=v.sizeFromShape(d),f=v.makeZerosTypedArray(v.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let w=m[x+b];A=A&&w}f[y]=A}u!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,f);if(o){let y=T.expandShapeToKeepDim(p,i),x=Et({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var fK={kernelName:gc,backendName:"cpu",kernelFunc:hK};function mK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Te(r,"any");let i=v.parseAxisParam(a,r.shape),l=i,u=T.getAxesPermutation(l,r.shape.length),c=r;u!=null&&(c=ys({inputs:{x:r},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("any",l,c.shape.length);let[p,d]=T.computeOutAndReduceShapes(c.shape,l),h=v.sizeFromShape(d),f=v.makeZerosTypedArray(v.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let w=m[x+b];A=A||w}f[y]=A}u!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,f);if(o){let y=T.expandShapeToKeepDim(p,i),x=Et({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var gK={kernelName:yc,backendName:"cpu",kernelFunc:mK};function yK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Te(r,"argMax");let o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=ys({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],T.assertAxesAreInnerMostDims("argMax",o,l.shape.length);let[c,p]=T.computeOutAndReduceShapes(l.shape,o),d=v.sizeFromShape(c),h=v.makeZerosTypedArray(d,"int32"),f=v.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*f,x=m[y],A=0;for(let b=0;b<f;++b){let w=m[y+b];w>x&&(x=w,A=b)}h[g]=A}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",h)}var AK={kernelName:fo,backendName:"cpu",kernelFunc:yK};function xK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Te(r,"argMin");let o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=ys({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],T.assertAxesAreInnerMostDims("argMin",o,l.shape.length);let[c,p]=T.computeOutAndReduceShapes(l.shape,o),d=v.sizeFromShape(c),h=v.makeZerosTypedArray(d,"int32"),f=v.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*f,x=m[y],A=0;for(let b=0;b<f;++b){let w=m[y+b];w<x&&(x=w,A=b)}h[g]=A}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",h)}var bK={kernelName:Ac,backendName:"cpu",kernelFunc:xK},vK=xt(xc,e=>Math.asin(e)),wK={kernelName:xc,backendName:"cpu",kernelFunc:vK},kK=xt(bc,e=>Math.asinh(e)),IK={kernelName:bc,backendName:"cpu",kernelFunc:kK},SK=xt(vc,e=>Math.atan(e)),CK={kernelName:vc,backendName:"cpu",kernelFunc:SK},TK=ln((e,t)=>Math.atan2(e,t)),NK=vn(kc,TK),EK={kernelName:kc,backendName:"cpu",kernelFunc:NK},RK=xt(wc,e=>Math.atanh(e)),_K={kernelName:wc,backendName:"cpu",kernelFunc:RK};function Vx(e,t,n,s,r,a){let o=r.strideHeight,i=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,h=r.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=We(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],A=r.outShape[3];for(let b=0;b<r.batchSize;++b){let w=b*y,I=b*s[0];for(let k=0;k<r.inChannels;++k)for(let R=0;R<r.outHeight;++R){let _=R*o-d,D=Math.max(0,_),E=Math.min(r.inHeight,c+_),P=w+R*x;for(let C=0;C<r.outWidth;++C){let M=C*i-h,W=Math.max(0,M),G=Math.min(r.inWidth,p+M),X=f,K=0,Y=0;for(let ee=D;ee<E;ee+=l){let le=I+ee*s[1];for(let re=W;re<G;re+=u){let pe=le+re*s[2],ce=e[pe+k];a==="max"&&ce>X?X=ce:a==="avg"&&(K+=ce,Y++)}if(isNaN(X))break}let se=P+C*A+k;g[se]=a==="avg"?K/Y:X}}}return m}function rS(e,t,n,s,r=!1,a=!1){let o=We(s.outShape,"int32"),i=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,p=s.effectiveFilterHeight,d=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m=We(t,n,e);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let x=0;x<s.outHeight;++x){let A=x*i-h,b=A;for(;b<0;)b+=u;let w=Math.min(s.inHeight,p+A);for(let I=0;I<s.outWidth;++I){let k=I*l-f,R=k;for(;R<0;)R+=c;let _=Math.min(s.inWidth,d+k),D=Number.NEGATIVE_INFINITY,E=-1;for(let P=b;P<w;P+=u){let C=P-A;for(let M=R;M<_;M+=c){let W=M-k,G=m.get(g,P,M,y);G>D&&(D=G,r?E=a?((g*s.inHeight+P)*s.inWidth+M)*s.inChannels+y:(P*s.inWidth+M)*s.inChannels+y:E=C*d+W)}}o.set(E,g,x,I,y)}}return o}function aS(e,t,n,s,r,a){let o=r.strideDepth,i=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,p=r.dilationWidth,d=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,x=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,A=We(r.outShape,n),b=A.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[3]*r.outShape[4],R=r.outShape[4];for(let _=0;_<r.batchSize;++_){let D=_*w,E=_*s[0];for(let P=0;P<r.inChannels;++P)for(let C=0;C<r.outDepth;++C){let M=C*o-m,W=M;for(;W<0;)W+=u;let G=Math.min(r.inDepth,d+M),X=D+C*I;for(let K=0;K<r.outHeight;++K){let Y=K*i-g,se=Y;for(;se<0;)se+=c;let ee=Math.min(r.inHeight,h+Y),le=X+K*k;for(let re=0;re<r.outWidth;++re){let pe=re*l-y,ce=pe;for(;ce<0;)ce+=p;let Ae=Math.min(r.inWidth,f+pe),oe=le+re*R,Re=x,_e=0,Ve=0;for(let ot=W;ot<G;ot+=u){let gt=E+ot*s[1];for(let pt=se;pt<ee;pt+=c){let yt=gt+pt*s[2];for(let Pe=ce;Pe<Ae;Pe+=p){let Ct=yt+Pe*s[3],kt=e[Ct+P];if(a==="max"&&kt>Re?Re=kt:a==="avg"&&(_e+=kt,Ve++),isNaN(Re))break}if(isNaN(Re))break}if(isNaN(Re))break}let Fe=oe+P;b[Fe]=a==="avg"?_e/Ve:Re}}}}return A}function DK(e,t){let n=We(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let x=y*s-d,A=x;for(;A<0;)A+=o;let b=Math.min(t.inDepth,u+x);for(let w=0;w<t.outHeight;++w){let I=w*r-h,k=I;for(;k<0;)k+=i;let R=Math.min(t.inHeight,c+I);for(let _=0;_<t.outWidth;++_){let D=_*a-f,E=D;for(;E<0;)E+=l;let P=Math.min(t.inWidth,p+D),C=Number.NEGATIVE_INFINITY,M=-1;for(let W=A;W<b;W+=o){let G=W-x;for(let X=k;X<R;X+=i){let K=X-I;for(let Y=E;Y<P;Y+=l){let se=Y-D,ee=e.get(m,W,X,Y,g);ee>=C&&(C=ee,M=G*c*p+K*c+se)}}}n.set(M,m,y,w,_,g)}}}return n}function $K(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Te(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1;v.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let c=T.computePool2DInfo(r.shape,a,o,u,i,l),p;if(c.filterWidth===1&&c.filterHeight===1&&v.arraysEqual(c.inShape,c.outShape))p=Yr({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,h=v.computeStrides(r.shape),f=Vx(d,r.shape,r.dtype,h,c,"avg");p=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return p}var PK={kernelName:mo,backendName:"cpu",kernelFunc:$K};function FK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s;Te(r,"avgPool3d");let c=T.computePool3DInfo(r.shape,a,o,1,i,l,u),p=n.data.get(r.dataId).values,d=aS(p,r.shape,r.dtype,v.computeStrides(r.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}var OK={kernelName:Lp,backendName:"cpu",kernelFunc:FK};function MK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=s;Te([r,a],"avgPool3DGrad");let c=T.computePool3DInfo(a.shape,o,i,1,l,u),p=c.strideDepth,d=c.strideHeight,h=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,x=c.dilationHeight,A=c.dilationWidth,b=c.effectiveFilterDepth,w=c.effectiveFilterHeight,I=c.effectiveFilterWidth,k=b-1-c.padInfo.front,R=I-1-c.padInfo.left,_=w-1-c.padInfo.top,D=We(a.shape,"float32"),E=1/(f*m*g),P=n.bufferSync(r);for(let C=0;C<c.batchSize;++C)for(let M=0;M<c.inChannels;++M)for(let W=0;W<c.inDepth;++W)for(let G=0;G<c.inHeight;++G)for(let X=0;X<c.inWidth;++X){let K=W-k,Y=G-_,se=X-R,ee=0;for(let le=0;le<b;le+=y){let re=(K+le)/p;if(!(re<0||re>=c.outDepth||Math.floor(re)!==re))for(let pe=0;pe<w;pe+=x){let ce=(Y+pe)/d;if(!(ce<0||ce>=c.outHeight||Math.floor(ce)!==ce))for(let Ae=0;Ae<I;Ae+=A){let oe=(se+Ae)/h;if(oe<0||oe>=c.outWidth||Math.floor(oe)!==oe)continue;ee+=P.get(C,re,ce,oe,M)}}}D.set(ee*E,C,W,G,X,M)}return n.makeTensorInfo(D.shape,D.dtype,D.values)}var zK={kernelName:qm,backendName:"cpu",kernelFunc:MK};function LK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;Te([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:u}=s,c=T.computePool2DInfo(o.shape,i,l,1,u),p=c.strideHeight,d=c.strideWidth,h=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,x=c.effectiveFilterWidth,A=x-1-c.padInfo.left,b=y-1-c.padInfo.top,w=We(o.shape,"float32"),I=1/(h*f),k=n.data.get(r.dataId).values,R=We(r.shape,"float32",k);for(let _=0;_<c.batchSize;++_)for(let D=0;D<c.inChannels;++D)for(let E=0;E<c.inHeight;++E)for(let P=0;P<c.inWidth;++P){let C=E-b,M=P-A,W=0;for(let G=0;G<y;G+=m){let X=(C+G)/p;if(!(X<0||X>=c.outHeight||Math.floor(X)!==X))for(let K=0;K<x;K+=g){let Y=(M+K)/d;if(Y<0||Y>=c.outWidth||Math.floor(Y)!==Y)continue;W+=R.get(_,X,Y,D)}}w.set(W*I,_,E,P,D)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var BK={kernelName:jm,backendName:"cpu",kernelFunc:LK};function WK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:o,mean:i,variance:l}=t;v.assert(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Te([r,i,l,a,o],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);let c=n.data.get(r.dataId).values,p=n.data.get(i.dataId).values,d=n.data.get(l.dataId).values,h=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=h.length,x=d.length,A=p.length,b=0,w=0,I=0,k=0;for(let R=0;R<c.length;++R)m[R]=f[b++]+(c[R]-p[w++])*h[I++]/Math.sqrt(d[k++]+u),b>=g&&(b=0),w>=A&&(w=0),I>=y&&(I=0),k>=x&&(k=0);return n.makeTensorInfo(r.shape,r.dtype,m)}var VK={kernelName:Ro,backendName:"cpu",kernelFunc:WK};function UK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;Te([r],"batchToSpaceND");let i=a.reduce((y,x)=>y*x),l=T.getReshaped(r.shape,a,i),u=T.getPermuted(l.length,a.length),c=T.getReshapedPermuted(r.shape,a,i),p=T.getSliceBeginCoords(o,a.length),d=T.getSliceSize(c,o,a.length),h=Et({inputs:{x:r},backend:n,attrs:{shape:l}}),f=ys({inputs:{x:h},backend:n,attrs:{perm:u}}),m=Et({inputs:{x:f},backend:n,attrs:{shape:c}}),g=sl({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var GK={kernelName:ul,backendName:"cpu",kernelFunc:UK};function HK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=Dx(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}var jK={kernelName:Xm,backendName:"cpu",kernelFunc:HK};function qK(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=T.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var XK={kernelName:Km,backendName:"cpu",kernelFunc:qK},KK=xt(va,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),ZK={kernelName:va,backendName:"cpu",kernelFunc:KK},YK=e=>{let{x:t}=e.inputs,n=e.backend,s=new Float32Array(v.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values;for(let u=0;u<i.length;u++){let c=i[u],p=l[u];s[u]=Math.hypot(c,p)}return n.makeOutput(s,t.shape,"float32")},JK={kernelName:Wp,backendName:"cpu",kernelFunc:YK};function uc(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var QK={kernelName:Hp,backendName:"cpu",kernelFunc:uc};function cc(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(m=>m.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(m=>v.sizeFromShape(m.shape)>0);if(i.length===1)return Yr({inputs:{x:i[0]},backend:n});let l=i.map(m=>m.shape);if(T.assertParamsConsistent(l,a),i[0].dtype==="complex64"){let m=i.map(b=>nl({inputs:{input:b},backend:n})),g=i.map(b=>uc({inputs:{input:b},backend:n})),y=cc({inputs:m,backend:n,attrs:{axis:a}}),x=cc({inputs:g,backend:n,attrs:{axis:a}}),A=Ts({inputs:{real:y,imag:x},backend:n});return m.forEach(b=>n.disposeIntermediateTensorInfo(b)),g.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),A}let u=i.map(m=>{let g=v.sizeFromShape(m.shape.slice(a));return Et({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),c=u.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=T.computeOutShape(u.map(m=>m.shape),1);let p=u[0].shape[0]===1,d=$x(c,o,t[0].dtype,p),h=T.computeOutShape(i.map(m=>m.shape),a),f=n.makeTensorInfo(h,t[0].dtype,d);return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var eZ={kernelName:cl,backendName:"cpu",kernelFunc:cc};function oS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s;Te([r,a],"conv2d");let p=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!1,p),h=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,x=d.padInfo.top,A=d.dataFormat==="channelsLast",b=new pn(d.outShape,r.dtype),w=v.computeStrides(r.shape),I=v.computeStrides(a.shape),k=w[0],R=A?w[1]:w[2],_=A?w[2]:1,D=A?1:w[1],E=b.strides[0],P=A?b.strides[1]:b.strides[2],C=A?b.strides[2]:1,M=A?1:b.strides[1],W=n.data.get(r.dataId).values,G=n.data.get(a.dataId).values,X=b.values;for(let K=0;K<d.batchSize;++K){let Y=K*k,se=K*E;for(let ee=0;ee<d.outHeight;++ee){let le=se+ee*P,re=ee*d.strideHeight-x;for(let pe=0;pe<h;++pe){let ce=re+pe*m;if(ce<0||ce>=d.inHeight)continue;let Ae=pe*I[0],oe=Y+ce*R;for(let Re=0;Re<d.outWidth;++Re){let _e=le+Re*C,Ve=Re*d.strideWidth-y;for(let Fe=0;Fe<f;++Fe){let ot=Ve+Fe*g;if(ot<0||ot>=d.inWidth)continue;let gt=Ae+Fe*I[1],pt=oe+ot*_,yt=gt;for(let Pe=0;Pe<d.inChannels;++Pe){let Ct=W[pt+Pe*D];for(let kt=0;kt<d.outChannels;++kt)X[_e+kt*M]+=Ct*G[yt+kt];yt+=d.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,X)}var tZ={kernelName:xo,backendName:"cpu",kernelFunc:oS};function nZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;Te([r,a],"conv2dBackpropFilter");let p=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,c,o,1,i,u,!1,p),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=d,y=d.dataFormat==="channelsLast",x=new pn(d.filterShape,"float32"),A=d.padInfo.left,b=d.padInfo.top,w=n.data.get(r.dataId).values,I=n.data.get(a.dataId).values,k=new pn(r.shape,r.dtype,w),R=new pn(a.shape,a.dtype,I);for(let _=0;_<m;++_){let D=Math.max(0,Math.ceil((b-_)/h)),E=Math.min(d.outHeight,(d.inHeight+b-_)/h);for(let P=0;P<g;++P){let C=Math.max(0,Math.ceil((A-P)/f)),M=Math.min(d.outWidth,(d.inWidth+A-P)/f);for(let W=0;W<d.inChannels;++W)for(let G=0;G<d.outChannels;++G){let X=0;for(let K=0;K<d.batchSize;++K)for(let Y=D;Y<E;++Y){let se=_+Y*h-b;for(let ee=C;ee<M;++ee){let le=P+ee*f-A;y?X+=k.get(K,se,le,W)*R.get(K,Y,ee,G):X+=k.get(K,W,se,le)*R.get(K,G,Y,ee)}}x.set(X,_,P,W,G)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var sZ={kernelName:Zm,backendName:"cpu",kernelFunc:nZ};function rZ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s;Te([r,a],"conv2dBackpropInput");let p=v.computeStrides(a.shape),d=v.computeStrides(r.shape),h=T.convertConv2DDataFormat(u),f=T.computeConv2DInfo(o,a.shape,i,1,l,c,!1,h),m=new pn(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,x=n.data.get(a.dataId).values,[A,b,w]=p,{batchSize:I,filterHeight:k,filterWidth:R,inChannels:_,inHeight:D,inWidth:E,outChannels:P,outHeight:C,outWidth:M,strideHeight:W,strideWidth:G}=f;h=f.dataFormat;let X=k-1-f.padInfo.top,K=R-1-f.padInfo.left,Y=h==="channelsLast",se=m.strides[0],ee=Y?m.strides[1]:m.strides[2],le=Y?m.strides[2]:1,re=Y?1:m.strides[1],pe=d[0],ce=Y?d[1]:d[2],Ae=Y?d[2]:1,oe=Y?1:d[1];for(let Re=0;Re<I;++Re)for(let _e=0;_e<_;++_e)for(let Ve=0;Ve<D;++Ve){let Fe=Ve-X,ot=Math.max(0,Math.ceil(Fe/W)),gt=Math.min(C,(k+Fe)/W);for(let pt=0;pt<E;++pt){let yt=pt-K,Pe=Math.max(0,Math.ceil(yt/G)),Ct=Math.min(M,(R+yt)/G),kt=0;for(let Jt=ot;Jt<gt;++Jt){let vs=Jt*W-Fe;for(let cn=Pe;cn<Ct;++cn){let qn=cn*G-yt,ws=pe*Re+ce*Jt+Ae*cn,ks=A*(k-1-vs)+b*(R-1-qn)+w*_e;for(let Pn=0;Pn<P;++Pn){let Ws=y[ws+oe*Pn],Xn=x[ks+Pn];kt+=Ws*Xn}}}let jn=se*Re+ee*Ve+le*pt+re*_e;g[jn]=kt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var aZ={kernelName:bo,backendName:"cpu",kernelFunc:rZ};function oZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s;Te([r,a],"conv3d");let u=T.computeConv3DInfo(r.shape,a.shape,o,l,i),{filterDepth:c,filterHeight:p,filterWidth:d,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,x=g.left,A=g.top,b=new pn(u.outShape,r.dtype),w=n.data.get(r.dataId).values,I=n.data.get(a.dataId).values,k=b.values,R=v.computeStrides(r.shape),_=v.computeStrides(a.shape);for(let D=0;D<u.batchSize;++D){let E=D*R[0],P=D*b.strides[0];for(let C=0;C<u.outDepth;++C){let M=P+C*b.strides[1],W=C*u.strideDepth-y;for(let G=0;G<c;++G){let X=W+G*h;if(X<0||X>=u.inDepth)continue;let K=G*_[0],Y=E+X*R[1];for(let se=0;se<u.outHeight;++se){let ee=M+se*b.strides[2],le=se*u.strideHeight-A;for(let re=0;re<p;++re){let pe=le+re*f;if(pe<0||pe>=u.inHeight)continue;let ce=K+re*_[1],Ae=Y+pe*R[2];for(let oe=0;oe<u.outWidth;++oe){let Re=ee+oe*u.outChannels,_e=oe*u.strideWidth-x;for(let Ve=0;Ve<d;++Ve){let Fe=_e+Ve*m;if(Fe<0||Fe>=u.inWidth)continue;let ot=ce+Ve*_[2],gt=Ae+Fe*u.inChannels,pt=ot;for(let yt=0;yt<u.inChannels;++yt){let Pe=w[gt+yt];for(let Ct=0;Ct<u.outChannels;++Ct)k[Re+Ct]+=Pe*I[pt+Ct];pt+=u.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var iZ={kernelName:Vp,backendName:"cpu",kernelFunc:oZ};function lZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s;Te([r,a],"conv3dBackpropFilterV2");let u=v.computeStrides(r.shape),c=v.computeStrides(a.shape),p=T.computeConv3DInfo(r.shape,l,o,1,i),d=p.strideDepth,h=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,x=new pn(p.filterShape,"float32"),A=x.values,[b,w,I,k]=x.strides,R=n.data.get(a.dataId).values,[_,D,E,P]=c,C=n.data.get(r.dataId).values,[M,W,G,X]=u,K=p.padInfo.front,Y=p.padInfo.left,se=p.padInfo.top;for(let ee=0;ee<m;++ee){let le=Math.max(0,Math.ceil((K-ee)/d)),re=Math.min(p.outDepth,(p.inDepth+K-ee)/d),pe=ee*b;for(let ce=0;ce<g;++ce){let Ae=Math.max(0,Math.ceil((se-ce)/h)),oe=Math.min(p.outHeight,(p.inHeight+se-ce)/h),Re=ce*w+pe;for(let _e=0;_e<y;++_e){let Ve=Math.max(0,Math.ceil((Y-_e)/f)),Fe=Math.min(p.outWidth,(p.inWidth+Y-_e)/f),ot=_e*I+Re;for(let gt=0;gt<p.inChannels;++gt){let pt=gt*k+ot;for(let yt=0;yt<p.outChannels;++yt){let Pe=0;for(let Ct=0;Ct<p.batchSize;++Ct){let kt=Ct*M,jn=Ct*_;for(let Jt=le;Jt<re;++Jt){let cn=(ee+Jt*d-K)*W+kt,qn=Jt*D+jn;for(let ws=Ae;ws<oe;++ws){let Pn=(ce+ws*h-se)*G+cn,Ws=ws*E+qn;for(let Xn=Ve;Xn<Fe;++Xn){let oa=(_e+Xn*f-Y)*X+Pn,vu=Xn*P+Ws;Pe+=C[oa+gt]*R[vu+yt]}}}}A[pt+yt]=Pe}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var uZ={kernelName:Ym,backendName:"cpu",kernelFunc:lZ};function cZ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s;Te([r],"conv3dBackpropInputV2");let u=v.computeStrides(r.shape),c=v.computeStrides(a.shape),p=T.computeConv3DInfo(l,a.shape,i,1,o),d=new pn(p.inShape,"float32"),h=d.values,[f,m,g,y]=d.strides,x=n.data.get(r.dataId).values,[A,b,w,I]=u,k=n.data.get(a.dataId).values,[R,_,D,E]=c,{batchSize:P,filterDepth:C,filterHeight:M,filterWidth:W,inChannels:G,inDepth:X,inHeight:K,inWidth:Y,outChannels:se,outDepth:ee,outHeight:le,outWidth:re,strideDepth:pe,strideHeight:ce,strideWidth:Ae}=p,oe=C-1-p.padInfo.front,Re=M-1-p.padInfo.top,_e=W-1-p.padInfo.left;for(let Ve=0;Ve<P;++Ve)for(let Fe=0;Fe<G;++Fe)for(let ot=0;ot<X;++ot){let gt=ot-oe,pt=Math.max(0,Math.ceil(gt/pe)),yt=Math.min(ee,(C+gt)/pe);for(let Pe=0;Pe<K;++Pe){let Ct=Pe-Re,kt=Math.max(0,Math.ceil(Ct/ce)),jn=Math.min(le,(M+Ct)/ce);for(let Jt=0;Jt<Y;++Jt){let vs=Jt-_e,cn=Math.max(0,Math.ceil(vs/Ae)),qn=Math.min(re,(W+vs)/Ae),ws=0;for(let ks=pt;ks<yt;++ks){let Pn=ks*pe-gt;for(let Ws=kt;Ws<jn;++Ws){let Xn=Ws*ce-Ct;for(let aa=cn;aa<qn;++aa){let oa=aa*Ae-vs,vu=A*Ve+b*ks+w*Ws+I*aa,Ma=R*(C-1-Pn)+_*(M-1-Xn)+D*(W-1-oa)+E*Fe;for(let ia=0;ia<se;++ia){let zd=x[vu+ia],wu=k[Ma+ia];ws+=zd*wu}}}}h[f*Ve+m*ot+g*Pe+y*Jt+Fe]=ws}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}var dZ={kernelName:Jm,backendName:"cpu",kernelFunc:cZ},pZ=xt(vo,e=>Math.cos(e)),hZ={kernelName:vo,backendName:"cpu",kernelFunc:pZ},fZ=xt(wo,e=>Math.cosh(e)),mZ={kernelName:wo,backendName:"cpu",kernelFunc:fZ};function gZ(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=s,[c,p,d,h]=r.shape,f=a.shape[0],[m,g]=i,y=We([f,m,g,h],"float32"),x=n.data.get(a.dataId).values,A=n.data.get(o.dataId).values,b=n.data.get(r.dataId).values,w=v.computeStrides(r.shape),I=v.computeStrides(y.shape);for(let k=0;k<f;k++){let R=k*4,_=x[R],D=x[R+1],E=x[R+2],P=x[R+3],C=A[k];if(C>=c)continue;let M=m>1?(E-_)*(p-1)/(m-1):0,W=g>1?(P-D)*(d-1)/(g-1):0;for(let G=0;G<m;G++){let X=m>1?_*(p-1)+G*M:.5*(_+E)*(p-1);if(X<0||X>p-1){for(let K=0;K<g;K++)for(let Y=0;Y<h;Y++){let se=Y+K*I[2]+G*I[1]+k*I[0];y.values[se]=u}continue}if(l==="bilinear"){let K=Math.floor(X),Y=Math.ceil(X),se=X-K;for(let ee=0;ee<g;ee++){let le=g>1?D*(d-1)+ee*W:.5*(D+P)*(d-1);if(le<0||le>d-1){for(let Ae=0;Ae<h;Ae++){let oe=Ae+ee*I[2]+G*I[1]+k*I[0];y.values[oe]=u}continue}let re=Math.floor(le),pe=Math.ceil(le),ce=le-re;for(let Ae=0;Ae<h;Ae++){let oe=Ae+re*w[2]+K*w[1]+C*w[0],Re=b[oe];oe=Ae+pe*w[2]+K*w[1]+C*w[0];let _e=b[oe];oe=Ae+re*w[2]+Y*w[1]+C*w[0];let Ve=b[oe];oe=Ae+pe*w[2]+Y*w[1]+C*w[0];let Fe=b[oe],ot=Re+(_e-Re)*ce,gt=Ve+(Fe-Ve)*ce;oe=Ae+ee*I[2]+G*I[1]+k*I[0],y.values[oe]=ot+(gt-ot)*se}}}else for(let K=0;K<g;++K){let Y=g>1?D*(d-1)+K*W:.5*(D+P)*(d-1);if(Y<0||Y>d-1){for(let le=0;le<h;le++){let re=le+K*I[2]+G*I[1]+k*I[0];y.values[re]=u}continue}let se=Math.round(Y),ee=Math.round(X);for(let le=0;le<h;le++){let re=le+se*w[2]+ee*w[1]+C*w[0],pe=le+K*I[2]+G*I[1]+k*I[0];y.values[pe]=b[re]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var yZ={kernelName:pl,backendName:"cpu",kernelFunc:gZ};function AZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;Te(r,"cumprod");let l=T.getAxesPermutation([a],r.shape.length),u=r;l!=null&&(u=ys({inputs:{x:r},backend:n,attrs:{perm:l}}));let c=T.getInnerMostAxes(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=Mn(u.dtype,"int32"),d=v.makeOnesTypedArray(v.sizeFromShape(u.shape),p),h=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<h.length;y+=f)for(let x=0;x<f;x++){let A=m(y,x);if(x===0)d[A]=o?1:h[A];else{let b=m(y,x-1);d[A]=o?h[b]*d[b]:h[A]*d[b]}}let g=n.makeTensorInfo(u.shape,p,d);if(l!=null){let y=T.getUndoAxesPermutation(l),x=ys({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),x}return g}var xZ={kernelName:dl,backendName:"cpu",kernelFunc:AZ};function bZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;Te(r,"cumsum");let l=T.getAxesPermutation([a],r.shape.length),u=r;l!=null&&(u=ys({inputs:{x:r},backend:n,attrs:{perm:l}}));let c=T.getInnerMostAxes(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=Mn(u.dtype,"int32"),d=v.makeZerosTypedArray(v.sizeFromShape(u.shape),p),h=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<h.length;y+=f)for(let x=0;x<f;x++){let A=m(y,x);if(x===0)d[A]=o?0:h[A];else{let b=m(y,x-1);d[A]=o?h[b]+d[b]:h[A]+d[b]}}let g=n.makeTensorInfo(u.shape,p,d);if(l!=null){let y=T.getUndoAxesPermutation(l),x=ys({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),x}return g}var vZ={kernelName:ko,backendName:"cpu",kernelFunc:bZ};function wZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=Dx(l,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}else if(r.shape.length===2){let l=n.bufferSync(r),u=n.bufferSync(a),c=xI(l,u,o,i);return n.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var kZ={kernelName:Qm,backendName:"cpu",kernelFunc:wZ};function IZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s;v.assert(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);let i=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],p=l*a,d=u*a,h=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(i*p*d*h),g=0;for(let y=0;y<i;++y)for(let x=0;x<p;++x){let A=Math.floor(x/a),b=x%a;for(let w=0;w<d;++w){let I=Math.floor(w/a),k=w%a,R=(b*a+k)*h;for(let _=0;_<h;++_){let E=_+R+c*(I+u*(A+l*y));m[g++]=f[E]}}}return n.makeTensorInfo([i,p,d,h],r.dtype,m)}var SZ={kernelName:hl,backendName:"cpu",kernelFunc:IZ};function iS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=s;Te([r,a],"depthwiseConv2DNative");let c=v.computeStrides(r.shape),p=v.computeStrides(a.shape),d=l;d==null&&(d=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);let h=T.computeConv2DInfo(r.shape,a.shape,o,d,i,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:x}=h,A=x.left,b=x.top,w=h.outChannels/h.inChannels,I=new pn(h.outShape,r.dtype),k=n.data.get(r.dataId).values,R=n.data.get(a.dataId).values,_=I.values;for(let D=0;D<h.batchSize;++D){let E=D*c[0],P=D*I.strides[0];for(let C=0;C<h.outHeight;++C){let M=P+C*I.strides[1],W=C*h.strideHeight-b;for(let G=0;G<f;++G){let X=W+G*g;if(X<0||X>=h.inHeight)continue;let K=G*p[0],Y=E+X*c[1];for(let se=0;se<h.outWidth;++se){let ee=M+se*I.strides[2],le=se*h.strideWidth-A;for(let re=0;re<m;++re){let pe=le+re*y;if(pe<0||pe>=h.inWidth)continue;let ce=K+re*p[1],Ae=Y+pe*h.inChannels,oe=ee,Re=ce;for(let _e=0;_e<h.inChannels;++_e){let Ve=k[Ae+_e];for(let Fe=0;Fe<w;++Fe)_[oe+Fe]+=Ve*R[Re+Fe];oe+=w,Re+=w}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}var CZ={kernelName:Io,backendName:"cpu",kernelFunc:iS};function TZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=s;Te([r,a],"depthwiseConv2dNativeBackpropFilter");let p=T.computeConv2DInfo(r.shape,c,o,i,l,u,!0),{strideHeight:d,strideWidth:h,filterHeight:f,filterWidth:m}=p,g=new pn(p.filterShape,"float32"),y=p.padInfo.left,x=p.padInfo.top,A=p.outChannels/p.inChannels,b=n.data.get(r.dataId).values,w=new pn(r.shape,r.dtype,b),I=n.data.get(a.dataId).values,k=new pn(a.shape,a.dtype,I);for(let R=0;R<f;++R){let _=Math.max(0,Math.ceil((x-R)/d)),D=Math.min(p.outHeight,(p.inHeight+x-R)/d);for(let E=0;E<m;++E){let P=Math.max(0,Math.ceil((y-E)/h)),C=Math.min(p.outWidth,(p.inWidth+y-E)/h);for(let M=0;M<p.outChannels;++M){let W=Math.trunc(M/A),G=M%A,X=0;for(let K=0;K<p.batchSize;++K)for(let Y=_;Y<D;++Y){let se=R+Y*d-x;for(let ee=P;ee<C;++ee){let le=E+ee*h-y;X+=w.get(K,se,le,W)*k.get(K,Y,ee,M)}}g.set(X,R,E,W,G)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var NZ={kernelName:e0,backendName:"cpu",kernelFunc:TZ};function EZ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=s;Te([r,a],"depthwiseConv2DNativeBackpropInput");let p=v.computeStrides(r.shape),d=v.computeStrides(a.shape),h=T.computeConv2DInfo(c,a.shape,o,i,l,u,!0),f=new pn(h.inShape,"float32"),m=f.values,[g,y,x]=f.strides,A=n.data.get(r.dataId).values,[b,w,I]=p,k=n.data.get(a.dataId).values,[R,_,D]=d,{batchSize:E,filterHeight:P,filterWidth:C,inChannels:M,inHeight:W,inWidth:G,outChannels:X,outHeight:K,outWidth:Y,strideHeight:se,strideWidth:ee}=h,le=P-1-h.padInfo.top,re=C-1-h.padInfo.left,pe=X/M;for(let ce=0;ce<E;++ce)for(let Ae=0;Ae<M;++Ae)for(let oe=0;oe<W;++oe){let Re=oe-le,_e=Math.max(0,Math.ceil(Re/se)),Ve=Math.min(K,(P+Re)/se);for(let Fe=0;Fe<G;++Fe){let ot=Fe-re,gt=Math.max(0,Math.ceil(ot/ee)),pt=Math.min(Y,(C+ot)/ee),yt=0;for(let Pe=_e;Pe<Ve;++Pe){let Ct=Pe*se-Re;for(let kt=gt;kt<pt;++kt){let jn=kt*ee-ot,Jt=b*ce+w*Pe+I*kt,vs=R*(P-1-Ct)+_*(C-1-jn)+D*Ae;for(let cn=0;cn<pe;++cn){let qn=Ae*pe+cn,ws=A[Jt+qn],ks=k[vs+cn];yt+=ws*ks}}}m[g*ce+y*oe+x*Fe+Ae]=yt}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var RZ={kernelName:t0,backendName:"cpu",kernelFunc:EZ};function _Z(e){let{inputs:t,backend:n}=e,{x:s}=t,r=v.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,o=We([r,r],s.dtype),i=o.values;for(let u=0;u<a.length;u++)i[u*r+u]=a[u];let l=[...s.shape,...s.shape];return n.makeTensorInfo(l,o.dtype,o.values)}var DZ={kernelName:n0,backendName:"cpu",kernelFunc:_Z},$Z={kernelName:Up,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r}=e,{strides:a,pad:o,dilations:i}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,p=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:A,strideHeight:b,strideWidth:w,filterHeight:I,filterWidth:k,dilationHeight:R,dilationWidth:_,outShape:D}=T.computeDilation2DInfo(s.shape,r.shape,a,o,"NHWC",i),E=v.sizeFromShape(D),P=D.length,C=v.getArrayFromDType(s.dtype,E);for(let W=0;W<h;++W)for(let G=0;G<y;++G){let X=G*b-A.top;for(let K=0;K<x;++K){let Y=K*w-A.left;for(let se=0;se<g;++se){let ee=Number.MIN_SAFE_INTEGER;for(let re=0;re<I;++re){let pe=X+re*R;if(pe>=0&&pe<f)for(let ce=0;ce<k;++ce){let Ae=Y+ce*_;if(Ae>=0&&Ae<m){let oe=v.locToIndex([W,pe,Ae,se],c,v.computeStrides(s.shape)),Re=v.locToIndex([re,ce,se],d,v.computeStrides(r.shape)),_e=u[oe]+p[Re];_e>ee&&(ee=_e)}}}let le=v.locToIndex([W,G,K,se],P,v.computeStrides(D));C[le]=ee}}}return{dataId:l.write(v.toTypedArray(C,s.dtype),D,s.dtype),shape:D,dtype:s.dtype}}},PZ={kernelName:mm,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,u=t,c=v.toNestedArray(s.shape,u.data.get(s.dataId).values),p=v.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:w,filterWidth:I,dilationHeight:k,dilationWidth:R,outShape:_}=T.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);v.assert(a.rank===_.length,()=>`Error in ${mm}, dy must have the same rank as output ${_.length}, but got ${a.rank}`);let D=v.toNestedArray(_,u.data.get(a.dataId).values),E=v.makeZerosNestedTypedArray(r.shape,r.dtype);for(let C=0;C<d;++C)for(let M=0;M<g;++M){let W=M*A-x.top;for(let G=0;G<y;++G){let X=G*b-x.left;for(let K=0;K<m;++K){let Y=Number.MIN_SAFE_INTEGER,se=0,ee=0;for(let le=0;le<w;++le){let re=W+le*k;if(re>=0&&re<h)for(let pe=0;pe<I;++pe){let ce=X+pe*R;if(ce>=0&&ce<f){let Ae=c[C][re][ce][K]+p[le][pe][K];Ae>Y&&(Y=Ae,se=le,ee=pe)}}}E[se][ee][K]+=D[C][M][G][K]}}}return{dataId:u.write(v.toTypedArray(E,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},FZ={kernelName:fm,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,u=t,c=v.toNestedArray(s.shape,u.data.get(s.dataId).values),p=v.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:w,filterWidth:I,dilationHeight:k,dilationWidth:R,outShape:_}=T.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);v.assert(a.rank===_.length,()=>`Error in ${fm}, dy must have the same rank as output ${_.length}, but got ${a.rank}`);let D=v.toNestedArray(_,u.data.get(a.dataId).values),E=v.makeZerosNestedTypedArray(s.shape,s.dtype);for(let C=0;C<d;++C)for(let M=0;M<g;++M){let W=M*A-x.top;for(let G=0;G<y;++G){let X=G*b-x.left;for(let K=0;K<m;++K){let Y=Number.MIN_SAFE_INTEGER,se=W<0?0:W,ee=X<0?0:X;for(let le=0;le<w;++le){let re=W+le*k;if(re>=0&&re<h)for(let pe=0;pe<I;++pe){let ce=X+pe*R;if(ce>=0&&ce<f){let Ae=c[C][re][ce][K]+p[le][pe][K];Ae>Y&&(Y=Ae,se=re,ee=ce)}}}E[C][se][ee][K]+=D[C][M][G][K]}}}return{dataId:u.write(v.toTypedArray(E,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function Fh(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Te(r,"sum");let i;r.dtype==="bool"?i=lo({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):i=Yr({inputs:{x:r},backend:n});let l=i.shape.length,u=v.parseAxisParam(a,i.shape),c=T.getAxesPermutation(u,l),p=u,d=i;c!=null&&(d=ys({inputs:{x:i},backend:n,attrs:{perm:c}}),p=T.getInnerMostAxes(p.length,l)),T.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[h,f]=T.computeOutAndReduceShapes(d.shape,p),m=T.upcastType(d.dtype,"int32"),g=Dm(n,h,m),y=v.sizeFromShape(f),x=n.data.get(g.dataId).values,A=n.data.get(d.dataId).values;for(let b=0;b<x.length;++b){let w=b*y,I=0;for(let k=0;k<y;++k)I+=A[w+k];x[b]=I}if(o){let b=T.expandShapeToKeepDim(g.shape,u),w=g;g=Et({inputs:{x:g},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(w)}return n.disposeIntermediateTensorInfo(i),c!=null&&n.disposeIntermediateTensorInfo(d),g}var OZ={kernelName:ti,backendName:"cpu",kernelFunc:Fh};function MZ(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,l,a);let{path:u,steps:c}=T.getEinsumComputePath(i,l),p=c.length,d=null,h=o.length,f=[];for(let m=0;m<p;++m){for(let g of c[m]){let{permutationIndices:y,expandDims:x}=T.getEinsumPermutation(h,l[g]),A;T.isIdentityPermutation(y)?A=a[g]:(A=ys({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(A.shape,b)||(A=Et({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),d===null?d=A:(d=b2({inputs:{a:A,b:d},backend:n}),f.push(d))}m<p-1&&(u[m]>=0&&(d=Fh({inputs:{x:d},backend:n,attrs:{axis:u[m]-(o.length-h),keepDims:!1}}),f.push(d)),h--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var zZ={kernelName:Gp,backendName:"cpu",kernelFunc:MZ};function LZ(e){let{inputs:t,backend:n}=e,{dy:s,y:r}=t;Te([s,r],"eluGrad");let a=new Float32Array(v.sizeFromShape(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values;for(let l=0;l<o.length;++l){let u=o[l];u>=1?a[l]=i[l]:a[l]=i[l]*(u+1)}return n.makeTensorInfo(r.shape,"float32",a)}var BZ={kernelName:s0,backendName:"cpu",kernelFunc:LZ},WZ=T.ERF_P,VZ=T.ERF_A1,UZ=T.ERF_A2,GZ=T.ERF_A3,HZ=T.ERF_A4,jZ=T.ERF_A5,qZ=xt(Ic,e=>{let t=Math.sign(e),n=Math.abs(e),s=1/(1+WZ*n);return t*(1-((((jZ*s+HZ)*s+GZ)*s+UZ)*s+VZ)*s*Math.exp(-n*n))}),XZ={kernelName:Ic,backendName:"cpu",kernelFunc:qZ};function Fm(e){let{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(v.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),Et({inputs:{x:r},backend:n,attrs:{shape:i}})}var KZ={kernelName:ml,backendName:"cpu",kernelFunc:Fm},ZZ=ln((e,t)=>e/t),Ux=vn(So,ZZ),ry={kernelName:So,backendName:"cpu",kernelFunc:Ux};function lS(e,t,n){let s=e.shape,r=s[0],a=s[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,u=[r,a],c=v.sizeFromShape(u),p=v.getTypedArrayFromDType("float32",c),d=v.getTypedArrayFromDType("float32",c);for(let g=0;g<r;g++){let y=sl({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),x=sl({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,a]}}),A=Ts({inputs:{real:y,imag:x},backend:n}),{real:b,imag:w}=YZ(A,t,n),I=T.mergeRealAndImagArrays(b,w);for(let k=0;k<a;k++){let R=T.getComplexWithIndex(I,k);p[g*a+k]=R.real,d[g*a+k]=R.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(A)}let h=n.makeTensorInfo(u,"float32",p),f=n.makeTensorInfo(u,"float32",d),m=Ts({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function YZ(e,t,n){let s=v.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(JZ(s)){let i=ay(a,o,s,t,n),l=[e.shape[0],e.shape[1]];if(t){let u=n.makeTensorInfo(l,"float32",i.real),c=n.makeTensorInfo(l,"float32",i.imag),p=n.makeTensorInfo([],"float32",v.createScalarValue(s,"float32")),d=Yr({inputs:{x:p},backend:n}),h=ry.kernelFunc({inputs:{a:u,b:p},backend:n}),f=ry.kernelFunc({inputs:{a:c,b:d},backend:n}),m=n.data.get(h.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{let i=T.mergeRealAndImagArrays(a,o),l=QZ(i,s,t);return T.splitRealAndImagArrays(l)}}function JZ(e){return(e&e-1)===0}function ay(e,t,n,s,r){if(n===1)return{real:e,imag:t};let a=T.mergeRealAndImagArrays(e,t),o=n/2,i=T.complexWithEvenIndex(a),l=i.real,u=i.imag,c=[l.length],p=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),h=Ts({inputs:{real:p,imag:d},backend:r}),f=T.complexWithOddIndex(a),m=f.real,g=f.imag,y=[m.length],x=r.makeTensorInfo(y,"float32",m),A=r.makeTensorInfo(y,"float32",g),b=Ts({inputs:{real:x,imag:A},backend:r}),w=ay(l,u,o,s,r),I=w.real,k=w.imag,R=[I.length],_=r.makeTensorInfo(R,"float32",I),D=r.makeTensorInfo(R,"float32",k),E=Ts({inputs:{real:_,imag:D},backend:r}),P=ay(m,g,o,s,r),C=P.real,M=P.imag,W=[C.length],G=r.makeTensorInfo(W,"float32",C),X=r.makeTensorInfo(W,"float32",M),K=Ts({inputs:{real:G,imag:X},backend:r}),Y=T.exponents(n,s),se=[Y.real.length],ee=r.makeTensorInfo(se,"float32",Y.real),le=r.makeTensorInfo(se,"float32",Y.imag),re=Ts({inputs:{real:ee,imag:le},backend:r}),pe=b2({inputs:{a:re,b:K},backend:r}),ce=lc({inputs:{a:E,b:pe},backend:r}),Ae=Wx({inputs:{a:E,b:pe},backend:r}),oe=nl({inputs:{input:ce},backend:r}),Re=nl({inputs:{input:Ae},backend:r}),_e=uc({inputs:{input:ce},backend:r}),Ve=uc({inputs:{input:Ae},backend:r}),Fe=cc({inputs:[oe,Re],backend:r,attrs:{axis:0}}),ot=cc({inputs:[_e,Ve],backend:r,attrs:{axis:0}}),gt=r.data.get(Fe.dataId).values,pt=r.data.get(ot.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(le),r.disposeIntermediateTensorInfo(re),r.disposeIntermediateTensorInfo(pe),r.disposeIntermediateTensorInfo(ce),r.disposeIntermediateTensorInfo(Ae),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(_e),r.disposeIntermediateTensorInfo(Re),r.disposeIntermediateTensorInfo(Ve),r.disposeIntermediateTensorInfo(Fe),r.disposeIntermediateTensorInfo(ot),{real:gt,imag:pt}}function QZ(e,t,n){let s=new Float32Array(t*2);for(let r=0;r<t;r++){let a=0,o=0;for(let i=0;i<t;i++){let l=T.exponent(r*i,t,n),u=T.getComplexWithIndex(e,i);a+=u.real*l.real-u.imag*l.imag,o+=u.real*l.imag+u.imag*l.real}n&&(a/=t,o/=t),T.assignToTypedArray(s,a,o,r)}return s}function eY(e){let{inputs:t,backend:n}=e,{input:s}=t,r=v.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=Et({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=lS(i,!1,n),u=Et({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var tY={kernelName:r0,backendName:"cpu",kernelFunc:eY};function Gx(e){let{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,o=a||v.inferDtype(r),i=v.getArrayFromDType(o,v.sizeFromShape(s));return sY(i,r,o),t.makeTensorInfo(s,o,i)}var nY={kernelName:Sc,backendName:"cpu",kernelFunc:Gx};function sY(e,t,n){e.fill(t)}var rY={kernelName:yl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,r=n,a=v.getTypedArrayFromDType(s.dtype,v.sizeFromShape(s.shape)),[o,i,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<o;d++){let h=d*l*i*u;for(let f=0;f<i;f++){let m=f*(l*u);for(let g=0;g<l;g++){let y=g*u;for(let x=0;x<u;x++){let A=Math.round(l-g-1),b=h+m+y+x,w=c[b];if(A>=0&&A<l){let I=A*u,k=h+m+I+x;w=c[k]}a[b]=w}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},aY=ln((e,t)=>Math.floor(e/t)),oY=vn(Eo,aY,null,"int32"),iY={kernelName:Eo,backendName:"cpu",kernelFunc:oY};function lY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=oS({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d}});if(o){let g=m;if(c==="NCHW"&&o.shape.length===1&&o.shape[0]!==1){let y=Et({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=lc({inputs:{a:m,b:y},backend:n}),n.disposeIntermediateTensorInfo(y)}else m=lc({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(g)}if(h){let g=m;if(c==="NCHW"&&h==="prelu"&&i.shape.length===1&&i.shape[0]!==1){let y=Et({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Pm(n,m,h,y,f),n.disposeIntermediateTensorInfo(y)}else m=Pm(n,m,h,i,f);n.disposeIntermediateTensorInfo(g)}return m}var uY={kernelName:eo,backendName:"cpu",kernelFunc:lY};function cY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=iS({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d}});if(o){let g=m;m=lc({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=Pm(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var dY={kernelName:to,backendName:"cpu",kernelFunc:cY};function pY(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=v.sizeFromShape(s.shape),o=r.shape,i=o[o.length-1],[l,u,c,p]=T.prepareAndValidate(s,r);if(u===0)return n.makeTensorInfo(l,s.dtype,[]);let d=n.data.get(r.dataId).values,h=n.bufferSync(s),f=TI(d,h,s.dtype,u,i,c,p,s.shape,a);return n.makeTensorInfo(l,s.dtype,f.values)}var hY={kernelName:xl,backendName:"cpu",kernelFunc:pY};function fY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s;Te([r,a],"gatherV2");let l=v.parseAxisParam(o,r.shape)[0],u=n.data.get(a.dataId).values,c=r.shape[l];for(let b=0;b<u.length;++b){let w=u[b];v.assert(w<=c-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${c-1}]`)}let p=i;i==null&&(p=0);let d=v.sizeFromShape(a.shape),h=T.segment_util.collectGatherOpShapeInfo(r,a,l,p),f=Et({inputs:{x:r},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=Et({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,d/h.batchSize]}}),g=[h.batchSize,h.outerSize,d/h.batchSize,h.sliceSize],y=n.bufferSync(m),x=n.bufferSync(f),A=NI(x,y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,A.dtype,A.values)}var mY={kernelName:Al,backendName:"cpu",kernelFunc:fY};function gY(e){let{inputs:t,backend:n}=e,{input:s}=t,r=v.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=Et({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=lS(i,!0,n),u=Et({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var yY={kernelName:a0,backendName:"cpu",kernelFunc:gY},AY=xt(Cc,e=>Number.isFinite(e)?1:0,"bool"),xY={kernelName:Cc,backendName:"cpu",kernelFunc:AY},bY=xt(Tc,e=>Math.abs(e)===1/0?1:0,"bool"),vY={kernelName:Tc,backendName:"cpu",kernelFunc:bY},wY=xt(Nc,e=>Number.isNaN(e)?1:0,"bool"),kY={kernelName:Nc,backendName:"cpu",kernelFunc:wY};function IY(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=$I(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var SY={kernelName:o0,backendName:"cpu",kernelFunc:IY},CY=xt(Ec,e=>Math.log1p(e)),TY={kernelName:Ec,backendName:"cpu",kernelFunc:CY},NY=ln((e,t)=>e&&t),EY=vn(kl,NY,null,"bool"),RY={kernelName:kl,backendName:"cpu",kernelFunc:EY},_Y=xt(Il,e=>e?0:1,"bool"),DY={kernelName:Il,backendName:"cpu",kernelFunc:_Y},$Y=ln((e,t)=>e||t),PY=vn(Rc,$Y,null,"bool"),FY={kernelName:Rc,backendName:"cpu",kernelFunc:PY};function OY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s;Te(r,"LRN");let u=r.shape[3],c=u-1,p=n.data.get(r.dataId).values,d=v.sizeFromShape(r.shape),h=new Float32Array(d);function f(m){let g=m%u,y=m-g+Math.max(0,g-a),x=m-g+Math.min(g+a,c),A=0;for(;y<=x;y++){let b=p[y];A+=b*b}return A}for(let m=0;m<d;m++){let g=f(m),y=p[m]*Math.pow(o+i*g,-l);h[m]=y}return n.makeTensorInfo(r.shape,r.dtype,h)}var MY={kernelName:jp,backendName:"cpu",kernelFunc:OY};function zY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=s;Te(o,"LRNGrad");let p=v.sizeFromShape(o.shape),d=o.shape[3],h=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(p),y=p;for(let x=0;x<y;x++){let A=x%d,b=x-A+Math.max(0,A-i),w=x-A+Math.min(d,A+i+1),I=0;for(let k=b;k<w;k++)I+=Math.pow(f[k],2);I=u*I+l;for(let k=b;k<w;k++){let R=-2*u*c*f[k]*m[x]/I;x===k&&(R+=Math.pow(I,-c)),R*=h[x],g[k]+=R}}return n.makeTensorInfo(o.shape,r.dtype,g)}var LY={kernelName:i0,backendName:"cpu",kernelFunc:zY};function uS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=n,l=r.shape,u=l.length,c=v.parseAxisParam(a,l),p=c,d=T.getAxesPermutation(p,u),h=i.data.get(r.dataId).values;if(d!=null){let b=new Array(u);for(let w=0;w<b.length;w++)b[w]=l[d[w]];h=Fx(h,l,r.dtype,d,b),p=T.getInnerMostAxes(p.length,u),l=b}Te(r,"max"),T.assertAxesAreInnerMostDims("max",p,u);let[f,m]=T.computeOutAndReduceShapes(l,p),g=v.sizeFromShape(m),y=FI(h,g,f,r.dtype),x=i.write(y,f,r.dtype),A=f;return o&&(A=T.expandShapeToKeepDim(f,c)),{dataId:x,shape:A,dtype:r.dtype}}var BY={kernelName:Fo,backendName:"cpu",kernelFunc:uS};function WY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Te(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1;v.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let c=T.computePool2DInfo(r.shape,a,o,u,i,l),p;if(c.filterWidth===1&&c.filterHeight===1&&v.arraysEqual(c.inShape,c.outShape))p=Yr({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,h=v.computeStrides(r.shape),f=Vx(d,r.shape,r.dtype,h,c,"max");p=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return p}var VY={kernelName:Mo,backendName:"cpu",kernelFunc:WY};function UY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s;Te(r,"maxPool3d");let c=T.computePool3DInfo(r.shape,a,o,1,i,l,u),p=n.data.get(r.dataId).values,d=aS(p,r.shape,r.dtype,v.computeStrides(r.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}var GY={kernelName:qp,backendName:"cpu",kernelFunc:UY};function HY(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=s;Te([r,a],"maxPool3DGrad");let c=T.computePool3DInfo(a.shape,o,i,1,l,u),p=n.bufferSync(a),d=DK(p,c),h=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,A=c.effectiveFilterDepth,b=c.effectiveFilterHeight,w=c.effectiveFilterWidth,I=A-1-c.padInfo.front,k=w-1-c.padInfo.left,R=b-1-c.padInfo.top,_=We(a.shape,"float32"),D=n.bufferSync(r);for(let E=0;E<c.batchSize;++E)for(let P=0;P<c.inChannels;++P)for(let C=0;C<c.inDepth;++C)for(let M=0;M<c.inHeight;++M)for(let W=0;W<c.inWidth;++W){let G=C-I,X=M-R,K=W-k,Y=0;for(let se=0;se<A;se+=g){let ee=(G+se)/h;if(!(ee<0||ee>=c.outDepth||Math.floor(ee)!==ee))for(let le=0;le<b;le+=y){let re=(X+le)/f;if(!(re<0||re>=c.outHeight||Math.floor(re)!==re))for(let pe=0;pe<w;pe+=x){let ce=(K+pe)/m;if(ce<0||ce>=c.outWidth||Math.floor(ce)!==ce)continue;let Ae=A*b*w-1-d.get(E,ee,re,ce,P),oe=se*b*w+le*w+pe,Re=Ae===oe?1:0;if(Re===0)continue;Y+=D.get(E,ee,re,ce,P)*Re}}}_.set(Y,E,C,M,W,P)}return n.makeTensorInfo(_.shape,_.dtype,_.values)}var jY={kernelName:u0,backendName:"cpu",kernelFunc:HY};function qY(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;Te([a,o],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=s,d=T.computePool2DInfo(i.shape,l,u,1,c,p),h=n.data.get(i.dataId).values,f=We(d.outShape,i.dtype,rS(h,i.shape,i.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,x=d.dilationWidth,A=d.effectiveFilterHeight,b=d.effectiveFilterWidth,w=b-1-d.padInfo.left,I=A-1-d.padInfo.top,k=We(i.shape,"float32"),R=n.data.get(r.dataId).values,_=We(r.shape,"float32",R);for(let D=0;D<d.batchSize;++D)for(let E=0;E<d.inChannels;++E)for(let P=0;P<d.inHeight;++P)for(let C=0;C<d.inWidth;++C){let M=P-I,W=C-w,G=0;for(let X=0;X<A;X+=y){let K=(M+X)/m;if(!(K<0||K>=d.outHeight||Math.floor(K)!==K))for(let Y=0;Y<b;Y+=x){let se=(W+Y)/g;if(se<0||se>=d.outWidth||Math.floor(se)!==se)continue;let ee=A*b-1-f.get(D,K,se,E),le=X*b+Y,re=ee===le?1:0;if(re===0)continue;G+=_.get(D,K,se,E)*re}}k.set(G,D,P,C,E)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var XY={kernelName:l0,backendName:"cpu",kernelFunc:qY};function KY(e,t,n,s,r){let a=v.computeStrides(t),o=Vx(e,t,n,a,r,"max"),i=rS(e,t,n,r,!0,s);return[o.values,i.values]}var ZY={kernelName:c0,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;Te(s,"MaxPoolWithArgmax");let u=l.data.get(s.dataId).values,c=T.computePool2DInfo(s.shape,r,a,[1,1],o),[p,d]=KY(u,s.shape,s.dtype,i,c),h=l.write(p,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:h,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function YY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=v.parseAxisParam(a,r.shape),u=T.computeOutAndReduceShapes(r.shape,i)[1],c=v.sizeFromShape(u),p=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));p.push(d);let h=lo({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});p.push(h);let f=Ux({inputs:{a:h,b:d},backend:n});p.push(f);let m=Fh({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:o}});return p.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var JY={kernelName:zo,backendName:"cpu",kernelFunc:YY};function QY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Te(r,"min");let i=v.parseAxisParam(a,r.shape),l=i,u=T.getAxesPermutation(l,r.shape.length),c=r;u!=null&&(c=ys({inputs:{x:r},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("min",l,c.shape.length);let[p,d]=T.computeOutAndReduceShapes(c.shape,l),h=v.sizeFromShape(d),f=v.makeZerosTypedArray(v.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let w=m[x+b];(Number.isNaN(w)||w<A)&&(A=w)}f[y]=A}u!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,f);if(o){let y=T.expandShapeToKeepDim(p,i),x=Et({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var eJ={kernelName:Lo,backendName:"cpu",kernelFunc:QY};function tJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:o}=s;Te(r,"mirrorPad");let i=a.map((A,b)=>A[0]+r.shape[b]+A[1]),l=a.map(A=>A[0]),u=a.map((A,b)=>A[0]+r.shape[b]),c=o==="reflect"?0:1,p=n.data.get(r.dataId).values,d=r.shape.length,h=v.computeStrides(r.shape),f=v.sizeFromShape(i),m=i.length,g=v.computeStrides(i),y=v.getTypedArrayFromDType(r.dtype,f);for(let A=0;A<f;A++){let b=v.indexToLoc(A,m,g);for(let I=0;I<m;I++)b[I]<l[I]?b[I]=l[I]*2-b[I]-c:b[I]>=u[I]&&(b[I]=(u[I]-1)*2-b[I]+c);b=b.map((I,k)=>I-l[k]);let w=v.locToIndex(b,d,h);y[A]=p[w]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}var nJ={kernelName:Wo,backendName:"cpu",kernelFunc:tJ},sJ=ln((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),rJ=vn(_c,sJ),aJ={kernelName:_c,backendName:"cpu",kernelFunc:rJ},oJ=co(Um());function cS(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=r.shape.length,i=a;if(i===-1&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);let l=v.parseAxisParam([i],r.shape),u=uS({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=T.expandShapeToKeepDim(u.shape,l),p=Et({inputs:{x:u},backend:n,attrs:{shape:c}}),d=Wx({inputs:{a:r,b:p},backend:n}),h=II({inputs:{x:d},backend:n}),f=Fh({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),m=Et({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Ux({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var iJ={kernelName:ni,backendName:"cpu",kernelFunc:cS};function lJ(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s;Te(r,"multinomial");let l=i?r:cS({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],p=n.data.get(l.dataId).values,d=[u,a],h=v.makeZerosTypedArray(v.sizeFromShape(d),"int32");for(let f=0;f<u;++f){let m=f*c,g=new Float32Array(c-1);g[0]=p[m];for(let A=1;A<g.length;++A)g[A]=g[A-1]+p[m+A];let y=oJ.alea(o.toString()),x=f*a;for(let A=0;A<a;++A){let b=y();h[x+A]=g.length;for(let w=0;w<g.length;w++)if(b<g[w]){h[x+A]=w;break}}}return i||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",h)}var uJ={kernelName:d0,backendName:"cpu",kernelFunc:lJ},cJ=cr.nonMaxSuppressionV3Impl;function dJ(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s;Te(r,"NonMaxSuppression");let u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:p}=cJ(u,c,o,i,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var pJ={kernelName:Tl,backendName:"cpu",kernelFunc:dJ},hJ=cr.nonMaxSuppressionV4Impl;function fJ(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=s;Te(r,"NonMaxSuppressionPadded");let c=n.data.get(r.dataId).values,p=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:h}=hJ(c,p,o,i,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var mJ={kernelName:Dc,backendName:"cpu",kernelFunc:fJ},gJ=cr.nonMaxSuppressionV5Impl;function yJ(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s;Te(r,"NonMaxSuppressionWithScore");let c=n.data.get(r.dataId).values,p=n.data.get(a.dataId).values,d=o,h=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=gJ(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var AJ={kernelName:Nl,backendName:"cpu",kernelFunc:yJ};function xJ(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s;Te(r,"oneHot");let l=v.sizeFromShape(r.shape),u=new Float32Array(l*a);u.fill(i);let c=n.data.get(r.dataId).values;for(let p=0;p<l;++p)c[p]>=0&&c[p]<a&&(u[p*a+c[p]]=o);return n.makeTensorInfo([...r.shape,a],"int32",u)}var bJ={kernelName:Rl,backendName:"cpu",kernelFunc:xJ};function Om(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){let r=nl({inputs:{input:s},backend:n}),a=Om({inputs:{x:r},backend:n}),o=uc({inputs:{input:s},backend:n}),i=Om({inputs:{x:o},backend:n}),l=Ts({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return Gx({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}var vJ={kernelName:jl,backendName:"cpu",kernelFunc:Om};function dS(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){let r=nl({inputs:{input:s},backend:n}),a=dS({inputs:{x:r},backend:n}),o=uc({inputs:{input:s},backend:n}),i=Om({inputs:{x:o},backend:n}),l=Ts({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return Gx({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}var wJ={kernelName:El,backendName:"cpu",kernelFunc:dS};function pS(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Fm({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(c=>{v.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(c=>{let p=Fm({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(p),p}),u=cc({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}var kJ={kernelName:_l,backendName:"cpu",kernelFunc:pS};function IJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;Te(r,"pad");let i=a.map((x,A)=>x[0]+r.shape[A]+x[1]),l=a.map(x=>x[0]),u=n.data.get(r.dataId).values,c=v.sizeFromShape(r.shape),p=r.shape.length,d=v.computeStrides(r.shape),h=v.sizeFromShape(i),f=i.length,m=v.computeStrides(i),g=v.getTypedArrayFromDType(r.dtype,h);o!==0&&g.fill(o);for(let x=0;x<c;x++){let b=v.indexToLoc(x,p,d).map((I,k)=>I+l[k]),w=v.locToIndex(b,f,m);g[w]=u[x]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}var hS={kernelName:Uo,backendName:"cpu",kernelFunc:IJ},SJ=ln((e,t)=>Math.pow(e,t)),CJ=vn(Go,SJ),TJ={kernelName:Go,backendName:"cpu",kernelFunc:CJ};function NJ(e){let{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:o}=n,i=Ox(s,r,o,a);return t.makeTensorInfo([i.length],a,i)}var EJ={kernelName:$c,backendName:"cpu",kernelFunc:NJ},RJ=xt(Pc,e=>1/e),_J={kernelName:Pc,backendName:"cpu",kernelFunc:RJ};function DJ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Te(r,"resizeBilinear");let l=v.computeStrides(r.shape),[u,c]=i,[p,d,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(v.sizeFromShape([p,u,c,f])),y=[a&&u>1?d-1:d,a&&c>1?h-1:h],x=[a&&u>1?u-1:u,a&&c>1?c-1:c],A=0,b=y[0]/x[0],w=y[1]/x[1];for(let I=0;I<p;I++)for(let k=0;k<u;k++){let R;o?R=b*(k+.5)-.5:R=b*k;let _=Math.max(0,Math.floor(R)),D=R-_,E=Math.min(d-1,Math.ceil(R)),P=I*l[0]+_*l[1],C=I*l[0]+E*l[1];for(let M=0;M<c;M++){let W;o?W=w*(M+.5)-.5:W=w*M;let G=Math.max(0,Math.floor(W)),X=W-G,K=Math.min(h-1,Math.ceil(W)),Y=P+G*l[2],se=C+G*l[2],ee=P+K*l[2],le=C+K*l[2];for(let re=0;re<f;re++){let pe=m[Y+re],ce=m[se+re],Ae=m[ee+re],oe=m[le+re],Re=pe+(Ae-pe)*X,_e=ce+(oe-ce)*X,Ve=Re+(_e-Re)*D;g[A++]=Ve}}}return n.makeTensorInfo([p,u,c,f],"float32",g)}var $J={kernelName:Ko,backendName:"cpu",kernelFunc:DJ};function PJ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Te([a,r],"resizeBilinearGrad");let i=v.computeStrides(r.shape),[l,u,c,p]=r.shape,[,d,h]=a.shape,f=new Float32Array(l*u*c*p),m=[o&&d>1?u-1:u,o&&h>1?c-1:c],g=[o&&d>1?d-1:d,o&&h>1?h-1:h],y=m[0]/g[0],x=m[1]/g[1],A=n.data.get(a.dataId).values,b=0;for(let w=0;w<l;w++){let I=w*i[0];for(let k=0;k<d;k++){let R=k*y,_=Math.floor(R),D=Math.min(Math.ceil(R),u-1),E=I+_*i[1],P=I+D*i[1],C=R-_,M=1-C;for(let W=0;W<h;W++){let G=W*x,X=Math.floor(G),K=Math.min(Math.ceil(G),c-1),Y=G-X,se=1-Y,ee=E+X*i[2],le=E+K*i[2],re=P+X*i[2],pe=P+K*i[2],ce=M*se,Ae=M*Y,oe=C*se,Re=C*Y;for(let _e=0;_e<p;_e++){let Ve=A[b++];f[ee+_e]+=Ve*ce,f[le+_e]+=Ve*Ae,f[re+_e]+=Ve*oe,f[pe+_e]+=Ve*Re}}}}return n.makeTensorInfo([l,c,u,p],"float32",f)}var FJ={kernelName:h0,backendName:"cpu",kernelFunc:PJ};function OJ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Te(r,"resizeNearestNeighbor");let l=v.computeStrides(r.shape),[u,c]=i,[p,d,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(p*u*c*f),y=[a&&u>1?d-1:d,a&&c>1?h-1:h],x=[a&&u>1?u-1:u,a&&c>1?c-1:c],A=y[0]/x[0],b=y[1]/x[1],w=0;for(let I=0;I<p;I++){let k=I*l[0];for(let R=0;R<u;R++){let _=o?A*(R+.5):A*R,D=Math.min(d-1,a?Math.round(_):Math.floor(_));o&&(D=Math.max(0,D));let E=k+D*l[1];for(let P=0;P<c;P++){let C=o?b*(P+.5):b*P,M=Math.min(h-1,a?Math.round(C):Math.floor(C));o&&(M=Math.max(0,M));let W=E+M*l[2];for(let G=0;G<f;G++){let X=m[W+G];g[w++]=X}}}}return n.makeTensorInfo([p,u,c,f],r.dtype,g)}var MJ={kernelName:Xo,backendName:"cpu",kernelFunc:OJ};function zJ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Te([a,r],"resizeNearestNeighborGrad");let i=v.computeStrides(r.shape),l=v.computeStrides(a.shape),[u,c,p,d]=r.shape,[,h,f]=a.shape,m=new Float32Array(u*c*p*d),g=n.data.get(a.dataId).values,y=[o&&h>1?c-1:c,o&&f>1?p-1:p],x=[o&&h>1?h-1:h,o&&f>1?f-1:f],A=y[0]/x[0],b=y[1]/x[1],w=1/A,I=1/b,k=Math.ceil(w)*2+2,R=Math.ceil(I)*2+2;for(let _=0;_<u;_++){let D=_*i[0];for(let E=0;E<c;E++){let P=D+E*i[1],C=Math.floor(E*w),M=Math.floor(C-k/2);for(let W=0;W<p;W++){let G=P+W*i[2],X=Math.floor(W*I),K=Math.floor(X-R/2);for(let Y=0;Y<d;Y++){let se=0;for(let ee=0;ee<k;ee++){let le=ee+M;if(le<0||le>=h)continue;let re=D+le*l[1],pe=le*A,ce=Math.min(c-1,o?Math.round(pe):Math.floor(pe));if(E===ce)for(let Ae=0;Ae<R;Ae++){let oe=Ae+K;if(oe<0||oe>=f)continue;let Re=re+oe*l[2],_e=oe*b,Ve=Math.min(p-1,o?Math.round(_e):Math.floor(_e));W===Ve&&(se+=g[Re+Y])}}m[G+Y]=se}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}var LJ={kernelName:p0,backendName:"cpu",kernelFunc:zJ};function BJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;Te(r,"reverse");let o=r.shape.length,i=v.parseAxisParam(a,r.shape);if(o===0)return Yr({inputs:{x:r},backend:n});let l=new pn(r.shape,r.dtype),u=n.bufferSync(r);for(let c=0;c<l.size;c++){let p=l.indexToLoc(c),d=p.slice();i.forEach(h=>d[h]=r.shape[h]-1-d[h]),l.set(u.get(...d),...p)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var WJ={kernelName:$l,backendName:"cpu",kernelFunc:BJ},VJ={kernelName:ql,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=v.getTypedArrayFromDType(s.dtype,v.sizeFromShape(s.shape)),[u,c,p,d]=s.shape,[h,f]=T.getImageCenter(o,c,p),m=255,g=Math.sin(r),y=Math.cos(r),x=i.data.get(s.dataId).values;for(let b=0;b<u;b++){let w=b*p*c*d;for(let I=0;I<c;I++){let k=I*(p*d);for(let R=0;R<p;R++){let _=R*d;for(let D=0;D<d;D++){let E=[u,I,R,D],P=E[2],C=E[1],M=(P-h)*y-(C-f)*g,W=(P-h)*g+(C-f)*y;M=Math.round(M+h),W=Math.round(W+f);let G=a;if(typeof a!="number"&&(D===3?G=m:G=a[D]),M>=0&&M<p&&W>=0&&W<c){let K=W*(p*d),Y=M*d,se=w+K+Y+D;G=x[se]}let X=w+k+_+D;l[X]=G}}}}return{dataId:i.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},UJ=xt(Pl,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),GJ={kernelName:Pl,backendName:"cpu",kernelFunc:UJ};function HJ(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=T.calculateShapes(a,r,o),d=!0,h=n.bufferSync(r),f=n.bufferSync(a),m=Vu(h,f,o,p,u,l,i,c,0,d);return n.makeTensorInfo(o,m.dtype,m.values)}var jJ={kernelName:Fl,backendName:"cpu",kernelFunc:HJ};function qJ(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function XJ(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}function KJ(e,t,n,s,r,a){let o=v.getArrayFromDType("int32",n*r);for(let i=0;i<n;++i){let l=e.slice(i*s,(i+1)*s),u=i*r;for(let c=0;c<r;++c)o[u+c]=a==="left"?qJ(l,t[c+u]):XJ(l,t[c+u])}return o}function ZJ(e){let{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:o}=s,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=KJ(i,l,r.shape[0],r.shape[1],a.shape[1],o);return n.makeTensorInfo(a.shape,"int32",u)}var YJ={kernelName:f0,backendName:"cpu",kernelFunc:ZJ};function JJ(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;Te([s,r,a],"select");let o=s.shape.length,i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=Mn(r.dtype,a.dtype),p=v.makeZerosTypedArray(v.sizeFromShape(r.shape),c),d=0,h=o===0||o>1||r.shape.length===1?1:v.sizeFromShape(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<h;m++)i[f]===1?p[d++]=l[f]:p[d++]=u[f];return n.makeTensorInfo(r.shape,c,p)}var QJ={kernelName:Ol,backendName:"cpu",kernelFunc:JJ},eQ=T.SELU_SCALEALPHA,tQ=T.SELU_SCALE,nQ=xt(Fc,e=>e>=0?tQ*e:eQ*(Math.exp(e)-1)),sQ={kernelName:Fc,backendName:"cpu",kernelFunc:nQ},rQ=xt(Oc,e=>e<0?-1:e>0?1:0),aQ={kernelName:Oc,backendName:"cpu",kernelFunc:rQ},oQ=xt(Jo,e=>Math.sin(e)),iQ={kernelName:Jo,backendName:"cpu",kernelFunc:oQ},lQ=xt(zl,e=>Math.sinh(e)),uQ={kernelName:zl,backendName:"cpu",kernelFunc:lQ},cQ=11920928955078125e-23,f7=Math.log(cQ)+2,dQ=xt(Mc,e=>{let t=e>-f7,n=e<f7,s=Math.exp(e),r;return n?r=s:t?r=e:r=Math.log(1+s),r}),pQ={kernelName:Mc,backendName:"cpu",kernelFunc:dQ};function hQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;Te([r],"spaceToBatchND");let i=v.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let I=1+a.length;I<r.shape.length;++I)l.push([0,0]);let u=hS.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=T.getReshaped(u.shape,a,i,!1),p=T.getPermuted(c.length,a.length,!1),d=T.getReshapedPermuted(u.shape,a,i,!1),m=Et({inputs:{x:u},backend:n,attrs:{shape:c}}),x=ys({inputs:{x:m},backend:n,attrs:{perm:p}}),w=Et({inputs:{x},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),w}var fQ={kernelName:Ll,backendName:"cpu",kernelFunc:hQ};function mQ(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(o.dataId).values[0],[p,d,h,f,m]=UI(i,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,p),n.makeTensorInfo([d[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var gQ={kernelName:Kp,backendName:"cpu",kernelFunc:mQ};function yQ(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.data.get(r.dataId).values),i=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,p]=GI(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([p.length],a.dtype,new Int32Array(p))]}var AQ={kernelName:zc,backendName:"cpu",kernelFunc:yQ};function xQ(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=Mx(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(c,s.dtype,u)}var bQ={kernelName:Zp,backendName:"cpu",kernelFunc:xQ};function vQ(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=Mx(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(c,s.dtype,u)}var wQ={kernelName:Yp,backendName:"cpu",kernelFunc:vQ};function kQ(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=T.calculateShapes(a,r,i),h=!1,f=n.bufferSync(r),m;switch(a.dtype){case"bool":{let g=n.bufferSync(a),y=Boolean(n.data.get(o.dataId).values[0]);m=Vu(f,g,i,d,c,u,l,p,y,h);break}case"float32":{let g=n.bufferSync(a),y=n.data.get(o.dataId).values[0];m=Vu(f,g,i,d,c,u,l,p,y,h);break}case"int32":{let g=n.bufferSync(a),y=n.data.get(o.dataId).values[0];m=Vu(f,g,i,d,c,u,l,p,y,h);break}case"string":{let g=n.bufferSync(a),y=v.decodeString(n.data.get(o.dataId).values[0]);m=Vu(f,g,i,d,c,u,l,p,y,h);break}default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(i,m.dtype,m.values)}var IQ={kernelName:Jp,backendName:"cpu",kernelFunc:kQ};function SQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(p=>{let d=[...c];d[i]=p;let h=sl({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});return u[i]+=p,h})}var CQ={kernelName:Bl,backendName:"cpu",kernelFunc:SQ},TQ={kernelName:Lc,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t;Te(n,"square");let r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let i=0;i<r.length;++i){let l=r[i];a[i]=l*l}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},NQ=xt(oi,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),EQ={kernelName:oi,backendName:"cpu",kernelFunc:NQ};function RQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s;Te(r,"stridedSlice");let{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=Ut.sliceInfo(r.shape,a,o,i,l,u,c,p,d),w;if(m)w=Et({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let I=Ut.computeOutShape(x,A,b),k=sl({inputs:{x:r},backend:n,attrs:{begin:x,size:I}});w=Et({inputs:{x:k},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(k)}else{let I=n.bufferSync(r),k=jI(h,I,b,x);w=n.makeTensorInfo(f,k.dtype,k.values)}return w}var _Q={kernelName:Wl,backendName:"cpu",kernelFunc:RQ};function DQ(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:p}=t,d=n.data.get(c.dataId).values,h=n.data.get(p.dataId).values,[f,m]=zx(d,h,r,a,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var $Q={kernelName:Bc,backendName:"cpu",kernelFunc:DQ};function PQ(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values[0],[u,c,p]=Lx(i,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}var FQ={kernelName:Qp,backendName:"cpu",kernelFunc:PQ};function OQ(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.data.get(a.dataId).values,i=Bx(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var MQ={kernelName:eh,backendName:"cpu",kernelFunc:OQ},zQ=xt(Vl,e=>Math.tan(e)),LQ={kernelName:Vl,backendName:"cpu",kernelFunc:zQ},BQ=xt(ai,e=>Math.tanh(e)),WQ={kernelName:ai,backendName:"cpu",kernelFunc:BQ};function VQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;Te(r,"tile");let o=XI(n.bufferSync(r),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}var UQ={kernelName:wa,backendName:"cpu",kernelFunc:VQ};function GQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s;Te(r,"topk");let i=n.data.get(r.dataId).values,[l,u]=ZI(i,r.shape,r.dtype,a,o);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}var HQ={kernelName:Ul,backendName:"cpu",kernelFunc:GQ};function jQ(e){let{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=n,[c,p,d,h]=r.shape,[f,m]=u!=null?u:[p,d],g=[c,f,m,h],y=v.computeStrides(r.shape),x=y[0],A=y[1],b=y[2],w=v.getTypedArrayFromDType(r.dtype,v.sizeFromShape(g));w.fill(l);let I=s.data.get(r.dataId).values,k=s.data.get(a.dataId).values;for(let _=0;_<c;++_){let D=a.shape[0]===1?k:k.subarray(_*8,_*8+8);for(let E=0;E<f;++E)for(let P=0;P<m;++P)for(let C=0;C<h;++C){let M,W=D[6]*P+D[7]*E+1;if(W===0)continue;let G=(D[0]*P+D[1]*E+D[2])/W,X=(D[3]*P+D[4]*E+D[5])/W,K=m7(G,d,i),Y=m7(X,p,i);switch(o){case"nearest":M=JQ(I,p,d,x,A,b,_,Y,K,C,l);break;case"bilinear":M=QQ(I,p,d,x,A,b,_,Y,K,C,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}let se=_*x+E*A+P*b+C;w[se]=M}return s.makeTensorInfo(g,r.dtype,w)}return{dataId:s.write(w,g,r.dtype),shape:r.shape,dtype:r.dtype}}var qQ={kernelName:Gl,backendName:"cpu",kernelFunc:jQ};function m7(e,t,n){switch(n){case"reflect":return XQ(e,t);case"wrap":return KQ(e,t);case"nearest":return YQ(e,t);case"constant":default:return ZQ(e,t)}}function XQ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{let s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return v.clamp(0,n,t-1)}function KQ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{let s=t-1;n-=t*Math.trunc(n/s)}return v.clamp(0,n,t-1)}function ZQ(e,t){return e}function YQ(e,t){return v.clamp(0,e,t-1)}function up(e,t,n,s,r,a,o,i,l,u,c){let p=o*s+i*r+l*a+u;return 0<=i&&i<t&&0<=l&&l<n?e[p]:c}function JQ(e,t,n,s,r,a,o,i,l,u,c){let p=Math.round(i),d=Math.round(l);return up(e,t,n,s,r,a,o,p,d,u,c)}function QQ(e,t,n,s,r,a,o,i,l,u,c){let p=Math.floor(i),d=Math.floor(l),h=p+1,f=d+1,m=(f-l)*up(e,t,n,s,r,a,o,p,d,u,c)+(l-d)*up(e,t,n,s,r,a,o,p,f,u,c),g=(f-l)*up(e,t,n,s,r,a,o,h,d,u,c)+(l-d)*up(e,t,n,s,r,a,o,h,f,u,c);return(h-i)*m+(i-p)*g}function eee(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Te(a,"unique");let o=s.data.get(a.dataId).values,{outputValues:i,outputShape:l,indices:u}=YI(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}var tee={kernelName:m0,backendName:"cpu",kernelFunc:eee};function nee(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape.length,i=r.shape[a],l=new Array(o-1),u=0;for(let h=0;h<o;h++)h!==a&&(l[u++]=r.shape[h]);let c=new Array(o).fill(0),p=r.shape.slice();p[a]=1;let d=new Array(i);for(let h=0;h<d.length;h++){c[a]=h;let f=sl({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});d[h]=Et({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return d}var see={kernelName:Hl,backendName:"cpu",kernelFunc:nee};function ree(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s;Te(r,"unsortedSegmentSum");let i=r.shape.length,l=a.shape.length,u=[],c=[],p=i-l,d=a;for(let f=0;f<p;++f){let m=Fm({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=m,c.push(m)}for(let f=0;f<o;++f){let m=v.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),y=wI({inputs:{a:g,b:d},backend:n}),x=lo({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),A=b2({inputs:{a:x,b:r},backend:n}),b=Fh({inputs:{x:A},backend:n,attrs:{axis:0,keepDims:!1}});u.push(b),c.push(g),c.push(y),c.push(x),c.push(A),c.push(b)}let h=pS({inputs:u,backend:n,attrs:{axis:0}});return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var aee={kernelName:th,backendName:"cpu",kernelFunc:ree},oee=[oK,Qq,lK,cK,aX,pK,fK,gK,AK,bK,wK,IK,CK,EK,_K,PK,OK,zK,BK,rK,VK,GK,jK,XK,sX,iX,ZK,eX,JK,eZ,tZ,sZ,aZ,iZ,uZ,dZ,hZ,mZ,yZ,xZ,vZ,kZ,SZ,CZ,NZ,RZ,DZ,$Z,PZ,FZ,zZ,YX,BZ,lX,XZ,uX,KZ,dX,tY,nY,rY,hX,iY,uY,dY,hY,mY,mX,yX,tX,yY,QK,xY,vY,kY,JX,xX,vX,SY,kX,TY,RY,DY,FY,MY,LY,BY,SX,VY,GY,jY,XY,ZY,JY,eJ,TX,nJ,aJ,uJ,EX,_X,pJ,mJ,AJ,$X,bJ,wJ,kJ,hS,TJ,eK,OX,EJ,nX,ry,_J,tK,nK,sK,$J,FJ,MJ,LJ,WJ,VJ,GJ,zX,jJ,YJ,QJ,sQ,BX,aQ,iQ,uQ,WX,iJ,pQ,fQ,gQ,AQ,bQ,wQ,IQ,CQ,GX,TQ,jX,EQ,_Q,$Q,FQ,MQ,ZX,OZ,LQ,WQ,UQ,HQ,qQ,PX,tee,see,aee,vJ];for(let e of oee)ur(e);var fS={};Ge(fS,{assertNotComplex:()=>rd,bindCanvasToFramebuffer:()=>yee,bindColorTextureToFramebuffer:()=>am,bindTextureToProgramUniformSampler:()=>ES,bindTextureUnit:()=>CS,bindVertexBufferToProgramAttribute:()=>oy,callAndCheck:()=>Ie,canBeRepresented:()=>mS,createFragmentShader:()=>AS,createFramebuffer:()=>SS,createProgram:()=>xS,createStaticIndexBuffer:()=>wS,createStaticVertexBuffer:()=>vS,createTexture:()=>kS,createVertexShader:()=>yS,getBatchDim:()=>rl,getExtensionOrThrow:()=>cp,getFramebufferErrorMessage:()=>RS,getMaxTexturesInShader:()=>PS,getNumChannels:()=>mee,getProgramUniformLocation:()=>NS,getProgramUniformLocationOrThrow:()=>TS,getRowsCols:()=>al,getShapeAs3D:()=>om,getTextureShapeFromLogicalShape:()=>DS,getWebGLDisjointQueryTimerVersion:()=>FS,getWebGLErrorMessage:()=>gS,getWebGLMaxTextureSize:()=>$S,hasExtension:()=>qs,isCapableOfRenderingToFloatTexture:()=>OS,isDownloadFloatTextureEnabled:()=>MS,isReshapeFree:()=>$p,isWebGLFenceEnabled:()=>zS,isWebGLVersionEnabled:()=>ly,linkProgram:()=>bS,logShaderSourceAndInfoLog:()=>jx,resetMaxTextureSize:()=>Aee,resetMaxTexturesInShader:()=>xee,unbindColorTextureFromFramebuffer:()=>iy,unbindTextureUnit:()=>gee,validateFramebuffer:()=>dp,validateProgram:()=>rm,validateTextureSize:()=>IS});var Wi={},A3={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function v2(e,t){Wi[e]=t}function Pr(e,t){if(!(e in Wi)||t!=null){let s=lee(e,t);if(s!==null)Wi[e]=s;else return console.log("Could not get context for WebGL version",e),null}let n=Wi[e];return n==null||n.isContextLost()?(delete Wi[e],Pr(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Wi[e])}function iee(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function lee(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t==null?iee(e):t;return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Wi[e]},!1),e===1?n.getContext("webgl",A3)||n.getContext("experimental-webgl",A3):n.getContext("webgl2",A3)}var Dp;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(Dp||(Dp={}));var js;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(js||(js={}));var Sn;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Sn||(Sn={}));function Oh(e,t){return[t,e]}function uee(e,t){return e*t}function Zf(e){let t=v.sizeFromShape(e),n=Math.ceil(t/4);return v.sizeToSquarishShape(n)}function sd(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function cee(e,t){let[n,s]=sd(e,t);return n*s*4}function Hx(e,t){let n=e,s,r,a,o,i,l,u,c,p,d;return j().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,u=4,c=1,p=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,u=4,c=4,p=t!=null?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:d}}function Ie(e,t){let n=t();return j().getBool("DEBUG")&&dee(e),n}function dee(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+gS(e,t))}var pee=596e-10,hee=65504;function mS(e){return!!(j().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||pee<Math.abs(e)&&Math.abs(e)<hee)}function gS(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function cp(e,t){return Sa(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function yS(e,t){let n=Sa(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ie(e,()=>e.shaderSource(n,t)),Ie(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function AS(e,t){let n=Sa(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ie(e,()=>e.shaderSource(n,t)),Ie(e,()=>e.compileShader(n)),j().get("ENGINE_COMPILE_ONLY"))return n;if(e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw jx(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var fee=/ERROR: [0-9]+:([0-9]+):/g;function jx(e,t){let n=fee.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let s=+n[1],r=e.split(`
`),a=r.length.toString().length+2,o=r.map((p,d)=>v.rightPad((d+1).toString(),a)+p),i=0;for(let p=0;p<o.length;p++)i=Math.max(o[p].length,i);let l=o.slice(0,s-1),u=o.slice(s-1,s),c=o.slice(s);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${v.rightPad(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function xS(e){return Sa(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function bS(e,t){if(Ie(e,()=>e.linkProgram(t)),!j().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function rm(e,t){if(Ie(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function vS(e,t){let n=Sa(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Ie(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function wS(e,t){let n=Sa(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Ie(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),Ie(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function mee(){return j().getNumber("WEBGL_VERSION")===2?1:4}function kS(e){return Sa(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function IS(e,t){let n=j().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){let s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function SS(e){return Sa(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function oy(e,t,n,s,r,a,o){let i=e.getAttribLocation(t,n);return i===-1?!1:(Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),Ie(e,()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,a,o)),Ie(e,()=>e.enableVertexAttribArray(i)),!0)}function CS(e,t,n){_S(e,n),Ie(e,()=>e.activeTexture(e.TEXTURE0+n)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function gee(e,t){_S(e,t),Ie(e,()=>e.activeTexture(e.TEXTURE0+t)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function TS(e,t,n){return Sa(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function NS(e,t,n){return e.getUniformLocation(t,n)}function ES(e,t,n,s){Ie(e,()=>CS(e,t,s)),Ie(e,()=>e.uniform1i(n,s))}function yee(e){Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Ie(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),Ie(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function am(e,t,n){Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),Ie(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function iy(e,t){Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),Ie(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function dp(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+RS(e,t))}function RS(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Sa(e,t,n){let s=Ie(e,()=>t());if(s==null)throw new Error(n);return s}function _S(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function rl(e,t=2){return v.sizeFromShape(e.slice(0,e.length-t))}function al(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function om(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[rl(e),...al(e)]),t}function DS(e,t=!1){let n=j().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,a)=>a>=e.length-2?v.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=v.squeezeShape(e).newShape);let s=v.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=rl(e),a=2,o=2;return e.length&&([a,o]=al(e)),s=r*(a/2)*(o/2),v.sizeToSquarishShape(s).map(i=>i*2)}return v.sizeToSquarishShape(s)}function Yf(e){return e%2===0}function $p(e,t){if(e=e.slice(-2),t=t.slice(-2),v.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||Yf(n)&&Yf(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Yf(e[0])&&Yf(t[0])}var im,lm;function $S(e){if(im==null){let t=Pr(e);im=t.getParameter(t.MAX_TEXTURE_SIZE)}return im}function Aee(){im=null}function xee(){lm=null}function PS(e){if(lm==null){let t=Pr(e);lm=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,lm)}function FS(e){if(e===0)return 0;let t,n=Pr(e);return qs(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:qs(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function qs(e,t){return e.getExtension(t)!=null}function ly(e){try{if(Pr(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function OS(e){if(e===0)return!1;let t=Pr(e);if(e===1){if(!qs(t,"OES_texture_float"))return!1}else if(!qs(t,"EXT_color_buffer_float"))return!1;return uy(t)}function MS(e){if(e===0)return!1;let t=Pr(e);if(e===1){if(!qs(t,"OES_texture_float")||!qs(t,"WEBGL_color_buffer_float"))return!1}else{if(qs(t,"EXT_color_buffer_float"))return uy(t);let s="EXT_color_buffer_half_float";if(qs(t,s)){let r=t.getExtension(s);return bee(t,r)}return!1}return uy(t)}function uy(e){let t=Hx(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),o}function bee(e,t){let n=Hx(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(o),i}function zS(e){return e!==2?!1:Pr(e).fenceSync!=null}function rd(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Oe=j();Oe.registerFlag("HAS_WEBGL",()=>Oe.getNumber("WEBGL_VERSION")>0);Oe.registerFlag("WEBGL_VERSION",()=>ly(2)?2:ly(1)?1:0);Oe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Oe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Oe.get("WEBGL_VERSION")===2);Oe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Oe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Oe.registerFlag("WEBGL_PACK",()=>Oe.getBool("HAS_WEBGL"));Oe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_CLIP",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_REDUCE",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_LAZILY_UNPACK",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_CONV_IM2COL",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>$S(Oe.getNumber("WEBGL_VERSION")));Oe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>PS(Oe.getNumber("WEBGL_VERSION")));Oe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=Oe.getNumber("WEBGL_VERSION");return e===0?0:FS(e)});Oe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Oe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ah.isMobile());Oe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>OS(Oe.getNumber("WEBGL_VERSION")));Oe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Oe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Oe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Oe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>MS(Oe.getNumber("WEBGL_VERSION")));Oe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>zS(Oe.getNumber("WEBGL_VERSION")));Oe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Oe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Oe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});Oe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>ah.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});Oe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Oe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Oe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Oe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function os(){let e,t,n,s,r,a,o,i,l,u;return j().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",o="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",o="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:l,defineRound:u}}function ru(e,t,n="index"){let s=v.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / ${r}`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r}`:`index -= ${e[a]} * ${r}`;return`${o}; ${i};`}).join("")}function w2(e,t,n="index"){let s=v.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${o}; ${i};`}).join("")}function vee(e,t){let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function wee(e,t,n="index"){let s=e.map((a,o)=>o),r=vee(s,t);return r.map((a,o)=>{let i=`int ${e[o]} = ${n} / ${r[o]}`,l=o===r.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${r[o]}`:`index -= ${e[o]} * ${r[o]}`;return`${i}; ${l};`}).join("")}function qx(e){let t=v.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Xx(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var LS=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:BS}=T;function kee(e,t,n){let s=[];if(e.forEach(h=>{let f=v.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?s.push(`uniform float ${h.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${h.name};`),s.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){let{uniformShape:m}=Kx(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${h.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${h.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{s.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let r=s.join(`
`),a=e.map(h=>Iee(h,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),o=t.texShape,i=os(),l=Tee(i),u,c,p=Ree(i);return t.isPacked?(u=See(t.logicalShape,o,n.enableShapeUniforms),c=Eee(i)):(u=Cee(t.logicalShape,o,n.enableShapeUniforms),c=Nee(i)),n.packedInputs&&(p+=Pee),[p,l,c,r,u,a,n.userCode].join(`
`)}function ad(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return jee(e,t);case 1:return Xee(e,t);case 2:return Zee(e,t);case 3:return Jee(e,t);case 4:return ete(e,t);case 5:return tte(e);case 6:return nte(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function WS(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return Hee(e);case 1:return qee(e,t);case 2:return Kee(e,t);case 3:return Yee(e,t);default:return Qee(e,t)}}function Iee(e,t,n=!1,s){let r="";n?r+=WS(e,s):r+=ad(e,s);let a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(n?r+=ste(e,t):r+=rte(e,t)),r}function See(e,t,n){switch(e.length){case 0:return VS();case 1:return Fee(e,t,n);case 2:return Uee(e,t,n);case 3:return Mee(e,t,n);default:return Lee(e,t,n)}}function Cee(e,t,n){switch(e.length){case 0:return VS();case 1:return Oee(e,t,n);case 2:return Gee(e,t,n);case 3:return zee(e,t,n);case 4:return Bee(e,t,n);case 5:return Wee(e,t);case 6:return Vee(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function Tee(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function Nee(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function Eee(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function Ree(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${_ee}
    ${Dee}
    ${$ee}
  `}var _ee=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Dee=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,$ee=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Pee=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function VS(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Fee(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function Oee(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function Mee(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function zee(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${w2(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let s=ru(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function Lee(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),o=a,i="",l="b, r, c";for(let u=2;u<e.length-1;u++)o*=e[e.length-u-1],i=`
      int b${u} = index / ${o};
      index -= b${u} * ${o};
    `+i,l=`b${u}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${l});
    }
  `}function Bee(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${w2(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let s=ru(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function Wee(e,t){let n=ru(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Vee(e,t){let n=ru(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Uee(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(v.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function Gee(e,t,n){return v.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function au(e){return`offset${e}`}function Hee(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=os();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function jee(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;let[r,a]=e.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=au(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});
      return sampleTexture(${n}, uv);
    }
  `;let[i,l]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${l}, ${o});
      return sampleTexture(${n}, uv);
    }
  `}function qee(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=os();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function Xee(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${od(e)}
      }
    `;let r=e.shapeInfo.texShape,a=r[0],o=r[1];if(o===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=au(n);return o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function Kee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],l=os();if(a!=null&&v.arraysEqual(n,a))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;let u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function Zee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(a!=null&&v.arraysEqual(n,a)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;let d=a[0],h=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}let{newShape:o,keptDims:i}=v.squeezeShape(n),l=o;if(l.length<n.length){let d=id(e,l),h=["row","col"];return`
      ${ad(d,t)}
      float ${r}(int row, int col) {
        return ${r}(${ld(h,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${od(e)}
      }
    `;let u=a[0],c=a[1],p=au(s);return c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${p};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function Yee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let d=n.slice(1),h=[1,2],f=id(e,d),m=["b","row","col"];return`
        ${WS(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${ld(m,h)});
        }
      `}let i=os();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;let l=o[0],u=o[1],c=Math.ceil(n[2]/2),p=c*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${p}, ${c}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function Jee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:l}=v.squeezeShape(n),u=i;if(u.length<n.length){let m=id(e,u),g=["row","col","depth"];return`
        ${ad(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${ld(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${o}, 1)));
        ${od(e)}
      }
    `;let c=e.shapeInfo.texShape,p=c[0],d=c[1],h=e.shapeInfo.flatOffset;if(d===a&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${p}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===o&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `;let f=au(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * ${a} + col * ${o} + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${p}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function Qee(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=os();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=l[0],c=l[1],p=Math.ceil(a[o-1]/2),d=p*Math.ceil(a[o-2]/2),h="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let m=2;m<o-1;m++)h=`int b${m}, `+h,d*=a[o-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${h}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${r.texture2D}(${n}, uv);
    }
  `}function ete(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:l,keptDims:u}=v.squeezeShape(n);if(l.length<n.length){let x=id(e,l),A=["row","col","depth","depth2"];return`
      ${ad(x,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${ld(A,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${o}, ${a}, 1)));
        ${od(e)}
      }
    `;let c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(h===i&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(h===a&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;let y=au(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${d}, ${h}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function tte(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,o=t[2]*a,i=t[1]*o,{newShape:l,keptDims:u}=v.squeezeShape(t);if(l.length<t.length){let m=id(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${ad(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${ld(g,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${o}, ${a}, ${r})) +
          depth3;
        ${od(e)}
      }
    `;let c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1];if(h===i&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=au(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} + depth * ${a} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function nte(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=v.squeezeShape(t);if(r.length<t.length){let g=id(e,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${ad(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${ld(y,a)});
      }
    `}let o=t[5],i=t[4]*o,l=t[3]*i,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${od(e)}
      }
    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],f=d[1];if(f===c&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${i}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=au(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function od(e){let t=e.name,n=v.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function ste(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=BS(e.shapeInfo.logicalShape,t.logicalShape),l=vt(o),u=o-a,c,p=["x","y","z","w","u","v"];a===0?c="":o<2&&i.length>=1?c="coords = 0;":c=i.map(x=>`coords.${p[x+u]} = 0;`).join(`
`);let d="";o<2&&a>0?d="coords":d=e.shapeInfo.logicalShape.map((x,A)=>`coords.${p[A+u]}`).join(", ");let h="return outputValue;",m=v.sizeFromShape(e.shapeInfo.logicalShape)===1,y=v.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!y)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)o===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(i.length){let x=a-2,A=a-1;i.indexOf(x)>-1&&i.indexOf(A)>-1?h="return vec4(outputValue.x);":i.indexOf(x)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(A)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${h}
    }
  `}function rte(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===l&&e.shapeInfo.flatOffset==null&&v.arraysEqual(o,a))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let u=vt(l),c=BS(e.shapeInfo.logicalShape,t.logicalShape),p=l-i,d,h=["x","y","z","w","u","v"];i===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${h[m+p]} = 0;`).join(`
`);let f="";return l<2&&i>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${h[g+p]}`).join(", "),`
    float ${r}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function vt(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Kx(e,t,n){let{newShape:s,keptDims:r}=v.squeezeShape(t),a=t.length,o=e&&a===3&&t[0]===1,i=o?t.slice(1):s,l=!e&&a>1&&!v.arraysEqual(t,n)&&s.length<a||o;return{useSqueezeShape:l,uniformShape:l?i:t,keptDims:r}}function id(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function ld(e,t){return t.map(n=>e[n]).join(", ")}function ate(e,t,n,s){let r=n.map((c,p)=>{let d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:d}}),a=r.map(c=>c.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=kee(r,o,t),l=AS(e.gl,i),u=e.createProgram(l);return j().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:i,webGLProgram:u,inShapeInfos:a,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:i,webGLProgram:u,inShapeInfos:a,outShapeInfo:o},US(e,t,u))}function US(e,t,n){let s={},r={},a={},o=[],i,l,u,c=null,p=null;p=e.getUniformLocation(n,"NAN",!1),j().getNumber("WEBGL_VERSION")===1&&(c=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let h=0;h<t.variableNames.length;h++){let f=t.variableNames[h];s[f]=e.getUniformLocation(n,f,d),s[`offset${f}`]=e.getUniformLocation(n,`offset${f}`,d),t.enableShapeUniforms&&(r[`${f}Shape`]=e.getUniformLocation(n,`${f}Shape`,d),a[`${f}TexShape`]=e.getUniformLocation(n,`${f}TexShape`,d))}return t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",d),u=e.getUniformLocation(n,"outShapeStrides",d),l=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((h,f)=>{o[f]=e.getUniformLocation(n,h.name,d)}),{uniformLocations:s,customUniformLocations:o,infLoc:c,nanLoc:p,inShapesLocations:r,inTexShapesLocations:a,outShapeLocation:i,outShapeStridesLocation:u,outTexShapeLocation:l}}function g7(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{let r=n.logicalShape,a=t[s],o=a.shape;if(!v.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(n.isUniform&&a.isUniform)return;let i=n.texShape,l=a.isUniform?null:a.texData.texShape;if(!v.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function ote(e,t,n,s,r){t.program.enableShapeUniforms||(g7(t.inShapeInfos,n),g7([t.outShapeInfo],[s]));let a=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,o[0],o[1]):e.setOutputMatrixTexture(a.texture,o[0],o[1]),e.setProgram(t.webGLProgram),j().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((l,u)=>{let c=t.program.variableNames[u],p=t.uniformLocations[c],d=t.uniformLocations[`offset${c}`],h=t.inShapesLocations[`${c}Shape`],f=t.inTexShapesLocations[`${c}TexShape`];if(h){let{uniformShape:m}=Kx(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),p!=null){if(l.isUniform){if(v.sizeFromShape(l.shape)<2)e.gl.uniform1f(p,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(p,m)}return}l.texData.slice!=null&&d!=null&&e.gl.uniform1i(d,l.texData.slice.flatOffset),e.setInputMatrixTexture(l.texData.texture.texture,p,u)}});let i=t.outShapeLocation;if(i)switch(s.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){let l=v.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((l,u)=>{let c=t.customUniformLocations[u],p=r[u];if(l.type==="float")e.gl.uniform1fv(c,p);else if(l.type==="vec2")e.gl.uniform2fv(c,p);else if(l.type==="vec3")e.gl.uniform3fv(c,p);else if(l.type==="vec4")e.gl.uniform4fv(c,p);else if(l.type==="int")e.gl.uniform1iv(c,p);else if(l.type==="ivec2")e.gl.uniform2iv(c,p);else if(l.type==="ivec3")e.gl.uniform3iv(c,p);else if(l.type==="ivec4")e.gl.uniform4iv(c,p);else throw Error(`uniform type ${l.type} is not supported yet.`)}),e.executeProgram()}function ite(e,t,n){let s="";t.concat(n).forEach(o=>{let i=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!o.isUniform){let l=o.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:p}=Kx(e.packedInputs,o.shape,l),d="",h="",f="";if(c.length===1&&e.packedInputs){let w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${w[0]>1}_${w[1]>1}`}else if(c.length===2&&!e.packedInputs)h=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!e.packedInputs){let w=v.computeStrides(c);f=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}let m=o.shape.length,g=c.length===2&&v.arraysEqual(o.shape,l),y=v.sizeFromShape(o.shape)===1,x=T.getBroadcastDims(o.shape,n.shape),A=!e.packedInputs&&m===n.shape.length&&v.arraysEqual(l,n.texData.texShape),b=e.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${A}_${u?p:""}_${c.length}_${y}_${x}_${g}_${d}_${h}_${f}_${b}_${i}`}else{let l=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${l}_${i}`}});let r=e.userCode,a=e.constructor.name;return a+="_"+s+"_"+r+`${j().getNumber("WEBGL_VERSION")}`,a}function bs(e){return j().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var lte=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Dp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=os();this.outputShape=e,this.enableShapeUniforms=bs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?w2(["r","c","d"],e):ru(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},ute=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Dp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=os();this.outputShape=e,this.enableShapeUniforms=bs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?w2(["r","c","d"],e):ru(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},cte=class{constructor(e){this.variableNames=["A"],this.outTexUsage=js.DOWNLOAD;let t=os();this.outputShape=e,this.userCode=`
      ${LS}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},dte=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=js.DOWNLOAD;let t=os();this.outputShape=e,this.userCode=`
      ${LS}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},pte=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=os();this.outputShape=e,this.enableShapeUniforms=bs(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Xx():qx(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}},hte=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=os();this.outputShape=e,this.enableShapeUniforms=bs(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){let i=a*2+o;s+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Xx():qx(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${n.output} = ${r};
        }
    `}},GS={};Ge(GS,{bindVertexProgramAttributeStreams:()=>QS,createBufferFromOutputTexture:()=>n9,createFloat16MatrixTexture:()=>KS,createFloat16PackedMatrixTexture:()=>JS,createFloat32MatrixTexture:()=>XS,createIndexBuffer:()=>qS,createPackedMatrixTexture:()=>YS,createUnsignedBytesMatrixTexture:()=>ZS,createVertexBuffer:()=>jS,createVertexShader:()=>HS,downloadByteEncodedFloatMatrixFromOutputTexture:()=>r9,downloadFloat32MatrixFromBuffer:()=>s9,downloadMatrixFromPackedOutputTexture:()=>o9,downloadPackedMatrixFromBuffer:()=>a9,getInternalFormatForFloat16MatrixTexture:()=>Yx,getInternalFormatForFloat16PackedMatrixTexture:()=>eb,getInternalFormatForFloat32MatrixTexture:()=>Zx,getInternalFormatForPackedMatrixTexture:()=>Qx,getInternalFormatForUnsignedBytesMatrixTexture:()=>Jx,uploadDenseMatrixToTexture:()=>e9,uploadPixelDataToTexture:()=>t9});function HS(e){let t=os(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return yS(e,n)}function jS(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return vS(e,t)}function qS(e){let t=new Uint16Array([0,1,2,2,1,3]);return wS(e,t)}function Mh(e,t,n,s,r,a){IS(t,n);let o=kS(e),i=e.TEXTURE_2D;return Ie(e,()=>e.bindTexture(i,o)),Ie(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),Ie(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),Ie(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),Ie(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),j().getNumber("WEBGL_VERSION")===1?Ie(e,()=>e.texImage2D(i,0,s,t,n,0,r,a,null)):Ie(e,()=>e.texStorage2D(i,1,s,t,n)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:o,texShape:[n,t]}}function Zx(e){return e.internalFormatFloat}function XS(e,t,n,s){let[r,a]=Oh(t,n);return Mh(e,r,a,Zx(s),s.textureFormatFloat,e.FLOAT)}function Yx(e){return e.internalFormatHalfFloat}function KS(e,t,n,s){let[r,a]=Oh(t,n);return Mh(e,r,a,Yx(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function Jx(e){return e.downloadTextureFormat}function ZS(e,t,n,s){let[r,a]=Oh(t,n);return Mh(e,r,a,Jx(s),e.RGBA,e.UNSIGNED_BYTE)}function Qx(e){return e.internalFormatPackedFloat}function YS(e,t,n,s){let[r,a]=sd(t,n);return Mh(e,r,a,Qx(s),e.RGBA,e.FLOAT)}function eb(e){return e.internalFormatPackedHalfFloat}function JS(e,t,n,s){let[r,a]=sd(t,n);return Mh(e,r,a,eb(s),e.RGBA,s.textureTypeHalfFloat)}function QS(e,t,n){return Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),oy(e,t,"clipSpacePos",n,3,20,0)&&oy(e,t,"uv",n,2,20,12)}function e9(e,t,n,s,r,a){Ie(e,()=>e.bindTexture(e.TEXTURE_2D,t));let o,i,l;r instanceof Uint8Array?(o=new Uint8Array(n*s*4),i=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(n*s*4),i=e.FLOAT,l=a.internalFormatPackedFloat),o.set(r),j().getNumber("WEBGL_VERSION")===2?Ie(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,i,o)):Ie(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,i,o)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function t9(e,t,n){Ie(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?j().getNumber("WEBGL_VERSION")===2?Ie(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):Ie(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):j().getNumber("WEBGL_VERSION")===2?Ie(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):Ie(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function n9(e,t,n,s){let r=e.createBuffer();Ie(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let i=4*4*t*n;return Ie(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),Ie(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),Ie(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function s9(e,t,n){let s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function r9(e,t,n,s){let[r,a]=Oh(t,n),o=4,i=new Uint8Array(uee(t*n,o));return Ie(e,()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function a9(e,t,n,s,r,a,o,i){let l=e,u=new Float32Array(cee(a,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function o9(e,t,n){let s=new Float32Array(t*n*4);return Ie(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}var Xu=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=j().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,v2(t,e)):this.gl=Pr(t);let n="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),j().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=cp(this.gl,r),qs(this.gl,a))this.textureHalfFloatExtension=cp(this.gl,a);else if(j().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),qs(this.gl,s))this.colorBufferHalfFloatExtension=cp(this.gl,s);else if(j().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",qs(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(qs(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=jS(this.gl),this.indexBuffer=qS(this.gl),this.framebuffer=SS(this.gl),this.textureConfig=Hx(this.gl,this.textureHalfFloatExtension)}get debug(){return j().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;Ie(e,()=>e.finish()),Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Ie(e,()=>e.deleteFramebuffer(this.framebuffer)),Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Ie(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Ie(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),XS(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),KS(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),ZS(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),t9(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),e9(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),JS(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),YS(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(iy(this.gl,this.framebuffer),this.outputTexture=null),Ie(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>r9(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return a9(this.gl,e,t,n,s,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return s9(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let s=n9(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(j().getBool("WEBGL_FENCE_API_ENABLED")){let s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=s.clientWaitSync(r,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=r}else j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>o9(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=HS(t));let n=xS(t);return Ie(t,()=>t.attachShader(n,this.vertexShader)),Ie(t,()=>t.attachShader(n,e)),bS(t,n),this.debug&&rm(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=QS(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&Ie(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&rm(this.gl,this.program),Ie(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?TS(this.gl,e,t):NS(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Ie(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),ES(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[s,r]=sd(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&rm(this.gl,this.program),dp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),Ie(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ie(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=cp(this.gl,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(s.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),s=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=fte(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&v.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),am(this.gl,e,this.framebuffer),this.debug&&dp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(am(this.gl,this.outputTexture,this.framebuffer),this.debug&&dp(this.gl)):iy(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let s=this.gl;am(s,e,this.framebuffer),this.debug&&dp(s),this.outputTexture=e,Ie(s,()=>s.viewport(0,0,t,n)),Ie(s,()=>s.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),Ie(this.gl,()=>this.gl.scissor(e,t,n,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function fte(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:mte,bincountImpl:i9,bincountReduceImpl:gte,ceilImpl:yte,concatImpl:Ate,equalImpl:xte,expImpl:bte,expm1Impl:vte,floorImpl:wte,gatherNdImpl:kte,gatherV2Impl:Ite,greaterImpl:Ste,greaterEqualImpl:Cte,lessImpl:Tte,lessEqualImpl:Nte,linSpaceImpl:Ete,logImpl:Rte,maxImpl:_te,maximumImpl:Dte,minimumImpl:$te,multiplyImpl:Pte,negImpl:Fte,notEqualImpl:Ote,prodImpl:Mte,rangeImpl:zte,rsqrtImpl:Lte,scatterImpl:Bte,sigmoidImpl:Wte,simpleAbsImpl:l9,sliceImpl:Vte,sparseFillEmptyRowsImpl:Ute,sparseReshapeImpl:Gte,sparseSegmentReductionImpl:u9,sqrtImpl:Hte,stridedSliceImpl:jte,stringNGramsImpl:qte,stringSplitImpl:Xte,stringToHashBucketFastImpl:Kte,subImpl:Zte,tileImpl:Yte,topKImpl:Jte,transposeImpl:tb,uniqueImpl:Qte}=Rx;function c9(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function ns(e,t){return t===1?[e]:c9(e,t)}function ene(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}var tne=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=bs(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=ns("rc",this.rank),n=vt(this.rank),s=this.getOutOfBoundsCondition(t),r=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${n===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)r=`${e[e.length-1-a]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},d9=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=bs(this.outputShape.length);let n="";for(let s=0;s<4;s++){let r="thisRC = rc;";s%2===1&&(r+="thisRC.z += 1;"),s>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${nne(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Xx():qx(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function nne(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?wee(["r","c","d"],"inputShape"):ru(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var sne=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let s=A7(t,n),r=x7(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let a=y7(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let i=this.freeTextures[r].shift();return this.usedTextures[r].push(i),i}let o;return s===Sn.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===Sn.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===Sn.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===Sn.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===Sn.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,s){if(this.freeTextures==null)return;let r=A7(n,s),a=x7(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);let o=y7(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),i=j().get("WEBGL_DELETE_TEXTURE_THRESHOLD");i!==-1&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;let l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function rne(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function y7(e,t,n,s,r){let a=ane(t,s),o;if(r){let[l,u]=sd(e[0],e[1]);o=l*u}else{let[l,u]=Oh(e[0],e[1]);o=l*u}let i=rne(n,a);return o*i}function ane(e,t){switch(e){case Sn.PACKED_2X2_FLOAT32:return Qx(t);case Sn.PACKED_2X2_FLOAT16:return eb(t);case Sn.UNPACKED_FLOAT32:return Zx(t);case Sn.UNPACKED_FLOAT16:return Yx(t);case Sn.PACKED_4X1_UNSIGNED_BYTE:return Jx(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function one(e){return j().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Sn.PACKED_2X2_FLOAT32:Sn.UNPACKED_FLOAT32:e?Sn.PACKED_2X2_FLOAT16:Sn.UNPACKED_FLOAT16}function A7(e,t){if(e===js.UPLOAD)return Sn.PACKED_2X2_FLOAT32;if(e===js.RENDER||e==null)return one(t);if(e===js.DOWNLOAD||e===js.PIXELS)return Sn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function x7(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var ha=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=bs(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},pr="if (isnan(x)) return x;",ine="return x;",b7="return abs(x);",lne="return (x >= 0.0) ? x : (exp(x) - 1.0);",une=pr+`
  return (x < 0.0) ? 0.0 : x;
`,cne=pr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Ou="return x;",dne="return 1.0 / (1.0 + exp(-1.0 * x));",pne="return x;",hne=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,fne=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,mne=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,gne="return 1.0 / (1.0 + exp(-1.0 * x));",Gi=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=bs(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},yne=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=bs(this.outputShape.length);let t=e.length,n=ns("rc",t),s=vt(t),r=ene(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}},Ane=cr.whereImpl,xne=1e-7,bne=1e-4,Jf={};function vne(e){return e in Jf||(Jf[e]={}),Jf[e]}var wne=j().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),kne=600;function Ine(){return j().global.screen==null?1024:j().global.screen.height*j().global.screen.width*window.devicePixelRatio*kne/1024/1024}var ud=class extends pc{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!j().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Xu)t=e;else{let n=Pr(j().getNumber("WEBGL_VERSION"),e);t=new Xu(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=Pr(j().getNumber("WEBGL_VERSION"));t=new Xu(n),this.binaryCache=vne(j().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new sne(this.gpgpu),this.numMBBeforeWarning=Ine(),this.texData=new zp(this,nn())}nextDataId(){return ud.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((j().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||j().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:js.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(j().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:js.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:o,isPacked:i}=t;if(a!=null){let p;i?p=new Gi(o,Ou):p=new ha(o,Ou);let d=this.runWebGLProgram(p,[{dataId:e,shape:o,dtype:s}],s),h=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return n;let l=this.activeTimers!=null,u;l&&(u=v.now());let c;if(s==="complex64"){let p=this.readSync(r.real.dataId),d=this.readSync(r.imag.dataId);c=T.mergeRealAndImagArrays(p,d)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=v.now()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(f=>h.push(f))}let t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(r!=null){let h;i?h=new Gi(s,Ou):h=new ha(s,Ou);let f=this.runWebGLProgram(h,[{dataId:e,shape:s,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(j().getBool("DEBUG")&&!j().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&j().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,u;if(a!=="complex64"&&j().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);let h=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(h.texture.texture,...Zf(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let c;if(a==="complex64"){let h=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=h[0],m=h[1];c=T.mergeRealAndImagArrays(f,m)}else if(l==null)c=this.getValuesFromTexture(e);else{let h=v.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}if(u!=null&&this.disposeIntermediateTensorInfo(u),l!=null){let h=this.gpgpu.gl;Ie(h,()=>h.deleteBuffer(l))}let p=this.convertAndCacheOnCPU(e,c),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(h=>h(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&nn().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){let n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:o,isPacked:i,texture:l}=n;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let d;i?d=new Gi(r,Ou):d=new ha(r,Ou);let h=this.runWebGLProgram(d,[{dataId:e,shape:r,dtype:o}],o),f=this.readToGPU(h,t);return this.disposeIntermediateTensorInfo(h),f}if(l==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),c=nn().makeTensorFromTensorInfo(u),p=this.texData.get(u.dataId);return Object.assign({tensorRef:c},p.texture)}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(s=>v.decodeString(s));return We(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return We(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!mS(n))throw j().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=v.sizeFromShape(t);if(j().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let p=this.decode(e),d=this.texData.get(p.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...Zf(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(p),h}let a=j().getBool("WEBGL_PACK")&&s===!0,o=a?om(t):t,i=a?new dte(o):new cte(o),l=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=v.flatten(this.activeTimers.map(i=>i.query)).filter(i=>i!=null),a=v.flatten(this.activeTimers.map(i=>i.name)).filter(i=>i!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let i=await Promise.all(r);o.kernelMs=v.sum(i),o.getExtraProfileInfo=()=>i.map((l,u)=>({name:a[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:v.now(),endMs:null}}endTimer(e){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=v.now(),e)}async getQueryTime(e){if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,l=this.dataRefCount.get(i);l>1?this.dataRefCount.set(i,l-1):(this.dataRefCount.delete(i),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=wne){return j().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&v.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return Ane(e.shape,t)}packedUnaryOp(e,t,n){let s=new Gi(e.shape,t),r=this.compileAndRun(s,[e],n);return nn().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=l9(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(j().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,b7,e.dtype);let t=new ha(e.shape,b7),n=this.compileAndRun(t,[e]);return nn().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return nn().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new yne(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new tne(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[rl(e.shape),...al(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[rl(t),...al(t)],a=new d9(r,n),o=!0,i=[n],l=this.runWebGLProgram(a,[s],e.dtype,i,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;if(t!=null){let p=v.sizeFromShape(r),d=t[0]*t[1]*4;v.assert(p<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let o=om(r),i;s?i=new ute(o):i=new lte(o);let l=!0,u=[t!=null?t:Zf(o)],c=this.runWebGLProgram(i,[{shape:o,dtype:a,dataId:e}],a,u,l,t);return{dtype:a,shape:r,dataId:c.dataId}}runWebGLProgram(e,t,n,s,r=!1,a){let o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===Dp.DENSE){let g=a!=null?a:Zf(e.outputShape);i.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),v.sizeFromShape(o.shape)===0)return i.values=v.getTypedArrayFromDType(o.dtype,0),o;let l=[],u=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&v.sizeFromShape(g.shape)<=j().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!$p(y.shape,g.shape)){let x=g,A=g.shape;g.shape=y.shape,g=this.packedReshape(g,A),l.push(g),y=this.texData.get(g.dataId),x.shape=A}return{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(o.dataId);let c={shape:o.shape,texData:i,isUniform:!1},p=ite(e,u,c),d=this.getAndSaveBinary(p,()=>ate(this.gpgpu,e,u,c)),h=this.activeTimers!=null,f;h&&(f=this.startTimer()),j().get("ENGINE_COMPILE_ONLY")||ote(this.gpgpu,d,u,c,s),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=j().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=v.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!j().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&r===!1){let g=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),g}return o}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(j().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Z(()=>{if(!j().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=j().getBool("DEBUG");j().set("DEBUG",!1);let t=this.abs(Ce(1e-8)).dataSync()[0];if(j().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?xne:bne}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:o,isPacked:i}=t;if(a!=null)return;let l=this.activeTimers!=null,u;l&&(u=v.now());let c=t.texShape;if(c==null&&(c=DS(n,i),t.texShape=c),r!=null){let p=om(n),d,h=c[1],f=c[0],m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(i||!m)&&([h,f]=sd(c[0],c[1])),i?d=new hte(p,m):d=new pte(p,m);let g=m?[f,h]:c,y=this.makeTensorInfo(g,s),x=this.texData.get(y.dataId);m?x.usage=js.PIXELS:x.usage=js.UPLOAD,x.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),h,f,r);let A=[[f,h]],b=!0,w=this.runWebGLProgram(d,[y],s,A,b),I=this.texData.get(w.dataId);t.texShape=I.texShape,t.isPacked=I.isPacked,t.usage=I.usage,j().get("ENGINE_COMPILE_ONLY")?this.disposeData(w.dataId):(t.texture=I.texture,t.values=null,this.texData.delete(w.dataId)),this.disposeIntermediateTensorInfo(y),l&&(this.uploadWaitMs+=v.now()-u)}else{let p=this.acquireTexture(c,o,s,i);t.texture=p}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),t!=null&&(n.values=Sne(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*v.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(r){throw r}});e.push(n)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await YA(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(jx(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,inShapesLocations:a,inTexShapesLocations:o,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}=US(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.inShapesLocations=a,e.inTexShapesLocations=o,e.outShapeLocation=i,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}};ud.nextDataId=0;function Sne(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}var Cne="3.19.0";function p9(){j().set("WEBGL_FORCE_F16_TEXTURES",!0)}ah.isBrowser()&&Xl("webgl",()=>new ud,2);var Tne={forceHalfFloat:p9},h9=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,dc=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=bs(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},k2=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,zh=class{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=bs(r);let a="";if(s)if(r===0||v.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${vt(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=ns("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function Fs(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var Nne={kernelName:Do,backendName:"webgl",kernelFunc:Fs};function hi(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.texData.get(a.dataId),i=Fs({inputs:{x:s},backend:n}),l=Fs({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var Ene={kernelName:Bp,backendName:"webgl",kernelFunc:hi},f9="return (a < 0.) ? b * a : a;",m9=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Rne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=n.makeTensorInfo([],"float32",v.createScalarValue(a,"float32")),i=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zh(m9,r.shape,o.shape):new dc(f9,r.shape,o.shape),l=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),l}var _ne={kernelName:$o,backendName:"webgl",kernelFunc:Rne},g9="return (a < 0.) ? b * a : a;",y9=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Dne(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zh(y9,s.shape,r.shape):new dc(g9,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}var $ne={kernelName:Ho,backendName:"webgl",kernelFunc:Dne},cd="if (isnan(x)) return x;",Pne=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Fne=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function dt({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{let{x:o}=r,i=a,l=s||o.dtype;if(i.shouldExecuteOnCPU([o])&&n!=null){let p=i.texData.get(o.dataId),d=n(p.values,l);return i.makeTensorInfo(o.shape,l,d)}let u=j().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,c;return u?c=new Gi(o.shape,t):c=new ha(o.shape,e),i.runWebGLProgram(c,[o],l)}}function _n({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:o,backend:i})=>{let{a:l,b:u}=o,c=i;if(s&&l.dtype==="complex64"){let f=c.texData.get(l.dataId),m=c.texData.get(u.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(A=>{let[b,w]=A,I={dataId:b.dataId,dtype:b.dtype,shape:l.shape},k={dataId:w.dataId,dtype:w.dtype,shape:u.shape},R=new dc(e,l.shape,u.shape);return c.runWebGLProgram(R,[I,k],Mn(b.dtype,w.dtype))}),x=hi({inputs:{real:g,imag:y},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(y),x}let p=a||Mn(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&r!=null){let f=c.texData.get(l.dataId).values,m=c.texData.get(u.dataId).values,g=l.dtype==="string"?T.fromUint8ToStringArray(f):f,y=l.dtype==="string"?T.fromUint8ToStringArray(m):m,[x,A]=r(l.shape,u.shape,g,y,p),b=c.makeTensorInfo(A,p),w=c.texData.get(b.dataId);return w.values=x,b}let d=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return d?h=new zh(t,l.shape,u.shape,n):h=new dc(e,l.shape,u.shape),c.runWebGLProgram(h,[l,u],p)}}function I2(e,t=!1){if(e==="linear")return t?pne:ine;if(e==="relu")return t?fne:une;if(e==="elu")return t?hne:lne;if(e==="relu6")return t?mne:cne;if(e==="prelu")return t?y9:g9;if(e==="leakyrelu")return t?m9:f9;if(e==="sigmoid")return t?gne:dne;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var A9=class{constructor(e,t,n,s=!1,r=!1,a=!1,o=null,i=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=bs(this.outputShape.length);let u=s?e[1]:e[2],c=Math.ceil(u/2),p=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",h=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";o&&(i?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:m=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",A="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(A=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${c}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${c}; i++) {
          int batchA = ${x};
          int batchB = ${A};
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${f[0]});
          result += (${h[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},v7={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},w7=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},k7="return a * b;";function nb(e){let{inputs:t,backend:n}=e,{a:s,b:r}=t,a=T.upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),u=new w7(v7.REAL,s.shape,r.shape),c=new w7(v7.IMAG,s.shape,r.shape),p=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=n.runWebGLProgram(u,p,"float32"),h=n.runWebGLProgram(c,p,"float32"),f=hi({inputs:{real:d,imag:h},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}if(n.shouldExecuteOnCPU([s,r])){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),[u,c]=Pte(s.shape,r.shape,i.values,l.values,a),p=n.makeTensorInfo(c,a),d=n.texData.get(p.dataId);return d.values=u,p}let o;return j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new zh(k7,s.shape,r.shape):o=new dc(k7,s.shape,r.shape),n.runWebGLProgram(o,[s,r],a)}var One={kernelName:Vo,backendName:"webgl",kernelFunc:nb};function Mne(e,t,n){let s=[rl(e.shape),...al(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[rl(t),...al(t)],o=new d9(a,s),i=!0,l=[s],u=n.runWebGLProgram(o,[r],e.dtype,l,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function ve(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=n,i=v.sizeFromShape(r.shape),l=v.inferFromImplicitShape(a,i),u=v.sizeFromShape(l);v.assert(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let c=o.texData.get(r.dataId);return c.isPacked&&!$p(r.shape,l)&&!(c.texture!==null&&$p(c.shape,l))?Mne(r,l,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}var zne={kernelName:Dl,backendName:"webgl",kernelFunc:ve},I7=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o=Math.floor(n/4)*4,i=n%4,l="sumValue += dot(values, ones);";if(t!=null){let c=1/t;l=`sumValue += dot(values * ${v.isInt(c)?c.toPrecision(2):c}, ones);`}let u="";r%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${o};
        if (${i===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${i===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${i===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},Lne=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o="0.0",i="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",i="min"):t==="max"&&(o="-1.0 / 1e-20",i="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let u=Math.floor(n/4)*4,c=n%4,p=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(o="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(o="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${u};
        if (${c===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${c===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${c===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${l});
      }
    `}};function Bne(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],s=T.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function ou(e,t,n,s){let r=Bne(e.shape),a=e;for(let o=0;o<r.length;o++){let{inSize:i,windowSize:l,outSize:u}=r[o],c,p;n==="mean"?c=o===0?new I7({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u},i):new I7({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u}):c=new Lne({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u},n),p=a,a=s.runWebGLProgram(c,[a],t),p.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(p)}return a}var Wne=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let s=vt(this.rank),r=Vne(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function Vne(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}var Une=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=vt(this.rank),r=c9("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=r[u];let o=`vec2(${a.slice(-2).join()})`,i=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${i}) {
        result[1] = ${l};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${i}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function S2(e,t,n){let s=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Une(e.shape,t):new Wne(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function Gne(e,t,n,s){let r=t,a=e.shape.length,o=v.parseAxisParam(r,e.shape),i=o,l=T.getAxesPermutation(i,a),u=l!=null,c=e;u&&(c=S2(e,l,s),i=T.getInnerMostAxes(i.length,a)),T.assertAxesAreInnerMostDims("sum",i,a);let[p,d]=T.computeOutAndReduceShapes(c.shape,i),h=p;n&&(h=T.expandShapeToKeepDim(p,o));let f=v.sizeFromShape(d),g=v.sizeFromShape(e.shape)/f,y=ve({inputs:{x:c},attrs:{shape:[g,f]},backend:s}),x=rh(e.dtype),A=ou(y,x,"sum",s),b=ve({inputs:{x:A},attrs:{shape:h},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(A),u&&s.disposeIntermediateTensorInfo(c),b}function C2(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Gne(r,a,o,n)}var Hne={kernelName:ti,backendName:"webgl",kernelFunc:C2};function ss(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let c=0;c<l.length;c++)l[c]=r.shape[a[c]];let u;if(o.shouldExecuteOnCPU([r])){let p=o.texData.get(r.dataId).values,d=tb(p,r.shape,r.dtype,a,l);u=o.makeTensorInfo(l,r.dtype);let h=o.texData.get(u.dataId);h.values=d}else u=S2(r,a,o);return u}var jne={kernelName:jr,backendName:"webgl",kernelFunc:ss},x9=1e3;function Mm({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let u=e.shape.length,c=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],h=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(m),x=v.sizeFromShape(g),b=Kl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);v.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let w=n?[y,p,h]:[y,h,p],I=s?[x,f,d]:[x,d,f],k=ve({inputs:{x:e},backend:r,attrs:{shape:w}}),R=ve({inputs:{x:t},backend:r,attrs:{shape:I}}),_=[k,R],D=Math.max(y,x),E=n?k.shape[1]:k.shape[2],P=a!=null,C=o!=null,M=l==="leakyrelu",W=l!=null?I2(l,!0):null,G=P||C||M||W!=null,X;if((h===1||f===1)&&E>x9&&G===!1){let Y=k,se=R;n&&(Y=ss({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),_.push(Y)),s&&(se=ss({inputs:{x:R},backend:r,attrs:{perm:[0,2,1]}}),_.push(se));let ee=f!==1,le=f===1,re=Y;ee&&(re=ve({inputs:{x:Y},backend:r,attrs:{shape:[D,E,1]}}),_.push(re));let pe=f===1?2:1,ce=se;le&&(ce=ve({inputs:{x:se},backend:r,attrs:{shape:[D,1,E]}}),_.push(ce));let Ae=nb({inputs:{a:re,b:ce},backend:r});X=C2({inputs:{x:Ae},backend:r,attrs:{axis:pe,keepDims:!0}}),_.push(Ae)}else{let Y=Mn(e.dtype,t.dtype),se=new A9(w,I,[D,h,f],n,s,P,W,C,M),ee=[k,R];if(a!=null&&ee.push(a),C&&ee.push(o),M){let le=r.makeTensorInfo([],"float32",v.createScalarValue(i,"float32"));ee.push(le),_.push(le)}X=r.runWebGLProgram(se,ee,Y)}let K=ve({inputs:{x:X},backend:r,attrs:{shape:b}});_.push(X);for(let Y of _)r.disposeIntermediateTensorInfo(Y);return K}function qne(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=s;return Mm({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:p,activation:c})}var Xne={kernelName:Qa,backendName:"webgl",kernelFunc:qne},S7="return abs(x);";function Kne(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){let a=n.texData.get(s.dataId),o=l9(a.values);return n.makeTensorInfo(s.shape,s.dtype,o)}let r;return j().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Gi(s.shape,S7):r=new ha(s.shape,S7),n.runWebGLProgram(r,[s],s.dtype)}var Zne={kernelName:ll,backendName:"webgl",kernelFunc:Kne},Yne=pr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Jne=dt({opSnippet:Yne}),Qne={kernelName:fc,backendName:"webgl",kernelFunc:Jne},ese=pr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,tse=dt({opSnippet:ese}),nse={kernelName:mc,backendName:"webgl",kernelFunc:tse},C7="return a + b;",sse=_n({opSnippet:C7,packedOpSnippet:C7,supportsComplex:!0,cpuKernelImpl:mte}),rse={kernelName:ba,backendName:"webgl",kernelFunc:sse},ase=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}},ose=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}};function um(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Fs({inputs:{x:s[0]},backend:n});if(s.length>j().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(s.length/2),u=um({inputs:s.slice(0,l),backend:n}),c=um({inputs:s.slice(l),backend:n});return um({inputs:[u,c],backend:n})}let r=s.map(l=>l.dtype).reduce((l,u)=>Mn(l,u)),a=s.map(l=>l.shape),i=j().getBool("WEBGL_PACK")?new ose(s[0].shape,a):new ase(s[0].shape,a);return n.runWebGLProgram(i,s,r)}var ise={kernelName:ho,backendName:"webgl",kernelFunc:um};function lse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),u=l,c=T.getAxesPermutation(u,i),p=r;c!=null&&(p=ss({inputs:{x:r},backend:n,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,i)),T.assertAxesAreInnerMostDims("all",u,i);let[d,h]=T.computeOutAndReduceShapes(p.shape,u),f=v.sizeFromShape(h),m=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}}),g=ou(m,m.dtype,"all",n),y;if(o){let x=T.expandShapeToKeepDim(d,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),y}var use={kernelName:gc,backendName:"webgl",kernelFunc:lse};function cse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),u=l,c=T.getAxesPermutation(u,i),p=r;c!=null&&(p=ss({inputs:{x:r},backend:n,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,i)),T.assertAxesAreInnerMostDims("any",u,i);let[d,h]=T.computeOutAndReduceShapes(p.shape,u),f=v.sizeFromShape(h),m=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}}),g=ou(m,m.dtype,"any",n),y;if(o){let x=T.expandShapeToKeepDim(d,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),y}var dse={kernelName:yc,backendName:"webgl",kernelFunc:cse},pse=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];let o=t==="max"?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${i};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},hse=class{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,v.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");let o=this.outputShape,i=o.length,l=vt(i),u=ns("coords",i),c,p;if(a===1){p=i+1;let k=vt(p);c=`
        ${k} sourceLocR = ${k}(${u.join()}, 0);
        ++${u[i-1]};
        ${k} sourceLocG = ${k}(${u.join()}, 0);
        ++${u[i-2]};
        ${k} sourceLocA = ${k}(${u.join()}, 0);
        --${u[i-1]};
        ${k} sourceLocB = ${k}(${u.join()}, 0);
        --${u[i-2]};`}else p=i,c=`
        ${l} sourceLocR = coords;
        ++${u[i-1]};
        ${l} sourceLocG = coords;
        ++${u[i-2]};
        ${l} sourceLocA = coords;
        --${u[i-1]};
        ${l} sourceLocB = coords;
        --${u[i-2]};`;let d=["x","y","z","w","u","v"].slice(0,p),h="."+d[p-1],f=d.map(k=>"int "+k),m=ns("sourceLocR",p-1).concat("inIdx.r"),g=ns("sourceLocG",p-1).concat("inIdx.g"),y=ns("sourceLocB",p-1).concat("inIdx.b"),x=ns("sourceLocA",p-1).concat("inIdx.a"),A=n==="max"?"greaterThan":"lessThan",b=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=s?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${I}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${u[i-1]} < ${o[i-1]-1};
        bool hasNextRow = ${u[i-2]} < ${o[i-2]-1};
        ${c}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${A}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function b9(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);let o=T.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},l=new pse(i,n,s==null),u=[t];s!=null&&u.push(s);let c=e.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;let p=b9(e,t,n,c);return e.disposeIntermediateTensorInfo(c),p}function v9(e,t,n,s=null){let r=s!=null?s.shape:t.shape,a=r[r.length-1],o=T.computeOptimalWindowSize(a),i=new hse(r,o,n,s==null),l=s==null?[t]:[t,s],u=e.runWebGLProgram(i,l,"int32");if(u.shape.length===t.shape.length){let c=v9(e,t,n,u);return e.disposeIntermediateTensorInfo(u),c}return u}function w9(e,t,n,s){let r=[n];if(T.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!j().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],o=e.texData.get(t.dataId),i=o!==null&&o.isPacked,l=t;i&&(l=e.unpackTensor(t),a.push(l));let[u,c]=T.computeOutAndReduceShapes(l.shape,r),p=v.sizeFromShape(c),d=ve({inputs:{x:l},backend:e,attrs:{shape:[-1,p]}});a.push(d);let h=b9(e,d,s);a.push(h);let f=ve({inputs:{x:h},backend:e,attrs:{shape:u}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return v9(e,t,s)}function fse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=ss({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let c=w9(n,l,o[0],"max");return u.forEach(p=>n.disposeIntermediateTensorInfo(p)),c}var mse={kernelName:fo,backendName:"webgl",kernelFunc:fse};function gse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=ss({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let c=w9(n,l,o[0],"min");return u.forEach(p=>n.disposeIntermediateTensorInfo(p)),c}var yse={kernelName:Ac,backendName:"webgl",kernelFunc:gse},Ase=pr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,xse=dt({opSnippet:Ase}),bse={kernelName:xc,backendName:"webgl",kernelFunc:xse},vse=pr+"return log(x + sqrt(x * x + 1.0));",wse=dt({opSnippet:vse}),kse={kernelName:bc,backendName:"webgl",kernelFunc:wse},Ise=pr+`
  return atan(x);
`,Sse=dt({opSnippet:Ise}),Cse={kernelName:vc,backendName:"webgl",kernelFunc:Sse},Tse=Pne+`
  return atan(a, b);
`,Nse=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Fne+`
  return result;
`,Ese=_n({opSnippet:Tse,packedOpSnippet:Nse}),Rse={kernelName:kc,backendName:"webgl",kernelFunc:Ese},_se=pr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Dse=dt({opSnippet:_se}),$se={kernelName:wc,backendName:"webgl",kernelFunc:Dse},Pp=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let k=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${i});
        const ivec2 pads = ivec2(${d}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${c};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${k} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?r?m:g:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(A="avgValue / count");let b=Math.floor(a/4)*4,w=a%4,I=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${d}, ${h});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${c};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${I}
          }

          int xC = xCCorner + ${b};
          if (${w===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${I}
          } else if (${w===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${I}
          } else if (${w===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${I}
          }
        }
        setOutput(${A});
      }
    `}},sb=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let x=t==="avg",A="0.0";if(x||(A="-1.0 / 1e-20"),n){let _=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${i}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${c}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${_} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / count");let I=Math.floor(a/4)*4,k=a%4,R=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${i}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${A};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${A});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${I}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${R}
            }

            int xC = xCCorner + ${I};
            if (${k===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${k===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${k===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${R}
            }
          }
          setOutput(${w});
        }
      }
    `}};function Pse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;rd(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1;v.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let c=T.computePool2DInfo(r.shape,a,o,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&v.arraysEqual(c.inShape,c.outShape))return Fs({inputs:{x:r},backend:n});let p=new Pp(c,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}var Fse={kernelName:mo,backendName:"webgl",kernelFunc:Pse};function Ose(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],p=T.computePool3DInfo(r.shape,a,o,c,i,l,u),d=new sb(p,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var Mse={kernelName:Lp,backendName:"webgl",kernelFunc:Ose},zse=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.top,c=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${c});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Lse=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=c-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
            wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Bse(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s,p=[1,1,1],d=T.computePool3DInfo(o.shape,i,l,p,u,c),h=new Lse(d);return n.runWebGLProgram(h,[r],o.dtype)}var Wse={kernelName:qm,backendName:"webgl",kernelFunc:Bse};function Vse(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;rd([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:u}=s,c=T.computePool2DInfo(o.shape,i,l,1,u),p=new zse(c);return n.runWebGLProgram(p,[r],o.dtype)}var Use={kernelName:jm,backendName:"webgl",kernelFunc:Vse};function Gse(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return Mm({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var Hse={kernelName:go,backendName:"webgl",kernelFunc:Gse},jse=class{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let o="0.0";s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${i};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},qse=class{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${i};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},Xse=({inputs:e,backend:t,attrs:n})=>{let{x:s,mean:r,variance:a,offset:o,scale:i}=e;v.assert(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let u=[s,r,a],c=null;o!=null&&(c=o.shape,u.push(o));let p=null;i!=null&&(p=i.shape,u.push(i));let d=j().getBool("WEBGL_PACK_NORMALIZATION")?new qse(s.shape,r.shape,a.shape,c,p,l):new jse(s.shape,r.shape,a.shape,c,p,l);return t.runWebGLProgram(d,u,u[0].dtype)},Kse={kernelName:Ro,backendName:"webgl",kernelFunc:Xse},Zse=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=vt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=Yse(this.rank),s,r=e.map((a,o)=>`sourceLoc.${cy[o]} = start[${o}] + coords.${cy[o]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${n}));
      }
    `}},cy=["x","y","z","w","u","v"];function Yse(e){if(e===1)return"sourceLoc";if(e<=6)return cy.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var Jse=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=vt(this.rank),n=ns("coords",this.rank),s=ns("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,o=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,i=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,c)=>`start[${c}]`).join()});`:e.map((u,c)=>`${s[c]} = ${n[c]} + start[${c}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${o}
        ${i}
        setOutput(result);
      }
    `}};function Qse(e,t,n,s){let r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),o=s.texData.get(a.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=Ut.computeFlatOffset(t,v.computeStrides(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),a}function dd(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=Ut.parseSliceParams(r,a,o);if(Ut.assertParamsValid(r,i,l),v.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let p=n.texData.get(r.dataId),d=Vte(p.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,d)}let{isPacked:u}=n.texData.get(r.dataId),c=Ut.isSliceContinous(r.shape,i,l);if(u||!c){let p=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Jse(l):new Zse(l),d=[i];return n.runWebGLProgram(p,[r],r.dtype,d)}return n.uploadToGPU(r.dataId),Qse(r,i,l,n)}var ere={kernelName:Ml,backendName:"webgl",kernelFunc:dd},tre=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((x,A)=>x*A),l=T.getReshaped(r.shape,a,i),u=T.getPermuted(l.length,a.length),c=T.getReshapedPermuted(r.shape,a,i),p=T.getSliceBeginCoords(o,a.length),d=T.getSliceSize(c,o,a.length),h=[],f=ve({inputs:{x:r},backend:n,attrs:{shape:l}}),m=ss({inputs:{x:f},backend:n,attrs:{perm:u}}),g=ve({inputs:{x:m},backend:n,attrs:{shape:c}}),y=dd({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>n.disposeIntermediateTensorInfo(x)),y},nre={kernelName:ul,backendName:"webgl",kernelFunc:tre};function sre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.readSync(r.dataId),l=n.readSync(a.dataId),u=i9(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}var rre={kernelName:Xm,backendName:"webgl",kernelFunc:sre};function are(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),o=n.readSync(r.dataId),i=T.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var ore={kernelName:Km,backendName:"webgl",kernelFunc:are},ire="return float(a != b);",k9=_n({opSnippet:ire,cpuKernelImpl:Ote,dtype:"bool"}),lre={kernelName:Cl,backendName:"webgl",kernelFunc:k9};function Lh(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Fs({inputs:{x:r.complexTensorInfos.real},backend:n})}var ure={kernelName:Xp,backendName:"webgl",kernelFunc:Lh},cre="return float(int(x));";function dre(e,t){let n=new ha(e.shape,cre),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function dy(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Fs({inputs:{x:r},backend:n});let o=Wt(r.shape),i=dy({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=hi({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=Lh({inputs:{input:r},backend:n}),i=dy({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=Fs({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return dre(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),l=k9({inputs:{a:r,b:o},backend:n});return n.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var pre={kernelName:yo,backendName:"webgl",kernelFunc:dy},T7="return ceil(x);",hre=dt({opSnippet:T7,packedOpSnippet:T7,cpuKernelImpl:yte}),fre={kernelName:Ao,backendName:"webgl",kernelFunc:hre},mre=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},gre=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function yre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i;j().getBool("WEBGL_PACK_CLIP")?i=new gre(r.shape):i=new mre(r.shape);let l=[[a],[o]];return n.runWebGLProgram(i,[r],r.dtype,l)}var Are={kernelName:va,backendName:"webgl",kernelFunc:yre},xre=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function N7(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function bre(e){let{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new xre(s.shape),o=[N7(s,r.complexTensorInfos.real),N7(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}var vre={kernelName:Wp,backendName:"webgl",kernelFunc:bre},wre=class{constructor(e){this.outputShape=[],this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((a,o)=>`T${o}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let o=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}let s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},kre=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=T.computeOutShape(e,t);let n=this.outputShape,s=n.length,r=vt(s),a=ns("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((f,m)=>`T${m}`);let i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];let l=o[t],u=o.slice(-2),c=o.join(),p=`if (${l} < ${i[0]}) {
        return getChannel(
            getT0(${c}), vec2(${u.join()}));
        }`;for(let f=1;f<i.length;f++){let m=i[f-1];p+=`
        if (${l} < ${i[f]}  && ${l} >= ${i[f-1]}) {
          return getChannel(
            getT${f}(${Qf(o,l,m)}),
            vec2(${Qf(u,l,m)}));
        }`}let d=i.length,h=i[i.length-1];p+=`
        return getChannel(
          getT${d}(${Qf(o,l,h)}),
          vec2(${Qf(u,l,h)}));`,this.userCode=`
      float getValue(${o.map(f=>"int "+f)}) {
        ${p}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${n[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${n[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${n[s-2]} &&
            ${a[s-1]} < ${n[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function Qf(e,t,n){let s=e.indexOf(t);return e.map((a,o)=>o===s?`${a} - ${n}`:a).join()}function T2(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Fs({inputs:{x:r.complexTensorInfos.imag},backend:n})}var Ire={kernelName:Hp,backendName:"webgl",kernelFunc:T2};function pp(e,t,n){let s=e[0].dtype;if(s==="complex64"){let p=e.map(g=>Lh({inputs:{input:g},backend:n})),d=e.map(g=>T2({inputs:{input:g},backend:n})),h=pp(p,t,n),f=pp(d,t,n),m=hi({inputs:{real:h,imag:f},backend:n});return p.forEach(g=>n.disposeIntermediateTensorInfo(g)),d.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let p=e.map(x=>{let A=v.sizeFromShape(x.shape.slice(t));return ve({inputs:{x},backend:n,attrs:{shape:[-1,A]}})}),d=p.map(x=>({vals:n.readSync(x.dataId),shape:x.shape})),h=T.computeOutShape(p.map(x=>x.shape),1),f=p[0].shape[0]===1,m=Ate(d,h,s,f),g=T.computeOutShape(e.map(x=>x.shape),t),y=n.makeTensorInfo(g,s,m);return p.forEach(x=>n.disposeIntermediateTensorInfo(x)),y}let a=j().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>a){let p=[];for(let h=0;h<e.length;h+=a){let f=e.slice(h,h+a);p.push(pp(f,t,n))}let d=pp(p,t,n);for(let h of p)n.disposeIntermediateTensorInfo(h);return d}if(j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let p=new kre(e.map(d=>d.shape),t);return n.runWebGLProgram(p,e,s)}let{tensors2D:o,outShape:i}=Sre(e,t,n),l=new wre(o.map(p=>p.shape)),u=n.runWebGLProgram(l,o,s);o.forEach(p=>n.disposeIntermediateTensorInfo(p));let c=ve({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),c}function Sre(e,t,n){let s=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>ve({inputs:{x:a},attrs:{shape:[-1,v.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:s}}function I9(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(u=>u.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(u=>v.sizeFromShape(u.shape)>0);if(i.length===1)return Fs({inputs:{x:i[0]},backend:n});let l=i.map(u=>u.shape);return T.assertParamsConsistent(l,a),pp(i,a,n)}var Cre={kernelName:cl,backendName:"webgl",kernelFunc:I9},S9=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,y=m?2:3,x=m?3:1,A="",b="";n&&(s?A=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?A=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:A=`
          float activation(float x) {
            ${n}
          }
        `,b="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${A}

      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${c};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${w}
        ${b}
        setOutput(result);
      }
    `}},Tre=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,p=e.filterHeight,d=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${n}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${c}; wF++) {
          int xF = xFCorner + wF * ${i};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Nre=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=bs(this.outputShape.length);let{dataFormat:n}=t,s=os(),r=n==="channelsLast",a=r?1:2,o=r?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let u=0;u<=1;u++)for(let c=0;c<=1;c++)l+=`
          blockIndex = rc.z + ${c};
          pos = rc.y + ${u};

          ${i}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+c}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+c}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${s.output} = result;
      }
    `}};function zm(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&n===1&&e[0]>1?[e[0],1]:null}function C9({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,u=s.texData.get(e.dataId),c=n.inChannels,p=l[0]*l[1]*l[2],d=n.outChannels,h=n.dataFormat==="channelsLast",f=!1,m=!1,g,y=[];if(a!=null){let b=zm(a.shape,h);b!=null&&(a=ve({inputs:{x:a},backend:s,attrs:{shape:b}}),y.push(a))}if(r!=null){let b=zm(r.shape,h);b!=null&&(r=ve({inputs:{x:r},backend:s,attrs:{shape:b}}),y.push(r))}if(!((p===1||d===1)&&c>x9)&&u.isPacked&&h&&u.texture!=null&&l[2]%2!==0&&v.arraysEqual(u.shape.slice(-3),l.slice(-3))){let b=l[0]*l[1]*(l[2]+1),w={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},I=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,v.assert($p(u.shape,w.shape),()=>`packed reshape ${u.shape} to ${w.shape} isn't free`);let k=ve({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(k);let R=Mm({a:w,b:k,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),_=s.texData.get(R.dataId);v.assert(_.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=I,_.shape=n.outShape,g=Fs({inputs:{x:R},backend:s}),g.shape=n.outShape,y.push(R)}else{let b=n.outHeight*n.outWidth,w=ve({inputs:{x:e},backend:s,attrs:{shape:h?[n.batchSize,b,n.inChannels]:[n.batchSize,n.inChannels,b]}}),I=ve({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),k=Mm({a:h?w:I,b:h?I:w,transposeA:!h,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});g=ve({inputs:{x:k},backend:s,attrs:{shape:n.outShape}}),y.push(w),y.push(I),y.push(k)}for(let b of y)s.disposeIntermediateTensorInfo(b);return g}function T9({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:p,outHeight:d,dataFormat:h}=n,f=h==="channelsLast",m=l*u*c,g=d*p,y=[n.batchSize,m,g],x=!0,A=!1,b=[];if(a!=null){let K=zm(a.shape,f);K!=null&&(a=ve({inputs:{x:a},backend:s,attrs:{shape:K}}),b.push(a))}if(r!=null){let K=zm(r.shape,f);K!=null&&(r=ve({inputs:{x:r},backend:s,attrs:{shape:K}}),b.push(r))}let w=ve({inputs:{x:t},backend:s,attrs:{shape:[1,m,v.sizeFromShape(t.shape)/m]}});b.push(w);let I=new Nre(y,n),k=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],R=s.runWebGLProgram(I,[e],"float32",k),_=ve({inputs:{x:R},backend:s,attrs:{shape:y}});b.push(R),b.push(_);let D=r!=null,E=a!=null,P=i==="leakyrelu",C=i?I2(i,!0):null,M=new A9(f?_.shape:w.shape,f?w.shape:_.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],x,A,D,C,E,P),W=f?[_,w]:[w,_];if(r&&W.push(r),E&&W.push(a),P){let K=s.makeTensorInfo([],"float32",v.createScalarValue(o,"float32"));W.push(K),b.push(K)}let G=s.runWebGLProgram(M,W,"float32"),X=ve({inputs:{x:G},backend:s,attrs:{shape:n.outShape}});b.push(G);for(let K of b)s.disposeIntermediateTensorInfo(K);return X}function Ere(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s,p=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!1,p),h;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))h=C9({x:r,filter:a,convInfo:d,backend:n});else if(j().getBool("WEBGL_CONV_IM2COL"))h=T9({x:r,filter:a,convInfo:d,backend:n});else{let m=new S9(d);h=n.runWebGLProgram(m,[r,a],"float32")}let f=ve({inputs:{x:h},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(h),f}var Rre={kernelName:xo,backendName:"webgl",kernelFunc:Ere},_re=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Dre=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${c}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},$re=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Pre=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${i}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Fre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,p=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,c,o,1,i,u,!1,p),h=new _re(d);return n.runWebGLProgram(h,[r,a],"float32")}var Ore={kernelName:Zm,backendName:"webgl",kernelFunc:Fre};function Mre(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s,p=T.convertConv2DDataFormat(u),d=T.computeConv2DInfo(o,a.shape,i,1,l,c,!1,p),h=new Dre(d);return n.runWebGLProgram(h,[r,a],"float32")}var zre={kernelName:bo,backendName:"webgl",kernelFunc:Mre};function Lre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,u=T.computeConv3DInfo(r.shape,a.shape,o,l,i),c=new Tre(u);return n.runWebGLProgram(c,[r,a],"float32")}var Bre={kernelName:Vp,backendName:"webgl",kernelFunc:Lre};function Wre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s,u=T.computeConv3DInfo(r.shape,l,o,1,i),c=new $re(u);return n.runWebGLProgram(c,[r,a],"float32")}var Vre={kernelName:Ym,backendName:"webgl",kernelFunc:Wre};function Ure(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s,u=T.computeConv3DInfo(l,a.shape,i,1,o),c=new Pre(u);return n.runWebGLProgram(c,[r,a],"float32")}var Gre={kernelName:Jm,backendName:"webgl",kernelFunc:Ure},Hre=cd+`
  return cos(x);
`,jre=dt({opSnippet:Hre}),qre={kernelName:vo,backendName:"webgl",kernelFunc:jre},Xre=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Kre=dt({opSnippet:Xre}),Zre={kernelName:wo,backendName:"webgl",kernelFunc:Kre},Yre=class{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,o,i,l]=e,[u]=t,[c,p]=n;this.outputShape=[u,c,p,l];let d=s==="bilinear"?1:0,[h,f]=[`${o-1}.0`,`${i-1}.0`],[m,g,y]=c>1?[`${(o-1)/(c-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[x,A,b]=p>1?[`${(i-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${A};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},Jre=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=s,c=new Yre(r.shape,a.shape,i,l,u);return n.runWebGLProgram(c,[r,a,o],"float32")},Qre={kernelName:pl,backendName:"webgl",kernelFunc:Jre},Fp;(function(e){e.Prod="*",e.Sum="+"})(Fp||(Fp={}));var E7=class{constructor(e,t,n,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let r=this.outputShape.length,a=this.op===Fp.Prod?"1.0":"0.0",o=n?a:`getX(${R7(r,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=s?`end != ${i-1}`:"end != 0",u=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${i}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${vt(r)} coords = getOutputCoords();
        int end = ${_7(r,"coords",this.op)};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${u};
          ${_7(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${R7(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function R7(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function _7(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function N9(e,t,n,s,r,a){let o=t.shape.length,i=T.getAxesPermutation([s],o),l=t;i!=null&&(l=ss({inputs:{x:t},backend:n,attrs:{perm:i}}));let u=T.getInnerMostAxes(1,o)[0];if(u!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);let c=l.shape[u],p=Fs({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let h=new E7(e,l.shape,!1,a),f=[[d]],m=p;p=n.runWebGLProgram(h,[p],p.dtype,f),n.disposeIntermediateTensorInfo(m)}if(r){let d=new E7(e,l.shape,r,a),h=p;p=n.runWebGLProgram(d,[p],p.dtype),n.disposeIntermediateTensorInfo(h)}if(i!=null){let d=T.getUndoAxesPermutation(i),h=ss({inputs:{x:p},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),h}return p}function eae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return N9(Fp.Prod,r,n,a,o,i)}var tae={kernelName:dl,backendName:"webgl",kernelFunc:eae};function nae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return N9(Fp.Sum,r,n,a,o,i)}var sae={kernelName:ko,backendName:"webgl",kernelFunc:nae};function rae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=i9(l,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}else if(r.shape.length===2){let l=n.bufferSync(r),u=n.bufferSync(a),c=gte(l,u,o,i);return n.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var aae={kernelName:Qm,backendName:"webgl",kernelFunc:rae},oae=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function iae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],u=o==="NHWC"?r.shape[2]:r.shape[3],c=o==="NHWC"?r.shape[3]:r.shape[1],p=l*a,d=u*a,h=c/(a*a),f=o==="NHWC"?[i,p,d,h]:[i,h,p,d],m=new oae(f,a,o);return n.runWebGLProgram(m,[r],r.dtype)}var lae={kernelName:hl,backendName:"webgl",kernelFunc:iae},E9=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=bs(this.outputShape.length);let a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels,l="",u="";n&&(s?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);");let c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${c}
        ${u}
        setOutput(result);
      }
    `}},R9=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=bs(this.outputShape.length);let a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,p=c,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)d+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;d+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let g=0;g<c;g++)d+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(p+1)/2;g++){let y=g*2;if(d+=`
          xC = xCCorner + ${y*l};
          `,i===1){if(y<c&&(o%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?d+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<c)){let x=o%2===0?v.nearestLargerEven(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1&&(d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                      xTexelC${y} = getX(batch, xR, xCOffset, d1);
                      xTexelC${y}Ready = 1;
                    }
                    `),d+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                  `):x===1?d+=`
                    xC${y+1} = xTexelC${y};
                    `:d+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<c&&(o%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<c&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<c&&(d+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<c&&(d+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<c&&(d+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let h="",f="";n&&(s?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:h=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function uae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=s,c=l;c==null&&(c=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(o,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let p=T.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!0),d;j().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?d=new R9(p):d=new E9(p);let h=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(d,[r,a],"float32",h)}var cae={kernelName:Io,backendName:"webgl",kernelFunc:uae},dae=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},pae=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${i}; dm++) {
              int d2 = d1 * ${i} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function hae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=s,p=T.computeConv2DInfo(r.shape,c,o,i,l,u,!0),d=new dae(p);return n.runWebGLProgram(d,[r,a],"float32")}var fae={kernelName:e0,backendName:"webgl",kernelFunc:hae};function mae(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=s,p=T.computeConv2DInfo(c,a.shape,o,i,l,u,!0),d=new pae(p);return n.runWebGLProgram(d,[r,a],"float32")}var gae={kernelName:t0,backendName:"webgl",kernelFunc:mae},yae=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Aae(e){let{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=v.sizeFromShape(s.shape),o=ve({inputs:{x:s},backend:n,attrs:{shape:[a]}}),i=new yae(a),l=n.runWebGLProgram(i,[o],o.dtype),u=ve({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var xae={kernelName:n0,backendName:"webgl",kernelFunc:Aae},bae=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:l,dilationWidth:u}=e,{top:c,left:p}=s;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${c}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function vae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,u=T.computeDilation2DInfo(r.shape,a.shape,o,i,"NHWC",l),c,p=new bae(u);c=n.runWebGLProgram(p,[r,a],"float32");let d=ve({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}var wae={kernelName:Up,backendName:"webgl",kernelFunc:vae};function kae(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,l,a);let{path:u,steps:c}=T.getEinsumComputePath(i,l),p=c.length,d=null,h=o.length,f=[];for(let m=0;m<p;++m){for(let g of c[m]){let{permutationIndices:y,expandDims:x}=T.getEinsumPermutation(h,l[g]),A;T.isIdentityPermutation(y)?A=a[g]:(A=ss({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(A.shape,b)||(A=ve({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),d===null?d=A:(d=nb({inputs:{a:A,b:d},backend:n}),f.push(d))}m<p-1&&(u[m]>=0&&(d=C2({inputs:{x:d},backend:n,attrs:{axis:u[m]-(o.length-h),keepDims:!1}}),f.push(d)),h--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var Iae={kernelName:Gp,backendName:"webgl",kernelFunc:kae},Sae="return (x >= 0.0) ? x : (exp(x) - 1.0);",Cae=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Tae=dt({opSnippet:Sae,packedOpSnippet:Cae}),Nae={kernelName:Co,backendName:"webgl",kernelFunc:Tae},Eae="return (b >= 1.0) ? a : a * (b + 1.0);",Rae=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,_ae=e=>{let{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zh(Rae,s.shape,r.shape):new dc(Eae,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)},Dae={kernelName:s0,backendName:"webgl",kernelFunc:_ae},$ae=`
  return vec4(equal(a, b));
`,Pae="return float(a == b);",Fae=_n({opSnippet:Pae,packedOpSnippet:$ae,dtype:"bool",cpuKernelImpl:xte}),Oae={kernelName:fl,backendName:"webgl",kernelFunc:Fae},Mae=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${T.ERF_P};
  float a1 = ${T.ERF_A1};
  float a2 = ${T.ERF_A2};
  float a3 = ${T.ERF_A3};
  float a4 = ${T.ERF_A4};
  float a5 = ${T.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,zae=dt({opSnippet:Mae}),Lae={kernelName:Ic,backendName:"webgl",kernelFunc:zae},Bae=cd+`
  return exp(x);
`,Wae=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,_9=dt({opSnippet:Bae,packedOpSnippet:Wae,cpuKernelImpl:bte,dtype:"float32"}),Vae={kernelName:To,backendName:"webgl",kernelFunc:_9};function py(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(v.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),ve({inputs:{x:a},backend:s,attrs:{shape:i}})}var Uae={kernelName:ml,backendName:"webgl",kernelFunc:py},D7="return exp(x) - 1.0;",Gae=dt({opSnippet:D7,packedOpSnippet:D7,cpuKernelImpl:vte}),Hae={kernelName:gl,backendName:"webgl",kernelFunc:Gae},$7=class{constructor(e,t,n){this.variableNames=["real","imag"];let s=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0",o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function D9(e,t,n){let s=n.texData.get(e.dataId),r=v.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=r/a,i=ve({inputs:{x:e},backend:n,attrs:{shape:[o,a]}}),l=i.shape,u=new $7("real",l,t),c=new $7("imag",l,t),p=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,p,"float32"),h=n.runWebGLProgram(c,p,"float32"),f=hi({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);let m=ve({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}function jae(e){let{inputs:t,backend:n}=e,{input:s}=t;return D9(s,!1,n)}var qae={kernelName:r0,backendName:"webgl",kernelFunc:jae},Xae=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Bh(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||v.inferDtype(r),a==="string"){let o=v.getArrayFromDType(a,v.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new Xae(s,r),i=[[r]];return t.runWebGLProgram(o,[],a,i)}}var Kae={kernelName:Sc,backendName:"webgl",kernelFunc:Bh},Zae=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Yae={kernelName:yl,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new Zae(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},P7="return floor(x);",Jae=dt({opSnippet:P7,packedOpSnippet:P7,cpuKernelImpl:wte}),Qae={kernelName:No,backendName:"webgl",kernelFunc:Jae},eoe=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,toe=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,noe=_n({opSnippet:eoe,packedOpSnippet:toe,dtype:"int32"}),soe={kernelName:Eo,backendName:"webgl",kernelFunc:noe},roe=class{constructor(e){this.variableNames=["A"];let t=os(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},aoe=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=os(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},ooe={kernelName:vp,backendName:"webgl",kernelFunc:ioe},Mu;function ioe(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s,o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,[l,u]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],p=[u,l,a];(i||o)&&(Mu==null&&(Mu=document.createElement("canvas").getContext("2d")),Mu.canvas.width=l,Mu.canvas.height=u,Mu.drawImage(r,0,0,l,u),r=Mu.canvas);let d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=js.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);let h=j().getBool("WEBGL_PACK")?new aoe(p):new roe(p),f=n.runWebGLProgram(h,[d],"int32");return n.disposeData(d.dataId),f}function loe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=T.convertConv2DDataFormat(c),g=T.computeConv2DInfo(r.shape,a.shape,l,p,u,d,!1,m),y,x=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=C9({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else if(j().getBool("WEBGL_CONV_IM2COL"))y=T9({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{let b=o!=null,w=i!=null,I=h==="leakyrelu",k=h?I2(h,!1):null,R=new S9(g,b,k,w,I),_=[r,a],D=(E,P)=>{if(P==="NCHW"&&E.shape.length===1&&E.shape[0]!==1){let C=ve({inputs:{x:E},backend:n,attrs:{shape:[E.shape[0],1,1]}});return x.push(C),C}return E};if(b&&_.push(D(o,c)),w&&_.push(D(i,c)),I){let E=n.makeTensorInfo([],"float32",v.createScalarValue(f,"float32"));_.push(E),x.push(E)}y=n.runWebGLProgram(R,_,"float32")}let A=ve({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach(b=>n.disposeIntermediateTensorInfo(b)),A}var uoe={kernelName:eo,backendName:"webgl",kernelFunc:loe};function coe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=s,f=[],m=c;m==null&&(m=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=T.computeConv2DInfo(r.shape,a.shape,l,m,u,p,!0),y=j().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=d?I2(d,y):null,A=[r,a],b=o!=null,w=i!=null,I=d==="leakyrelu";if(b&&A.push(o),w&&A.push(i),I){let D=n.makeTensorInfo([],"float32",v.createScalarValue(h,"float32"));A.push(D),f.push(D)}let k;y?k=new R9(g,b,x,w,I):k=new E9(g,b,x,w,I);let R=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],_=n.runWebGLProgram(k,A,"float32",R);return f.forEach(D=>n.disposeIntermediateTensorInfo(D)),_}var doe={kernelName:to,backendName:"webgl",kernelFunc:coe},poe=class{constructor(e,t,n,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;let r=vt(t.length),a=vt(n.length),o=this.sliceDim>1?"strides[j]":"strides",i=vt(s.length),l=s.length>1?"paramsShape[j]":"paramsShape";this.userCode=`
        ${r} strides = ${r}(${this.strides});
        ${i} paramsShape = ${i}(${this.paramsShape});
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            out_of_bounds = out_of_bounds || index < 0;
            out_of_bounds = out_of_bounds || index >= ${l};
            flattenIndex += index * ${o};
          }
          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function hoe(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=v.sizeFromShape(s.shape),[l,u,c,p]=T.prepareAndValidate(s,r),d=ve({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),h=ve({inputs:{x:s},backend:n,attrs:{shape:[v.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let y=n.readSync(r.dataId),x=n.bufferSync(s),A=kte(y,x,s.dtype,u,o,c,p,s.shape,i);return n.makeTensorInfo(l,s.dtype,A.values)}let f=new poe(o,p,[u,c],s.shape),m=n.runWebGLProgram(f,[h,d],h.dtype),g=ve({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}var foe={kernelName:xl,backendName:"webgl",kernelFunc:hoe},moe=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=vt(this.rank),s=goe(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}};function goe(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("index"):s.push(`${n[r]}`);return s.join()}function $9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0];if(j().get("DEBUG")){let x=n.readSync(a.dataId),A=r.shape[l];for(let b=0;b<x.length;++b){let w=x[b];v.assert(w<=A-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${A-1}]`)}}let u=T.segment_util.collectGatherOpShapeInfo(r,a,l,i),c=v.sizeFromShape(a.shape),p=[],d=ve({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=ve({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(d),p.push(h);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let x=n.bufferSync(h),A=n.bufferSync(d),b=Ite(A,x,f);return p.forEach(w=>n.disposeIntermediateTensorInfo(w)),n.makeTensorInfo(u.outputShape,b.dtype,b.values)}let m=new moe(d.shape,f),g=n.runWebGLProgram(m,[d,h],d.dtype);p.push(g);let y=ve({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach(x=>n.disposeIntermediateTensorInfo(x)),y}var yoe={kernelName:Al,backendName:"webgl",kernelFunc:$9},Aoe="return float(a > b);",xoe=`
  return vec4(greaterThan(a, b));
`,boe=_n({opSnippet:Aoe,packedOpSnippet:xoe,cpuKernelImpl:Ste,dtype:"bool"}),voe={kernelName:bl,backendName:"webgl",kernelFunc:boe},woe="return float(a >= b);",koe=`
  return vec4(greaterThanEqual(a, b));
`,Ioe=_n({opSnippet:woe,packedOpSnippet:koe,dtype:"bool",cpuKernelImpl:Cte}),Soe={kernelName:_o,backendName:"webgl",kernelFunc:Ioe};function Coe(e){let{inputs:t,backend:n}=e,{input:s}=t;return D9(s,!0,n)}var Toe={kernelName:a0,backendName:"webgl",kernelFunc:Coe},Noe="return float(!isnan(x) && !isinf(x));",Eoe=dt({opSnippet:Noe,dtype:"bool"}),Roe={kernelName:Cc,backendName:"webgl",kernelFunc:Eoe},_oe="return float(isinf(x));",Doe=dt({opSnippet:_oe,dtype:"bool"}),$oe={kernelName:Tc,backendName:"webgl",kernelFunc:Doe},Poe="return float(isnan(x));",Foe=dt({opSnippet:Poe,dtype:"bool"}),Ooe={kernelName:Nc,backendName:"webgl",kernelFunc:Foe},Moe="return float(a < b);",zoe=`
  return vec4(lessThan(a, b));
`,Loe=_n({opSnippet:Moe,packedOpSnippet:zoe,cpuKernelImpl:Tte,dtype:"bool"}),Boe={kernelName:vl,backendName:"webgl",kernelFunc:Loe},Woe="return float(a <= b);",Voe=`
  return vec4(lessThanEqual(a, b));
`,Uoe=_n({opSnippet:Woe,packedOpSnippet:Voe,cpuKernelImpl:Nte,dtype:"bool"}),Goe={kernelName:wl,backendName:"webgl",kernelFunc:Uoe};function Hoe(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=Ete(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var joe={kernelName:o0,backendName:"webgl",kernelFunc:Hoe},qoe=cd+`
  return x < 0.0 ? 0./0. : log(x);
`,Xoe=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Koe=dt({opSnippet:qoe,packedOpSnippet:Xoe,cpuKernelImpl:Rte}),Zoe={kernelName:Po,backendName:"webgl",kernelFunc:Koe},Yoe=cd+`
  return log(1.0 + x);
`,Joe=dt({opSnippet:Yoe}),Qoe={kernelName:Ec,backendName:"webgl",kernelFunc:Joe},eie="return float(a >= 1.0 && b >= 1.0);",tie=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,nie=_n({opSnippet:eie,packedOpSnippet:tie,dtype:"bool"}),sie={kernelName:kl,backendName:"webgl",kernelFunc:nie},rie="return float(!(x >= 1.0));",aie=dt({opSnippet:rie}),oie={kernelName:Il,backendName:"webgl",kernelFunc:aie},iie="return float(a >= 1.0 || b >= 1.0);",lie=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,uie=_n({opSnippet:iie,packedOpSnippet:lie,dtype:"bool"}),cie={kernelName:Rc,backendName:"webgl",kernelFunc:uie},die=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}},pie=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}},hie=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s,u=j().getBool("WEBGL_PACK_NORMALIZATION")?new pie(r.shape,a,o,i,l):new die(r.shape,a,o,i,l);return n.runWebGLProgram(u,[r],r.dtype)},fie={kernelName:jp,backendName:"webgl",kernelFunc:hie},mie=class{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},gie=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=s,p=new mie(r.shape,i,l,u,c);return n.runWebGLProgram(p,[r,a,o],r.dtype)},yie={kernelName:i0,backendName:"webgl",kernelFunc:gie};function Aie(e,t,n,s){let r=v.sizeFromShape(t),o=v.sizeFromShape(e.shape)/r,i=ve({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=ou(i,e.dtype,"max",s),u=ve({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),u}function P9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),u=l,c=T.getAxesPermutation(u,i),p=c!=null,d=n.shouldExecuteOnCPU([r]),h=r;if(p){if(d){let A=n.texData.get(h.dataId).values,b=new Array(i);for(let k=0;k<b.length;k++)b[k]=r.shape[c[k]];let w=tb(A,r.shape,r.dtype,c,b);h=n.makeTensorInfo(b,r.dtype);let I=n.texData.get(h.dataId);I.values=w}else h=S2(r,c,n);u=T.getInnerMostAxes(u.length,i)}T.assertAxesAreInnerMostDims("max",u,i);let[f,m]=T.computeOutAndReduceShapes(h.shape,u),g=f;o&&(g=T.expandShapeToKeepDim(f,l));let y;if(d){let A=n.texData.get(h.dataId).values,b=_te(A,v.sizeFromShape(m),g,r.dtype);y=n.makeTensorInfo(g,r.dtype);let w=n.texData.get(y.dataId);w.values=b}else y=Aie(h,m,g,n);return p&&n.disposeIntermediateTensorInfo(h),y}var xie={kernelName:Fo,backendName:"webgl",kernelFunc:P9},bie=h9+`
  return max(a, b);
`,vie=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+k2+`
  return result;
`,wie=_n({opSnippet:bie,packedOpSnippet:vie,cpuKernelImpl:Dte}),kie={kernelName:Oo,backendName:"webgl",kernelFunc:wie};function Iie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;rd(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1;v.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let c=T.computePool2DInfo(r.shape,a,o,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&v.arraysEqual(c.inShape,c.outShape))return Fs({inputs:{x:r},backend:n});let p=new Pp(c,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}var Sie={kernelName:Mo,backendName:"webgl",kernelFunc:Iie};function Cie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],p=T.computePool3DInfo(r.shape,a,o,c,i,u,l),d=new sb(p,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var Tie={kernelName:qp,backendName:"webgl",kernelFunc:Cie},Nie=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=a-1-e.padInfo.left,l=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Eie=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.front,p=l-1-e.padInfo.top,d=u-1-e.padInfo.left,h=i*l*u-1;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${p}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${i};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Rie(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s,p=[1,1,1],d=T.computePool3DInfo(o.shape,i,l,p,u,c),h=new sb(d,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new Eie(d),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}var _ie={kernelName:u0,backendName:"webgl",kernelFunc:Rie};function Die(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;rd([a,o],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=s,d=T.computePool2DInfo(i.shape,l,u,1,c,p),h=!0,f=new Pp(d,"max",h),m=n.runWebGLProgram(f,[i],i.dtype),g=new Nie(d),y=n.runWebGLProgram(g,[r,m],i.dtype);return n.disposeIntermediateTensorInfo(m),y}var $ie={kernelName:l0,backendName:"webgl",kernelFunc:Die};function Pie(e,t,n,s){let r=new Pp(n,"max",!1),a=s.runWebGLProgram(r,[e],"float32");r=new Pp(n,"max",!0,!0,t);let o=s.runWebGLProgram(r,[e],"float32");return[a,o]}var Fie={kernelName:c0,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;v.assert(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);let u=[1,1];v.assert(T.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=T.computePool2DInfo(s.shape,r,a,u,o),[p,d]=Pie(s,i,c,l);return[p,d]}};function Oie(e,t,n,s){let r=v.sizeFromShape(t),o=v.sizeFromShape(e.shape)/r,i=ve({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=ou(i,"float32","mean",s),u=ve({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),u}var Mie={kernelName:zo,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{keepDims:r,axis:a}=t,o=n,i=s.shape.length,l=v.parseAxisParam(a,s.shape),u=l,c=T.getAxesPermutation(u,i),p=c!=null,d=o.shouldExecuteOnCPU([s]),h=[],f=s;if(p){if(d){let b=o.texData.get(f.dataId).values,w=new Array(i);for(let R=0;R<w.length;R++)w[R]=s.shape[c[R]];let I=tb(b,s.shape,s.dtype,c,w);f=o.makeTensorInfo(w,s.dtype);let k=o.texData.get(f.dataId);k.values=I}else f=S2(s,c,o);h.push(f),u=T.getInnerMostAxes(u.length,i)}T.assertAxesAreInnerMostDims("sum",u,i);let[m,g]=T.computeOutAndReduceShapes(f.shape,u),y=m;r&&(y=T.expandShapeToKeepDim(m,l));let x=Oie(f,g,y,o);for(let A of h)o.disposeIntermediateTensorInfo(A);return x}};function zie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),u=l,c=T.getAxesPermutation(u,i),p=r;c!=null&&(p=ss({inputs:{x:r},backend:n,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,r.shape.length)),T.assertAxesAreInnerMostDims("min",u,i);let[d,h]=T.computeOutAndReduceShapes(p.shape,u),f=v.sizeFromShape(h),m=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}}),g=ou(m,m.dtype,"min",n),y;if(o){let x=T.expandShapeToKeepDim(d,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),y}var Lie={kernelName:Lo,backendName:"webgl",kernelFunc:zie},Bie=h9+`
  return min(a, b);
`,Wie=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+k2+`
  return result;
`,Vie=_n({opSnippet:Bie,packedOpSnippet:Wie,cpuKernelImpl:$te}),Uie={kernelName:Bo,backendName:"webgl",kernelFunc:Vie},Gie=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);let s=e.length,r=vt(s),a=t.map(u=>u[0]).join(","),o=t.map((u,c)=>u[0]+e[c]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l=n==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${i}));
      }
    `}},Hie=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,f)=>h[0]+e[f]+h[1]);let s=e.length,r=vt(s),a=t.map(h=>h[0]).join(","),o=t.map((h,f)=>h[0]+e[f]).join(","),i=ns("rc",s),l=ns("source",s),u=`${i[s-1]} < ${this.outputShape[s-1]}`,c=s===1?"source":`vec2(${l.slice(-2).join()})`,p=n==="reflect"?0:1,d="";if(s===1){let h=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${i[s-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
      `}else{let h=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${i[s-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
        rc = outputLoc;
        ${i[s-2]} += 1;
        if(${i[s-2]} < ${this.outputShape[s-2]}) {
          ${h}
          result[2] = getChannel(getX(${l.join()}), ${c});
          ${i[s-1]} += 1;
          if(${u}) {
            ${h}
            result[3] = getChannel(getX(${l.join()}), ${c});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}},jie=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{paddings:r,mode:a}=n,o=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Hie(s.shape,r,a):new Gie(s.shape,r,a);return t.runWebGLProgram(o,[s],s.dtype)},qie={kernelName:Wo,backendName:"webgl",kernelFunc:jie},Xie=`if (b == 0.0) return NAN;
  return mod(a, b);`,Kie=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+k2+`
  return result;
`,Zie=_n({opSnippet:Xie,packedOpSnippet:Kie}),Yie={kernelName:_c,backendName:"webgl",kernelFunc:Zie},Jie=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},Qie=`
if (a == b) {
  return 1.0;
};
return a / b;`,ele=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,F9=_n({opSnippet:Qie,packedOpSnippet:ele,checkOutOfBounds:!0}),tle={kernelName:So,backendName:"webgl",kernelFunc:F9},F7="return a - b;",O9=_n({opSnippet:F7,packedOpSnippet:F7,supportsComplex:!0,cpuKernelImpl:Zte}),nle={kernelName:ri,backendName:"webgl",kernelFunc:O9};function M9(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=v.parseAxisParam([a],r.shape),i=P9({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=T.expandShapeToKeepDim(i.shape,o),u=ve({inputs:{x:i},backend:n,attrs:{shape:l}}),c=O9({inputs:{a:r,b:u},backend:n}),p=_9({inputs:{x:c},backend:n}),d=C2({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),h=ve({inputs:{x:d},backend:n,attrs:{shape:l}}),f=F9({inputs:{a:p,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}var sle={kernelName:ni,backendName:"webgl",kernelFunc:M9};function rle(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s,l=i?r:M9({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new Jie(u,c,a),d=[[o]],h=n.runWebGLProgram(p,[l],"int32",d);return i||n.disposeIntermediateTensorInfo(l),h}var ale={kernelName:d0,backendName:"webgl",kernelFunc:rle},ole=pr+`
  return -x;
`,ile=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function lle(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.texData.get(s.dataId),[o,i]=Fte(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r;return j().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Gi(s.shape,ile):r=new ha(s.shape,ole),n.runWebGLProgram(r,[s],s.dtype)}var ule={kernelName:Sl,backendName:"webgl",kernelFunc:lle},cle=cr.nonMaxSuppressionV3Impl;function dle(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:p}=cle(u,c,o,i,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var ple={kernelName:Tl,backendName:"webgl",kernelFunc:dle},hle=cr.nonMaxSuppressionV4Impl;function fle(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),p=n.readSync(a.dataId),{selectedIndices:d,validOutputs:h}=hle(c,p,o,i,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var mle={kernelName:Dc,backendName:"webgl",kernelFunc:fle},gle=cr.nonMaxSuppressionV5Impl;function yle(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),p=n.readSync(a.dataId),d=o,h=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=gle(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Ale={kernelName:Nl,backendName:"webgl",kernelFunc:yle},xle=class{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${n}),
                      float(index == coords.y)));
      }
    `}},ble=e=>{let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=v.sizeFromShape(r.shape),u=new xle(l,a,o,i),c=ve({inputs:{x:r},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(u,[c],r.dtype);n.disposeIntermediateTensorInfo(c);let d=[...r.shape,a],h=ve({inputs:{x:p},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(p),h},vle={kernelName:Rl,backendName:"webgl",kernelFunc:ble};function Lm(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=Lh({inputs:{input:s},backend:n}),a=Lm({inputs:{x:r},backend:n}),o=T2({inputs:{input:s},backend:n}),i=Lm({inputs:{x:o},backend:n}),l=hi({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return Bh({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var wle={kernelName:jl,backendName:"webgl",kernelFunc:Lm};function z9(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=Lh({inputs:{input:s},backend:n}),a=z9({inputs:{x:r},backend:n}),o=T2({inputs:{input:s},backend:n}),i=Lm({inputs:{x:o},backend:n}),l=hi({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return Bh({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var kle={kernelName:El,backendName:"webgl",kernelFunc:z9};function Ile(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return py({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(c=>{v.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(c=>{let p=py({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(p),p}),u=I9({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}var Sle={kernelName:_l,backendName:"webgl",kernelFunc:Ile},Cle=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);let s=e.length,r=vt(s),a=t.map(l=>l[0]).join(","),o=t.map((l,u)=>l[0]+e[u]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${i}));
        }
      }
    `}},Tle=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let s=e.length,r=vt(s),a=t.map(f=>f[0]).join(","),o=t.map((f,m)=>f[0]+e[m]).join(","),i=ns("rc",s),l=ns("source",s),u=`${i[s-1]} < ${this.outputShape[s-1]}`,c=s===1?"source":`vec2(${l.slice(-2).join()})`,p=[`${r} rc = outputLoc;`,`${i[s-1]} += 1;
       if(${u}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${i[s-2]} += 1;
       if(${i[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${i[s-1]} += 1;
         if(${u}) {`],d=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let f=0,m=s===1?2:4;f<m;f++)h+=`
        ${p[f]}
        if (${d}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${l.join()}), ${c});
        }
      `;h+=s===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},L9=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(v.sizeFromShape(r.shape)===0){let u=a.map((c,p)=>c[0]+r.shape[p]+c[1]);return Bh({backend:n,attrs:{shape:u,value:o,dtype:r.dtype}})}let i=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Tle(r.shape,a,o):new Cle(r.shape,a,o),l=[[o]];return n.runWebGLProgram(i,[r],r.dtype,l)},Nle={kernelName:Uo,backendName:"webgl",kernelFunc:L9},Ele=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Rle=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+k2+`
  return result;
`,_le=_n({opSnippet:Ele,packedOpSnippet:Rle}),Dle={kernelName:Go,backendName:"webgl",kernelFunc:_le};function $le(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=[],u=v.parseAxisParam(a,r.shape),c=u,p=T.getAxesPermutation(c,i),d=r;p!=null&&(d=ss({inputs:{x:r},backend:n,attrs:{perm:p}}),c=T.getInnerMostAxes(c.length,i),l.push(d)),T.assertAxesAreInnerMostDims("prod",c,i);let h;if(n.shouldExecuteOnCPU([d])){let f=n.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=Mte(d.shape,d.dtype,f,c);h=n.makeTensorInfo(g,y,m)}else{let[f,m]=T.computeOutAndReduceShapes(d.shape,c),g=v.sizeFromShape(m),y=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),x=rh(r.dtype),A=ou(y,x,"prod",n);h=ve({inputs:{x:A},backend:n,attrs:{shape:f}}),l.push(y),l.push(A)}if(o){l.push(h);let f=T.expandShapeToKeepDim(h.shape,u);h=ve({inputs:{x:h},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var Ple={kernelName:jo,backendName:"webgl",kernelFunc:$le},B9=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=zte(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},Fle={kernelName:$c,backendName:"webgl",kernelFunc:B9},Ole="return 1.0 / x;",Mle=dt({opSnippet:Ole}),zle={kernelName:Pc,backendName:"webgl",kernelFunc:Mle},Lle=pr+`
  return (x < 0.0) ? 0.0 : x;
`,Ble=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Wle=dt({opSnippet:Lle,packedOpSnippet:Ble}),Vle={kernelName:qo,backendName:"webgl",kernelFunc:Wle},Ule=pr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Gle=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Hle=dt({opSnippet:Ule,packedOpSnippet:Gle}),jle={kernelName:Zo,backendName:"webgl",kernelFunc:Hle},qle=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let u=[s&&t>1?o-1:o,s&&n>1?i-1:i],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p;r?p="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/c[0]},
          ${u[1]/c[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},Xle=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let u=[s&&t>1?o-1:o,s&&n>1?i-1:i],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p;r?p="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/c[0]},
          ${u[1]/c[1]},
          ${u[1]/c[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Kle(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,c=j().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Xle(r.shape,l,u,a,o):new qle(r.shape,l,u,a,o);return n.runWebGLProgram(c,[r],"float32")}var Zle={kernelName:Ko,backendName:"webgl",kernelFunc:Kle},Yle=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],u=i[0]/l[0],c=i[1]/l[1],p=1/u,d=1/c,h=Math.ceil(p)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${c});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Jle(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new Yle(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var Qle={kernelName:h0,backendName:"webgl",kernelFunc:Jle},eue=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let u=[s&&t>1?o-1:o,s&&n>1?i-1:i],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p=s?"0.5":"0.0",d;r?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/c[0]},
          ${u[1]/c[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},tue=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let u=[s&&t>1?o-1:o,s&&n>1?i-1:i],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p=s?"0.5":"0.0",d;r?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/c[0]},
          ${u[1]/c[1]},
          ${u[1]/c[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function nue(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,c=j().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new tue(r.shape,l,u,a,o):new eue(r.shape,l,u,a,o);return n.runWebGLProgram(c,[r],r.dtype)}var sue={kernelName:Xo,backendName:"webgl",kernelFunc:nue},rue=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],u=i[0]/l[0],c=i[1]/l[1],p=1/u,d=1/c,h=Math.ceil(p)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${c});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${i[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${i[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function aue(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new rue(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var oue={kernelName:p0,backendName:"webgl",kernelFunc:aue},iue=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let s=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,r=e.map((o,i)=>s(i)).join(","),a=vt(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},lue=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let s=ns("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,o=vt(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${i(s.slice())};
          if(${r}){
            result.g = ${l(s.slice())};
          }
          if(${a}) {
            result.b = ${u(s.slice())};
            if(${r}) {
              result.a = ${c(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function i(h){return p(h)}function l(h){return h[n-1]="("+h[n-1]+" + 1)",p(h)}function u(h){return h[n-2]="("+h[n-2]+" + 1)",p(h)}function c(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",p(h)}function p(h){let f=e.map((y,x)=>d(x,h)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function d(h,f){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${f[h]} - 1`:`${f[h]}`}}};function uue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=r.shape.length,i=v.parseAxisParam(a,r.shape);if(o===0)return Fs({inputs:{x:r},backend:n});let l=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lue(r.shape,i):new iue(r.shape,i);return n.runWebGLProgram(l,[r],r.dtype)}var cue={kernelName:$l,backendName:"webgl",kernelFunc:uue},due=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],s=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},pue={kernelName:ql,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new due(s.shape,a),[u,c]=T.getImageCenter(o,s.shape[1],s.shape[2]),p=[[u,c,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(l,[s],s.dtype,p)}},hue=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,fue=dt({opSnippet:hue}),mue={kernelName:Pl,backendName:"webgl",kernelFunc:fue},gue="return inversesqrt(x);",yue=dt({opSnippet:gue,cpuKernelImpl:Lte}),Aue={kernelName:Yo,backendName:"webgl",kernelFunc:yue},W9=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let i=vt(r.length),l=vt(a.length),u="";n===1?u="i":n===2&&(u="i, j");let c=`getIndices(${u})`,p="";s===1?p="i":s===2&&(p="i, coords[1]");let d=`getUpdates(${p})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${i} strides = ${i}(${r});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${c});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function xue(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=T.calculateShapes(a,r,o),d=[p/u,u];if(p===0)return n.makeTensorInfo(o,r.dtype);let h=ve({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=ve({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new W9(l,i,h.shape.length,f.shape.length,c,d),y=n.runWebGLProgram(g,[f,h,m],f.dtype),x=ve({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),x}var bue={kernelName:Fl,backendName:"webgl",kernelFunc:xue},vue=class{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let r="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,o=j().getNumber("WEBGL_VERSION")===2?r:a,i=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${o}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${i} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function wue(e){let{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:o}=s,i=new vue(r.shape[0],r.shape[1],a.shape[1],o),l=[[r.shape[1]]];return n.runWebGLProgram(i,[r,a],"int32",l)}var kue={kernelName:f0,backendName:"webgl",kernelFunc:wue},Iue=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let s,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",s="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],l=[];for(let u=0;u<t.length;u++)l.push(`${o[u]}`),u<e&&i.push(`${o[u]}`);s=i.join(),r=l.join()}let a=vt(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function Sue(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new Iue(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[s,r,a],Mn(r.dtype,a.dtype))}var Cue={kernelName:Ol,backendName:"webgl",kernelFunc:Sue},Tue=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${T.SELU_SCALEALPHA};
  float scale = ${T.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Nue=dt({opSnippet:Tue}),Eue={kernelName:Fc,backendName:"webgl",kernelFunc:Nue},Rue=cd+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,_ue=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Due=dt({opSnippet:Rue,packedOpSnippet:_ue,cpuKernelImpl:Wte}),$ue={kernelName:Qo,backendName:"webgl",kernelFunc:Due},Pue=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Fue=dt({opSnippet:Pue}),Oue={kernelName:Oc,backendName:"webgl",kernelFunc:Fue},Mue=cd+`
  return sin(x);
`,zue=dt({opSnippet:Mue}),Lue={kernelName:Jo,backendName:"webgl",kernelFunc:zue},Bue=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Wue=dt({opSnippet:Bue}),Vue={kernelName:zl,backendName:"webgl",kernelFunc:Wue},Uue=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Gue=dt({opSnippet:Uue}),Hue={kernelName:Mc,backendName:"webgl",kernelFunc:Gue},jue=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((y,x)=>y*x),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<r.shape.length;++y)l.push([0,0]);let u=[],c=L9({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),p=T.getReshaped(c.shape,a,i,!1),d=T.getPermuted(p.length,a.length,!1),h=T.getReshapedPermuted(c.shape,a,i,!1),f=ve({inputs:{x:c},backend:n,attrs:{shape:p}}),m=ss({inputs:{x:f},backend:n,attrs:{perm:d}}),g=ve({inputs:{x:m},backend:n,attrs:{shape:h}});return u.push(c),u.push(f),u.push(m),u.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},que={kernelName:Ll,backendName:"webgl",kernelFunc:jue};function Xue(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(o.dataId)[0],[p,d,h,f,m]=Ute(i,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,p),n.makeTensorInfo([d[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var Kue={kernelName:Kp,backendName:"webgl",kernelFunc:Xue};function Zue(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.readSync(r.dataId)),i=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,p]=Gte(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([p.length],a.dtype,new Int32Array(p))]}var Yue={kernelName:zc,backendName:"webgl",kernelFunc:Zue};function Jue(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=u9(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(c,s.dtype,u)}var Que={kernelName:Zp,backendName:"webgl",kernelFunc:Jue};function ece(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=u9(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(c,s.dtype,u)}var tce={kernelName:Yp,backendName:"webgl",kernelFunc:ece};function nce(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=T.calculateShapes(a,r,i),h=!1;if(a.dtype==="string"){let y=n.bufferSync(r),x=n.bufferSync(a),A=v.decodeString(n.readSync(o.dataId)[0]),b=Bte(y,x,i,d,c,u,l,p,A,h);return n.makeTensorInfo(i,b.dtype,b.values)}let f=new W9(u,l,r.shape.length,a.shape.length,p,[d,1],h),m=n.runWebGLProgram(f,[a,r,o],a.dtype),g=ve({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(m),g}var sce={kernelName:Jp,backendName:"webgl",kernelFunc:nce};function rce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),u=r.shape.length,c=new Array(u).fill(0),p=r.shape.slice();return l.map(d=>{let h=[...p];h[i]=d;let f=dd({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});return c[i]+=d,f})}var ace={kernelName:Bl,backendName:"webgl",kernelFunc:rce},O7="return sqrt(x);",oce=dt({opSnippet:O7,packedOpSnippet:O7,cpuKernelImpl:Hte}),ice={kernelName:ei,backendName:"webgl",kernelFunc:oce},lce="return x * x;",uce=dt({opSnippet:lce}),cce={kernelName:Lc,backendName:"webgl",kernelFunc:uce},M7="return (a - b) * (a - b);",dce=_n({opSnippet:M7,packedOpSnippet:M7}),pce={kernelName:si,backendName:"webgl",kernelFunc:dce};function hce({inputs:e,attrs:t,backend:n}){let{x:s}=e,r=pr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new ha(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}var fce={kernelName:oi,backendName:"webgl",kernelFunc:hce},mce=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let s=n.length,r=vt(n.length),a=vt(n.length),o="";if(s===1)o="coords * strides + begin";else{let i=0;o=n.map((l,u)=>(i++,n.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${i-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};function gce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=Ut.sliceInfo(r.shape,a,o,i,l,u,c,p,d),w;if(m)w=ve({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let k=Ut.computeOutShape(x,A,b),R=dd({inputs:{x:r},backend:n,attrs:{begin:x,size:k}});w=ve({inputs:{x:R},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(R)}else if(n.shouldExecuteOnCPU([r])){let R=n.readSync(r.dataId),_=We(r.shape,r.dtype,R),D=jte(h,_,b,x);w=n.makeTensorInfo(f,r.dtype,D.values)}else{let R=new mce(x,b,h);w=n.runWebGLProgram(R,[r],r.dtype)}let I=ve({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),I}var yce={kernelName:Wl,backendName:"webgl",kernelFunc:gce};function Ace(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:p}=t,d=n.readSync(c.dataId),h=n.readSync(p.dataId),[f,m]=qte(d,h,r,a,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var xce={kernelName:Bc,backendName:"webgl",kernelFunc:Ace};function bce(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.readSync(a.dataId),l=n.readSync(o.dataId)[0],[u,c,p]=Xte(i,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}var vce={kernelName:Qp,backendName:"webgl",kernelFunc:bce};function wce(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.readSync(a.dataId),i=Kte(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var kce={kernelName:eh,backendName:"webgl",kernelFunc:wce},Ice="return tan(x);",Sce=dt({opSnippet:Ice}),Cce={kernelName:Vl,backendName:"webgl",kernelFunc:Sce},Tce=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Nce=dt({opSnippet:Tce}),Ece={kernelName:ai,backendName:"webgl",kernelFunc:Nce},Rce=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let s=vt(this.rank),r=_ce(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function _ce(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}function V9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){let l=n.readSync(r.dataId),u=r.dtype==="string"?l.map(d=>v.decodeString(d)):l,c=We(r.shape,r.dtype,u),p=Yte(c,a);return n.makeTensorInfo(p.shape,p.dtype,p.values)}let o=new Rce(r.shape,a);return n.runWebGLProgram(o,[r],r.dtype)}var Dce={kernelName:wa,backendName:"webgl",kernelFunc:V9},$ce=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Pce=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Pi(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function z7(e){let t=1;for(;t<e;)t*=2;return t}function Fce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=j().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=j().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<i||a>l){let D=n.readSync(r.dataId),[E,P]=Jte(D,u,r.dtype,a,o);return[n.makeTensorInfo(E.shape,E.dtype,E.values),n.makeTensorInfo(P.shape,P.dtype,P.values)]}if(a===0)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(c===1)return[r,Bh({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let p=n.texData.get(r.dataId),d=p!==null&&p.isPacked,h=d?n.unpackTensor(r):r,m=v.sizeFromShape(u)/c,g=ve({inputs:{x:h},attrs:{shape:[m,c]},backend:n});d&&Pi(n,h);let y=z7(a),x=z7(c),A=null,b=()=>A===null?[g,g]:[g,A],w=(D,E,P)=>{let C=b(),M=new $ce(P),G=[[c],[A===null?1:0],[Number.NEGATIVE_INFINITY],[D],[E]],X=A;A=n.runWebGLProgram(M,C,"int32",G),Pi(n,X)};for(let D=1;D<y;D*=2){let E=D*2;for(let P=D;P>=1;P/=2)w(E,P,[m,x])}for(let D=x;D>y;D/=2){let E=b(),P=new Pce([m,D/2]),M=[[c],[A===null?1:0],[y]],W=A;A=n.runWebGLProgram(P,E,"int32",M),Pi(n,W);let G=y/2,X=G*2;for(let K=G;K>=1;K/=2)w(X,K,A.shape)}let I=A;A=dd({inputs:{x:A},backend:n,attrs:{begin:0,size:[m,a]}}),Pi(n,I);let k=$9({inputs:{x:g,indices:A},backend:n,attrs:{axis:1,batchDims:1}});Pi(n,g);let R=u.slice(0,-1);R.push(a),I=A,A=ve({inputs:{x:A},attrs:{shape:R},backend:n}),Pi(n,I);let _=k;return k=ve({inputs:{x:k},attrs:{shape:R},backend:n}),Pi(n,_),[k,A]}var Oce={kernelName:Ul,backendName:"webgl",kernelFunc:Fce},Mce=class{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let o=n==="nearest"?1:2,i;switch(s){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function zce(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=s,[c,p,d,h]=r.shape,[f,m]=u!=null?u:[p,d],g=[c,f,m,h],y=new Mce(p,d,o,i,l,g);return n.runWebGLProgram(y,[r,a],"float32")}var Lce={kernelName:Gl,backendName:"webgl",kernelFunc:zce};function Bce(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;rd(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let o=s.readSync(a.dataId),{outputValues:i,outputShape:l,indices:u}=Qte(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}var Wce={kernelName:m0,backendName:"webgl",kernelFunc:Bce};function Vce(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],u=new Array(i-1),c=0;for(let m=0;m<i;m++)m!==a&&(u[c++]=o.shape[m]);let p=[],d=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){d[a]=m;let g=dd({inputs:{x:o},backend:n,attrs:{begin:d,size:h}}),y=ve({inputs:{x:g},backend:n,attrs:{shape:u}});f[m]=y,p.push(g)}return p.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var Uce={kernelName:Hl,backendName:"webgl",kernelFunc:Vce},Gce=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,o=a*Math.ceil(r/n);this.outputShape=[s,o];let i="0.0",l="sumValue",u=Math.floor(n/4)*4,c=n%4,p=`
        sumValue += dot(values, segFilter);
    `,d="";r%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${i};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${u};
        if (${c===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(${l});
      }
    `}};function Hce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s,i=r.shape.length,l=[],u=0,c=T.getAxesPermutation([u],i),p=r;c!=null&&(p=ss({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(p),u=T.getInnerMostAxes(1,i)[0]);let d=T.segment_util.computeOutShape(p.shape,u,o),h=v.sizeFromShape([p.shape[u]]),f=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,h]}});l.push(f);let m=rh(r.dtype),g=(b,w,I,k,R)=>{let _=b.shape[0],D=b.shape[1],E=T.segment_util.segOpComputeOptimalWindowSize(D,R),P={windowSize:E,inSize:D,batchSize:_,numSegments:R},C=new Gce(P,w),M=n.compileAndRun(C,[b,I],k);if(l.push(M),M.shape[1]===R)return M;let W=B9({backend:n,attrs:{start:0,stop:R,step:1,dtype:"float32"}}),G=V9({inputs:{x:W},backend:n,attrs:{reps:[D/E]}});return l.push(W),l.push(G),g(M,w,G,k,R)},y=g(f,"unsortedSegmentSum",a,m,o),x=ve({inputs:{x:y},backend:n,attrs:{shape:d}}),A=x;if(c!=null){l.push(x);let b=T.getUndoAxesPermutation(c);A=ss({inputs:{x:A},backend:n,attrs:{perm:b}})}return l.forEach(b=>n.disposeIntermediateTensorInfo(b)),A}var jce={kernelName:th,backendName:"webgl",kernelFunc:Hce},qce=[Xne,Zne,Qne,nse,rse,ise,use,dse,mse,yse,bse,kse,Cse,Rse,$se,Fse,Mse,Wse,Use,Hse,Kse,nre,rre,ore,pre,fre,Are,Ene,vre,Cre,Rre,Ore,zre,Bre,Vre,Gre,qre,Zre,Qre,tae,sae,aae,lae,cae,fae,gae,xae,wae,Iae,Nae,Dae,Oae,Lae,Vae,Uae,Hae,qae,Kae,Yae,Qae,soe,ooe,uoe,doe,foe,yoe,voe,Soe,Nne,Toe,Ire,Roe,$oe,Ooe,_ne,Boe,Goe,joe,Zoe,Qoe,sie,oie,cie,fie,yie,xie,kie,Sie,Tie,_ie,$ie,Fie,Mie,Lie,Uie,qie,Yie,ale,One,ule,ple,mle,Ale,lre,vle,kle,Sle,Nle,Dle,$ne,Ple,Fle,ure,tle,zle,Vle,jle,zne,Zle,Qle,sue,oue,cue,pue,mue,Aue,bue,kue,Cue,Eue,$ue,Oue,Lue,Vue,ere,sle,Hue,que,Kue,Yue,Que,tce,sce,ace,ice,cce,pce,fce,yce,xce,vce,kce,nle,Hne,Cce,Ece,Dce,Oce,Lce,jne,Wce,Uce,jce,wle];for(let e of qce)ur(e);var Ht;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(Ht||(Ht={}));var Op;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(Op||(Op={}));var U9;function Xce(e){U9=e.wasm.cwrap(Qa,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Kce(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=s,d=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=0;if(o!=null){let R=n.dataIdMap.get(o.dataId);if(R.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${R.shape.length}.`);f=R.id}let m=i==null?0:n.dataIdMap.get(i.dataId).id,g=Op[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?r.shape[2]:r.shape[1],x=u?a.shape[1]:a.shape[2],A=Kl.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)),b=n.makeOutput([...A,y,x],r.dtype),w=n.dataIdMap.get(b.dataId).id,I=new Uint8Array(new Int32Array(r.shape).buffer),k=new Uint8Array(new Int32Array(a.shape).buffer);return U9(d,I,r.shape.length,h,k,a.shape.length,l,u,g,f,m,p||0,w),b}var Zce={kernelName:Qa,backendName:"wasm",setupFunc:Xce,kernelFunc:Kce};function wn(e,t){let n;function s(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function r(a){let{backend:o,inputs:{x:i}}=a,l=o.dataIdMap.get(i.dataId).id,u=o.makeOutput(i.shape,t||i.dtype),c=o.dataIdMap.get(u.dataId).id;return v.sizeFromShape(u.shape)===0||n(l,Ht[i.dtype],c),u}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:r}}var Yce=wn(ll);function Dn(e,t,n){let s;function r(o){s=o.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(o){let{backend:i,inputs:l}=o,{a:u,b:c}=l,p=i.dataIdMap.get(u.dataId).id,d=i.dataIdMap.get(c.dataId).id,h=n!=null?n:u.dtype,f=T.assertAndGetBroadcastShape(u.shape,c.shape),m=i.makeOutput(f,h);if(v.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(u.shape).buffer),y=new Uint8Array(new Int32Array(c.shape).buffer),x=i.dataIdMap.get(m.dataId).id;return(()=>s(p,g,u.shape.length,d,y,c.shape.length,Ht[u.dtype],x))(),m}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var Jce=!0,Qce=Dn(ba,Jce),G9;function ede(e){G9=e.wasm.cwrap(ho,null,["array","number","number","number"])}function tde(e){let{inputs:t,backend:n}=e,s=n.makeOutput(t[0].shape,t[0].dtype);if(v.sizeFromShape(s.shape)===0)return s;let r=t.map(i=>n.dataIdMap.get(i.dataId).id),a=new Uint8Array(new Int32Array(r).buffer),o=n.dataIdMap.get(s.dataId).id;return G9(a,r.length,Ht[s.dtype],o),s}var nde={kernelName:ho,backendName:"wasm",setupFunc:ede,kernelFunc:tde};function N2(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(s).set(r),s}var sde={kernelName:Do,backendName:"wasm",kernelFunc:N2},H9;function rde(e){H9=e.wasm.cwrap(jr,null,["number","array","number","number","number","array","number"])}function uo(e){let{inputs:t,backend:n,attrs:s}=e,[r,a]=ode(t.x.shape,s.perm),o=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(o=!1);let i=ade(t.x.shape,s.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(o){let f=N2({inputs:t,backend:n});return f.shape=i,f}let u=n.makeOutput(i,l.dtype),c=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(a).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return H9(c,h,l.shape.length,Ht[l.dtype],p,d,a.length),u}function ade(e,t){let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];return n}function ode(e,t){let n=[],s=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let a=-1;for(let o=0;o<s.length;++o)s[o]>=r&&(a===-1||s[a]>s[o])&&(a=o);s[a]=r}return[n,s]}var ide={kernelName:jr,backendName:"wasm",kernelFunc:uo,setupFunc:rde};function fi(e,t,n){let s=e.shape,r=e.shape.length,a=v.parseAxisParam(t,s),o=a,i=T.getAxesPermutation(o,r),l=null,u=!1;if(i!=null){let c=new Array(r);for(let h=0;h<c.length;h++)c[h]=s[i[h]];o=T.getInnerMostAxes(o.length,r),l=uo({inputs:{x:e},attrs:{perm:i},backend:n});let p=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==p&&(u=!0)}return{transposed:l,originalAxes:a,axes:o,inputWasTransposed:u}}var j9;function lde(e){j9=e.wasm.cwrap(gc,null,["number, number, number"])}function ude(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=fi(o,r,t);if(h){let A=t.dataIdMap.get(c.dataId).id;u=c,l=A}let f=u.shape.length;T.assertAxesAreInnerMostDims("all",p,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,p),y=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;j9(l,y,A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var cde={kernelName:gc,backendName:"wasm",setupFunc:lde,kernelFunc:ude},q9;function dde(e){q9=e.wasm.cwrap(yc,null,["number, number, number"])}function pde(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=fi(o,r,t);if(h){let A=t.dataIdMap.get(c.dataId).id;u=c,l=A}let f=u.shape.length;T.assertAxesAreInnerMostDims("any",p,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,p),y=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;q9(l,y,A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var hde={kernelName:yc,backendName:"wasm",setupFunc:dde,kernelFunc:pde},X9;function fde(e){X9=e.wasm.cwrap(fo,null,["number","number","number","number","number"])}function mde(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=o,l=a,{transposed:u,axes:c,inputWasTransposed:p}=fi(a,r,t);if(p){let y=t.dataIdMap.get(u.dataId).id;y!==o&&(l=u,i=y)}let d=l.shape.slice(0,-1),h=t.makeOutput(d,"int32"),f=t.dataIdMap.get(h.dataId).id,m=v.sizeFromShape(h.shape),g=l.shape[c[0]];return X9(i,Ht[l.dtype],m,g,f),p&&t.disposeData(u.dataId),h}var gde={kernelName:fo,backendName:"wasm",kernelFunc:mde,setupFunc:fde},K9;function yde(e){K9=e.wasm.cwrap(mo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ade(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=n,c=T.computePool2DInfo(r.shape,o,i,1,l,u),p=c.filterHeight,d=c.filterWidth,h=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,x=c.strideWidth,A=c.inChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(c.dilationWidth!==1||c.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);let b=s.makeOutput(c.outShape,"float32"),w=s.dataIdMap.get(b.dataId).id;return K9(a,r.shape[0],r.shape[1],r.shape[2],p,d,h,f,m,g,y,x,A,w),b}var xde={kernelName:mo,backendName:"wasm",setupFunc:yde,kernelFunc:Ade};function fs(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=v.sizeFromShape(s.shape),o=v.inferFromImplicitShape(r,a);return v.assert(a===v.sizeFromShape(o),()=>`new shape: ${o}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var bde={kernelName:Dl,backendName:"wasm",kernelFunc:fs},Z9;function vde(e){Z9=e.wasm.cwrap(go,null,["number","array","number","number","array","number","number","number","number"])}function wde(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,u=a.shape.length,c=o?r.shape[l-2]:r.shape[l-1],p=i?a.shape[u-1]:a.shape[u-2],d=o?r.shape[l-1]:r.shape[l-2],h=i?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=v.sizeFromShape(f),y=v.sizeFromShape(m),A=Kl.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,h]);v.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,c,d]:[g,d,c],w=i?[y,h,p]:[y,p,h],I=fs({inputs:{x:r},backend:n,attrs:{shape:b}}),k=fs({inputs:{x:a},backend:n,attrs:{shape:w}}),R=n.dataIdMap.get(I.dataId).id,_=n.dataIdMap.get(k.dataId).id,D=o?I.shape[2]:I.shape[1],E=i?k.shape[1]:k.shape[2],P=Math.max(g,y),C=n.makeOutput([P,D,E],I.dtype),M=n.dataIdMap.get(C.dataId).id,W=new Uint8Array(new Int32Array(I.shape).buffer),G=new Uint8Array(new Int32Array(k.shape).buffer);return Z9(R,W,I.shape.length,_,G,k.shape.length,o,i,M),n.disposeData(I.dataId),n.disposeData(k.dataId),C.shape=A,C}var kde={kernelName:go,backendName:"wasm",setupFunc:vde,kernelFunc:wde};function ol(e){let{inputs:{x:t},attrs:{begin:n,size:s},backend:r}=e,[a,o]=Ut.parseSliceParams(t,n,s),i=Ut.isSliceContinous(t.shape,a,o),l=r.readSync(t.dataId),u=r.makeOutput(o,t.dtype),c=v.computeStrides(t.shape),p=r.dataIdMap.get(u.dataId);if(i){let f=Ut.computeFlatOffset(a,c);return t.dtype==="string"?p.stringBytes=l.slice(f,f+v.sizeFromShape(o)):r.typedArrayFromHeap(u).set(l.subarray(f,f+v.sizeFromShape(o))),u}if(t.dtype==="string"){let f=$m(l,a,o,t.shape,t.dtype);return p.stringBytes=f,u}let d=r.typedArrayFromHeap(u),h=t.shape.length;if(h===2)Ide(l,c[0],d,a,o);else if(h===3)Sde(l,c[0],c[1],d,a,o);else if(h===4)Cde(l,c[0],c[1],c[2],d,a,o);else{let f=$m(l,a,o,t.shape,t.dtype);d.set(f)}return u}function Ide(e,t,n,s,r){let a=0,o=s[0],i=s[1],l=o+r[0];for(let u=o;u<l;u++){let c=u*t+i;n.set(e.subarray(c,c+r[1]),a),a+=r[1]}}function Sde(e,t,n,s,r,a){let o=0,i=r[0],l=r[1],u=r[2],c=i+a[0],p=l+a[1];for(let d=i;d<c;d++)for(let h=l;h<p;h++){let f=d*t+h*n+u;s.set(e.subarray(f,f+a[2]),o),o+=a[2]}}function Cde(e,t,n,s,r,a,o){let i=0,l=a[0],u=a[1],c=a[2],p=l+o[0],d=u+o[1],h=c+o[2],f=a[3];for(let m=l;m<p;m++)for(let g=u;g<d;g++)for(let y=c;y<h;y++){let x=m*t+g*n+y*s+f;r.set(e.subarray(x,x+o[3]),i),i+=o[3]}}var Tde={kernelName:Ml,backendName:"wasm",kernelFunc:ol};function Nde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s,i=a.reduce((y,x)=>y*x),l=T.getReshaped(r.shape,a,i),u=T.getPermuted(l.length,a.length),c=T.getReshapedPermuted(r.shape,a,i),p=T.getSliceBeginCoords(o,a.length),d=T.getSliceSize(c,o,a.length),h=fs({inputs:{x:r},backend:n,attrs:{shape:l}}),f=uo({inputs:{x:h},backend:n,attrs:{perm:u}}),m=fs({inputs:{x:f},backend:n,attrs:{shape:c}}),g=ol({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),g}var Ede={kernelName:ul,backendName:"wasm",kernelFunc:Nde};function pd(e){let{inputs:{x:t},attrs:{dtype:n},backend:s}=e,r=s.makeOutput(t.shape,n),a=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(a),r}var Rde={kernelName:yo,backendName:"wasm",kernelFunc:pd},_de=wn(Ao),Y9;function Dde(e){Y9=e.wasm.cwrap(va,null,["number","number","number","number"])}function $de(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(l.dataId).id;return Y9(i,a,o,u),l}var Pde={kernelName:va,backendName:"wasm",setupFunc:Dde,kernelFunc:$de};function J9(e){let{inputs:t,backend:n}=e,s=v.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=T.computeOutShape(t.map(h=>h.shape),s),a=t.filter(h=>v.sizeFromShape(h.shape)>0);if(a.length===1)return N2({inputs:{x:a[0]},backend:n});let o=n.makeOutput(r,t[0].dtype);if(v.sizeFromShape(r)===0)return o;let i=a.map(h=>h.shape);if(T.assertParamsConsistent(i,s),a[0].dtype==="string"){let h=a.map(A=>{let b=v.sizeFromShape(A.shape.slice(s));return fs({inputs:{x:A},backend:n,attrs:{shape:[-1,b]}})}),f=h.map(A=>({vals:n.readSync(A.dataId),shape:A.shape}));r=T.computeOutShape(h.map(A=>A.shape),1);let m=h[0].shape[0]===1,g=$x(f,r,t[0].dtype,m),y=T.computeOutShape(a.map(A=>A.shape),s);o.shape=y;let x=n.dataIdMap.get(o.dataId);return x.stringBytes=T.fromStringArrayToUint8(g),h.forEach(A=>n.disposeData(A.dataId)),o}let l=v.sizeFromShape(a[0].shape.slice(0,s)),u=0,c=a.map(h=>{let f=v.sizeFromShape(h.shape.slice(s));return u+=f,f}),p=a.map(h=>n.typedArrayFromHeap(h)),d=n.typedArrayFromHeap(o);for(let h=0;h<l;h++){let f=h*u;for(let m=0;m<p.length;m++){let g=c[m],y=h*g,x=p[m].subarray(y,y+g);d.set(x,f),f+=g}}return o}var Fde={kernelName:cl,backendName:"wasm",kernelFunc:J9},Q9;function Ode(e){Q9=e.wasm.cwrap(xo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Mde(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:p,dataFormat:d}=n,h=T.convertConv2DDataFormat(d),f=T.computeConv2DInfo(r.shape,a.shape,l,u,c,p,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,x=f.padInfo.right,A=f.padInfo.bottom,b=f.padInfo.left,w=f.dilationHeight,I=f.dilationWidth,k=f.strideHeight,R=f.strideWidth,_=f.inChannels,D=f.outChannels,E=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let P=s.makeOutput(f.outShape,"float32"),C=s.dataIdMap.get(P.dataId).id;return Q9(o,r.shape[0],r.shape[1],r.shape[2],i,m,g,y,x,A,b,E,w,I,k,R,_,D,C),P}var zde={kernelName:xo,backendName:"wasm",setupFunc:Ode,kernelFunc:Mde},eC;function Lde(e){eC=e.wasm.cwrap(bo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Bde(e){let{backend:t,inputs:n,attrs:s}=e,{dy:r,filter:a}=n,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,inputShape:c}=s,p=1,d=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(c,a.shape,o,p,i,u,!1,d),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:x,inWidth:A,outChannels:b,outHeight:w,outWidth:I,strideHeight:k,strideWidth:R}=h,_=m-1-h.padInfo.top,D=g-1-h.padInfo.left,E=h.dataFormat==="channelsLast",P=v.computeStrides(h.inShape),C=v.computeStrides(r.shape),[M,W,G]=v.computeStrides(a.shape),X=P[0],K=E?P[1]:P[2],Y=E?P[2]:1,se=E?1:P[1],ee=C[0],le=E?C[1]:C[2],re=E?C[2]:1,pe=E?1:C[1],ce=t.makeOutput(h.inShape,"float32"),Ae=t.dataIdMap.get(ce.dataId).id,oe=t.dataIdMap.get(r.dataId).id,Re=t.dataIdMap.get(a.dataId).id;return eC(oe,Re,f,m,g,x,A,y,w,I,b,k,R,_,D,M,W,G,X,K,Y,se,ee,le,re,pe,Ae),ce}var Wde={kernelName:bo,backendName:"wasm",setupFunc:Lde,kernelFunc:Bde},Vde=wn(vo),Ude=wn(wo),hy;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(hy||(hy={}));var tC;function Gde(e){tC=e.wasm.cwrap(pl,null,["number","number","number","number","array","number","number","number","number","number"])}function Hde(e){let{backend:t,inputs:n,attrs:s}=e,{method:r,extrapolationValue:a,cropSize:o}=s,{image:i,boxes:l,boxInd:u}=n,c=l.shape[0],[p,d]=o,h=[c,p,d,i.shape[3]],f=t.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=pd({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,y=t.dataIdMap.get(l.dataId).id,x=t.dataIdMap.get(u.dataId).id,A=t.makeOutput(h,"float32"),b=t.dataIdMap.get(A.dataId).id,w=new Uint8Array(new Int32Array(i.shape).buffer);return tC(g,y,x,c,w,p,d,hy[r],a,b),m!=null&&t.disposeData(m.dataId),A}var jde={kernelName:pl,backendName:"wasm",setupFunc:Gde,kernelFunc:Hde},nC;function qde(e){nC=e.wasm.cwrap(dl,null,["number","number","number","number","number","number"])}function Xde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length;v.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([a],l),c=r;u!==null&&(c=uo({inputs:{x:r},attrs:{perm:u},backend:n}));let p=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumprod",[p],l);let d=n.makeOutput(c.shape,c.dtype),h=c.shape[p],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;nC(f,o?1:0,i?1:0,h,m,Ht[r.dtype]);let g=d;if(u!==null){let y=T.getUndoAxesPermutation(u);g=uo({inputs:{x:d},attrs:{perm:y},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)}return g}var Kde={kernelName:dl,backendName:"wasm",setupFunc:qde,kernelFunc:Xde},sC;function Zde(e){sC=e.wasm.cwrap(ko,null,["number","number","number","number","number","number"])}function Yde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length;v.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([a],l),c=r;u!==null&&(c=uo({inputs:{x:r},attrs:{perm:u},backend:n}));let p=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumsum",[p],l);let d=n.makeOutput(c.shape,c.dtype),h=c.shape[p],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;sC(f,o?1:0,i?1:0,h,m,Ht[r.dtype]);let g=d;if(u!==null){let y=T.getUndoAxesPermutation(u);g=uo({inputs:{x:d},attrs:{perm:y},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)}return g}var Jde={kernelName:ko,backendName:"wasm",setupFunc:Zde,kernelFunc:Yde},rC;function Qde(e){rC=e.wasm.cwrap(hl,null,["number","number","number","array","number","array","array","number","number"])}function epe(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],u=o==="NHWC"?r.shape[2]:r.shape[3],c=o==="NHWC"?r.shape[3]:r.shape[1],p=l*a,d=u*a,h=c/(a*a),f=o==="NHWC"?[i,p,d,h]:[i,h,p,d],m=t.makeOutput(f,"float32"),y=t.dataIdMap.get(r.dataId).id,x=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),A=new Uint8Array(new Int32Array(f).buffer),b=new Uint8Array(new Int32Array(v.computeStrides(f)).buffer),w=t.dataIdMap.get(m.dataId).id;return rC(y,a,o==="NHWC"?1:0,x,r.shape.length-1,A,b,f.length,w),m}var tpe={kernelName:hl,backendName:"wasm",setupFunc:Qde,kernelFunc:epe},aC;function npe(e){aC=e.wasm.cwrap(Io,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function spe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:p}=n,d=u==null?[1,1]:u,h=T.computeConv2DInfo(r.shape,a.shape,l,d,c,p,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,x=h.padInfo.bottom,A=h.padInfo.left,b=h.dilationHeight,w=h.dilationWidth,I=h.strideHeight,k=h.strideWidth,R=h.inChannels,_=h.outChannels,D=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let E=s.makeOutput(h.outShape,"float32"),P=s.dataIdMap.get(E.dataId).id;return aC(o,r.shape[0],r.shape[1],r.shape[2],i,f,m,g,y,x,A,D,b,w,I,k,R,_,P),E}var rpe={kernelName:Io,backendName:"wasm",setupFunc:npe,kernelFunc:spe},ape=wn(Co),ope=!1,ipe=Dn(fl,ope,"bool"),lpe=wn(To,"float32");function fy(e){let{inputs:t,attrs:n,backend:s}=e,{input:r}=t,{dim:a}=n,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(v.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),fs({inputs:{x:r},backend:s,attrs:{shape:i}})}var upe={kernelName:ml,backendName:"wasm",kernelFunc:fy};function oC(e){let{attrs:{shape:t,value:n,dtype:s},backend:r}=e,a=r.makeOutput(t,s);return r.typedArrayFromHeap(a).fill(n),a}var cpe={kernelName:Sc,backendName:"wasm",kernelFunc:oC},iC;function dpe(e){iC=e.wasm.cwrap(yl,null,["number","number","number","number","number","number"])}function ppe(e){let{inputs:t,backend:n}=e,{image:s}=t,r=n.makeOutput(s.shape,s.dtype),a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,[i,l,u,c]=s.shape;return iC(a,i,l,u,c,o),r}var hpe={kernelName:yl,backendName:"wasm",kernelFunc:ppe,setupFunc:dpe},fpe=wn(No),mpe=!1,gpe=Dn(Eo,mpe),lC;function ype(e){lC=e.wasm.cwrap(Ro,null,["number","number","number","number","number","number","number"])}function Ape(e){let{backend:t,inputs:n,attrs:s}=e,{varianceEpsilon:r}=s,{x:a,mean:o,variance:i,offset:l,scale:u}=n,c=t.dataIdMap.get(a.dataId).id,p=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(i.dataId).id,h=l!=null?t.dataIdMap.get(l.dataId).id:0,f=u!=null?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(v.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return lC(c,p,d,h,f,r,g),m}var xpe={kernelName:Ro,backendName:"wasm",setupFunc:ype,kernelFunc:Ape},uC;function bpe(e){uC=e.wasm.cwrap(eo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function vpe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=n,m=T.computeConv2DInfo(r.shape,a.shape,l,c,u,d),g=Op[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,A=m.outChannels,b=0;if(o!=null){let re=s.dataIdMap.get(o.dataId);if(re.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${re.shape.length}.`);if(re.shape[0]!==A)throw new Error(`FusedConv2D bias shape (${re.shape}) does not match the number of output channels (${A})`);b=re.id}let w=m.filterHeight,I=m.filterWidth,k=m.padInfo.top,R=m.padInfo.right,_=m.padInfo.bottom,D=m.padInfo.left,E=m.dilationHeight,P=m.dilationWidth,C=m.strideHeight,M=m.strideWidth,W=m.inChannels,G=m.padInfo.type==="SAME"?1:0,X=m.batchSize,K=m.inHeight,Y=m.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let se=s.makeOutput(m.outShape,"float32"),ee=s.dataIdMap.get(se.dataId).id,le=i==null?0:s.dataIdMap.get(i.dataId).id;return uC(y,X,K,Y,x,w,I,b,k,R,_,D,G,E,P,C,M,W,A,g,le,f||0,ee),se}var wpe={kernelName:eo,backendName:"wasm",setupFunc:bpe,kernelFunc:vpe},cC;function kpe(e){cC=e.wasm.cwrap(to,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ipe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=n,m=T.computeConv2DInfo(r.shape,a.shape,l,c,u,d,!0),g=Op[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,A=m.outChannels,b=0;if(o!=null){let re=s.dataIdMap.get(o.dataId);if(re.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${re.shape.length}.`);if(re.shape[0]!==A)throw new Error(`FusedDepthwiseConv2D bias shape (${re.shape}) does not match the number of output channels (${A})`);b=re.id}let w=m.filterHeight,I=m.filterWidth,k=m.padInfo.top,R=m.padInfo.right,_=m.padInfo.bottom,D=m.padInfo.left,E=m.dilationHeight,P=m.dilationWidth,C=m.strideHeight,M=m.strideWidth,W=m.inChannels,G=m.padInfo.type==="SAME"?1:0,X=m.batchSize,K=m.inHeight,Y=m.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let se=s.makeOutput(m.outShape,"float32"),ee=s.dataIdMap.get(se.dataId).id,le=i==null?0:s.dataIdMap.get(i.dataId).id;return cC(y,X,K,Y,x,w,I,b,k,R,_,D,G,E,P,C,M,W,A,g,le,f||0,ee),se}var Spe={kernelName:to,backendName:"wasm",setupFunc:kpe,kernelFunc:Ipe},dC;function Cpe(e){dC=e.wasm.cwrap(xl,null,["number","number","number","number","number","number","array","number"])}function Tpe(e){let{backend:t,inputs:n}=e,{params:s,indices:r}=n,[a,o,i,l]=Uy.prepareAndValidate(s,r),u=t.makeOutput(a,s.dtype);if(o===0)return u;let c=r.shape,p=c[c.length-1],h=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(l).buffer),y=t.dataIdMap.get(u.dataId).id;return dC(h,Ht[s.dtype],m,o,p,i,g,y),u}var Npe={kernelName:xl,backendName:"wasm",setupFunc:Cpe,kernelFunc:Tpe},pC;function Epe(e){pC=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Rpe(e){let{backend:t,inputs:n,attrs:s}=e,{x:r,indices:a}=n,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],u=t.readSync(a.dataId),c=r.shape[l];for(let _=0;_<u.length;++_){let D=u[_];v.assert(D<=c-1&&D>=0,()=>`GatherV2: the index value ${D} is not in [0, ${c-1}]`)}let p=T.segment_util.collectGatherOpShapeInfo(r,a,l,i),d=fs({inputs:{x:r},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),h=v.sizeFromShape(a.shape),f=fs({inputs:{x:a},attrs:{shape:[p.batchSize,h/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],g=t.makeOutput(m,r.dtype);if(v.sizeFromShape(r.shape)===0)return g;let y=d.shape.length-1,A=t.dataIdMap.get(d.dataId).id,w=t.dataIdMap.get(f.dataId).id,I=t.dataIdMap.get(g.dataId).id,k=new Uint8Array(new Int32Array(v.computeStrides(d.shape)).buffer),R=new Uint8Array(new Int32Array(v.computeStrides(m)).buffer);return pC(A,Ht[r.dtype],k,y,w,p.batchSize,R,I),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}var _pe={kernelName:Al,backendName:"wasm",setupFunc:Epe,kernelFunc:Rpe},Dpe=!1,$pe=Dn(bl,Dpe,"bool"),Ppe=!1,Fpe=Dn(_o,Ppe,"bool"),hC;function Ope(e){hC=e.wasm.cwrap($o,null,["number","number","number","number"])}function Mpe(e){let{inputs:{x:t},attrs:{alpha:n},backend:s}=e,r=s.dataIdMap.get(t.dataId).id,a=s.makeOutput(t.shape,"float32");if(v.sizeFromShape(t.shape)!==0){let o=s.dataIdMap.get(a.dataId).id;hC(r,Ht[t.dtype],n,o)}return a}var zpe={kernelName:$o,backendName:"wasm",setupFunc:Ope,kernelFunc:Mpe},Lpe=!1,Bpe=Dn(vl,Lpe,"bool"),Wpe=!1,Vpe=Dn(wl,Wpe,"bool"),Upe=wn(Po),Gpe=!1,Hpe=Dn(kl,Gpe,"bool"),jpe=wn(Il),qpe=!1,Xpe=Dn(Rc,qpe,"bool"),Kpe=!1,Zpe=Dn(g6,Kpe,"bool"),fC;function Ype(e){fC=e.wasm.cwrap(Fo,null,["number","number","number","number"])}function Jpe(e){let{backend:t,inputs:n,attrs:s}=e,{reductionIndices:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=fi(o,r,t);if(h){let A=t.dataIdMap.get(c.dataId).id;u=c,l=A}let f=u.shape.length;T.assertAxesAreInnerMostDims("max",p,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,p),y=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;fC(l,Ht[o.dtype],y,A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var Qpe={kernelName:Fo,backendName:"wasm",setupFunc:Ype,kernelFunc:Jpe},ehe=!1,the=Dn(Oo,ehe),mC;function nhe(e){mC=e.wasm.cwrap(Mo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function she(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id;v.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=n,c=T.computePool2DInfo(r.shape,o,i,1,l,u),p=c.filterHeight,d=c.filterWidth,h=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,x=c.dilationWidth,A=c.strideHeight,b=c.strideWidth,w=c.inChannels,I=c.outChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let k=s.makeOutput(c.outShape,"float32"),R=s.dataIdMap.get(k.dataId).id;return mC(a,r.shape[0],r.shape[1],r.shape[2],p,d,h,f,m,g,y,x,A,b,w,I,R),k}var rhe={kernelName:Mo,backendName:"wasm",setupFunc:nhe,kernelFunc:she},gC;function ahe(e){gC=e.wasm.cwrap(zo,null,["number, number, number"])}function ohe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=fi(o,r,t),f=p;if(h){let b=t.dataIdMap.get(c.dataId).id;b!==i&&(u=c,l=b,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=v.sizeFromShape(g),x=u;u.dtype!=="float32"&&(x=pd({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(x.dataId).id);let A=t.makeOutput(m,"float32");if(v.sizeFromShape(u.shape)!==0){let b=t.dataIdMap.get(A.dataId).id;gC(l,y,b)}if(h&&t.disposeData(c.dataId),a){let b=T.expandShapeToKeepDim(A.shape,d);A.shape=b}return u.dtype!=="float32"&&t.disposeData(x.dataId),A}var ihe={kernelName:zo,backendName:"wasm",setupFunc:ahe,kernelFunc:ohe},yC;function lhe(e){yC=e.wasm.cwrap(Lo,null,["number","number","number","number"])}function uhe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=fi(o,r,t);if(h){let A=t.dataIdMap.get(c.dataId).id;A!==i&&(u=c,l=A)}let f=u.shape.length;T.assertAxesAreInnerMostDims("min",p,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,p),y=v.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;yC(l,Ht[o.dtype],y,A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var che={kernelName:Lo,backendName:"wasm",setupFunc:lhe,kernelFunc:uhe},dhe=!1,phe=Dn(Bo,dhe),my;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(my||(my={}));var AC;function hhe(e){AC=e.wasm.cwrap(Wo,null,["number","array","number","number","array","array","number","number"])}function fhe(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,mode:r}}=e,a=s.map((f,m)=>f[0]+t.shape[m]+f[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),c=s.map(f=>f[0]),p=s.map(f=>f[1]),d=new Uint8Array(new Int32Array(c).buffer),h=new Uint8Array(new Int32Array(p).buffer);return AC(o,u,t.shape.length,Ht[t.dtype],d,h,my[r],l),i}var mhe={kernelName:Wo,backendName:"wasm",kernelFunc:fhe,setupFunc:hhe},ghe=!0,yhe=Dn(Vo,ghe),Ahe=wn(Sl);function rb(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),s=n[0],r=n[1],a=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:a,pValidOutputs:o}}var xC;function xhe(e){xC=e.wasm.cwrap(Tl,"number",["number","number","number","number","number"])}function bhe(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o}=s,{boxes:i,scores:l}=n,u=t.dataIdMap.get(i.dataId).id,c=t.dataIdMap.get(l.dataId).id,p=xC(u,c,a,r,o),{pSelectedIndices:d,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=rb(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",d)}var vhe={kernelName:Tl,backendName:"wasm",setupFunc:xhe,kernelFunc:bhe},bC;function whe(e){bC=e.wasm.cwrap(Dc,"number",["number","number","number","number","number","bool"])}function khe(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,padToMaxOutputSize:i}=s,{boxes:l,scores:u}=n,c=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=bC(c,p,a,r,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=rb(t,d);t.wasm._free(m);let y=t.makeOutput([f],"int32",h),x=t.makeOutput([],"int32",g);return[y,x]}var Ihe={kernelName:Dc,backendName:"wasm",setupFunc:whe,kernelFunc:khe},vC;function She(e){vC=e.wasm.cwrap(Nl,"number",["number","number","number","number","number","number"])}function Che(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,softNmsSigma:i}=s,{boxes:l,scores:u}=n,c=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=vC(c,p,a,r,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=rb(t,d);t.wasm._free(g);let y=t.makeOutput([f],"int32",h),x=t.makeOutput([f],"float32",m);return[y,x]}var The={kernelName:Nl,backendName:"wasm",setupFunc:She,kernelFunc:Che},Nhe=!1,Ehe=Dn(Cl,Nhe,"bool"),wC;function Rhe(e){wC=e.wasm.cwrap(Rl,null,["number","number","number","number","number"])}function _he(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=n.makeOutput([...r.shape,a],"int32"),u=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(r.dataId).id;return wC(p,a,o,i,u),l}var Dhe={kernelName:Rl,backendName:"wasm",setupFunc:Rhe,kernelFunc:_he};function $he(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(1),s}var Phe={kernelName:El,backendName:"wasm",kernelFunc:$he};function Fhe(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return fy({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(c=>{v.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(c=>{let p=fy({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(p),p}),u=J9({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeData(c.dataId)),u}var Ohe={kernelName:_l,backendName:"wasm",kernelFunc:Fhe},kC;function Mhe(e){kC=e.wasm.cwrap(Uo,null,["number","array","number","number","array","array","number","number"])}function zhe(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,constantValue:r}}=e,a=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(v.sizeFromShape(t.shape)===0)return oC({backend:n,attrs:{shape:a,value:r,dtype:t.dtype}});let o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),u=n.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),p=s.map(m=>m[0]),d=s.map(m=>m[1]),h=new Uint8Array(new Int32Array(p).buffer),f=new Uint8Array(new Int32Array(d).buffer);return kC(o,c,t.shape.length,Ht[t.dtype],h,f,r,u),i}var IC={kernelName:Uo,backendName:"wasm",kernelFunc:zhe,setupFunc:Mhe},Lhe=!1,Bhe=Dn(Go,Lhe),SC;function Whe(e){SC=e.wasm.cwrap(Ho,null,["number","number","number"])}function Vhe(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,i=a,l=s,u=l;l.dtype!=="float32"&&(u=pd({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),i=n.dataIdMap.get(u.dataId).id);let c=n.makeOutput(s.shape,"float32"),p=n.dataIdMap.get(c.dataId).id;return SC(i,o,p),l.dtype!=="float32"&&n.disposeData(u.dataId),c}var Uhe={kernelName:Ho,backendName:"wasm",setupFunc:Whe,kernelFunc:Vhe},CC;function Ghe(e){CC=e.wasm.cwrap(jo,null,["number","number","number","number"])}function Hhe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=fi(o,r,t),f=p;if(h){let A=t.dataIdMap.get(c.dataId).id;A!==i&&(u=c,l=A,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=v.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;CC(l,y,Ht[x.dtype],A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var jhe={kernelName:jo,backendName:"wasm",setupFunc:Ghe,kernelFunc:Hhe},qhe=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=Ox(s,r,a,o),l=t.makeOutput([i.length],o);return t.typedArrayFromHeap(l).set(i),l},Xhe={kernelName:$c,backendName:"wasm",kernelFunc:qhe},Khe=!0,Zhe=Dn(So,Khe),Yhe=wn(qo),Jhe=wn(Zo),TC;function Qhe(e){TC=e.wasm.cwrap(Ko,null,["number","number","number","number","number","number","number","number","number","number"])}function efe(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,[c,p,d,h]=r.shape,f=[c,l,u,h],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=pd({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let y=m.id,x=t.makeOutput(f,"float32");if(v.sizeFromShape(r.shape)===0)return x;let A=t.dataIdMap.get(x.dataId).id;return TC(y,c,p,d,h,l,u,a?1:0,o?1:0,A),g!=null&&t.disposeData(g.dataId),x}var tfe={kernelName:Ko,backendName:"wasm",setupFunc:Qhe,kernelFunc:efe},NC;function nfe(e){NC=e.wasm.cwrap(Xo,null,["number","number","number","number","number","number","number","number","number","number"])}function sfe(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,[c,p,d,h]=r.shape,f=[c,l,u,h],m=t.makeOutput(f,"float32");if(v.sizeFromShape(r.shape)===0)return m;let g=t.dataIdMap.get(r.dataId),y;g.dtype!=="float32"&&(y=pd({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(y.dataId));let x=g.id,A=t.dataIdMap.get(m.dataId).id;return NC(x,c,p,d,h,l,u,a?1:0,o?1:0,A),y!=null&&t.disposeData(y.dataId),m}var rfe={kernelName:Xo,backendName:"wasm",setupFunc:nfe,kernelFunc:sfe},EC;function afe(e){EC=e.wasm.cwrap($l,null,["number","array","number","array","number","number"])}function ofe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=v.parseAxisParam(a,r.shape);if(r.shape.length===0)return N2({inputs:{x:r},backend:n});let i=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(o).buffer),p=new Uint8Array(new Int32Array(r.shape).buffer);EC(l,c,o.length,p,r.shape.length,u);let d=fs({inputs:{x:i},attrs:{shape:r.shape},backend:n});return n.disposeData(i.dataId),d}var ife={kernelName:$l,backendName:"wasm",kernelFunc:ofe,setupFunc:afe},RC;function lfe(e){RC=e.wasm.cwrap(ql,null,["number","number","number","number","number","number","number","number","array","number","number"])}function ufe(e){let{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{radians:a,fillValue:o,center:i}=s,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(l.dataId).id,[p,d,h,f]=r.shape,[m,g]=T.getImageCenter(i,d,h),y=o===0,x=255,A=typeof o=="number"?[o,o,o,y?0:x]:[...o,x],b=new Uint8Array(new Int32Array(A).buffer);return RC(u,p,d,h,f,a,m,g,b,A.length,c),l}var cfe={kernelName:ql,backendName:"wasm",kernelFunc:ufe,setupFunc:lfe},dfe=wn(Pl),pfe=wn(Yo),_C;function hfe(e){_C=e.wasm.cwrap(Fl,null,["number","number","number","number","number","number","array","number","number"])}function ffe(e){let{backend:t,inputs:n,attrs:s}=e,{indices:r,updates:a}=n,{shape:o}=s,i=t.makeOutput(o,a.dtype);if(v.sizeFromShape(o)===0)return i;let{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=Gy.calculateShapes(a,r,o),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(p).buffer),x=t.dataIdMap.get(i.dataId).id;return _C(f,g,Ht[a.dtype],l,u,c,y,d,x),i}var mfe={kernelName:Fl,backendName:"wasm",setupFunc:hfe,kernelFunc:ffe},DC;function gfe(e){DC=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function yfe(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(u.dataId).id,p=s.shape.length,d=r.shape.length,h=p===0||p>1||d===1?1:v.sizeFromShape(r.shape.slice(1));return DC(o,i,l,h,c),u}var Afe={kernelName:Ol,backendName:"wasm",kernelFunc:yfe,setupFunc:gfe},$C;function xfe(e){$C=e.wasm.cwrap(Qo,null,["number","number"])}function bfe(e){let{backend:t,inputs:{x:n}}=e,s=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(r.dataId).id;return v.sizeFromShape(r.shape)===0||$C(s,a),r}var vfe={kernelName:"Sigmoid",backendName:"wasm",setupFunc:xfe,kernelFunc:bfe},wfe=wn(Jo),PC;function kfe(e){PC=e.wasm.cwrap(ni,null,["number","number","number","number"])}function Ife(e){let{backend:t,inputs:{logits:n},attrs:{dim:s}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(a.dataId).id,i=n.shape[s],l=v.sizeFromShape(n.shape)/i;return v.sizeFromShape(a.shape)===0||PC(r,o,i,l),a}var Sfe={kernelName:ni,backendName:"wasm",setupFunc:kfe,kernelFunc:Ife};function Cfe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s,i=v.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let I=1+a.length;I<r.shape.length;++I)l.push([0,0]);let u=IC.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=T.getReshaped(u.shape,a,i,!1),p=T.getPermuted(c.length,a.length,!1),d=T.getReshapedPermuted(u.shape,a,i,!1),m=fs({inputs:{x:u},backend:n,attrs:{shape:c}}),x=uo({inputs:{x:m},backend:n,attrs:{perm:p}}),w=fs({inputs:{x},backend:n,attrs:{shape:d}});return n.disposeData(u.dataId),n.disposeData(m.dataId),n.disposeData(x.dataId),w}var Tfe={kernelName:Ll,backendName:"wasm",kernelFunc:Cfe},FC;function Nfe(e){FC=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function Efe(e){let{backend:t,inputs:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=n,i=s.shape[0],l=s.shape[1],u=t.readSync(a.dataId)[0],c=[i+u,l],p=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(o.dataId).id,f=t.makeOutput(c,s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(c.slice(0,1),r.dtype),y=t.dataIdMap.get(g.dataId).id,x=t.makeOutput([u],"bool"),A=t.dataIdMap.get(x.dataId).id,b=t.makeOutput([i],s.dtype),w=t.dataIdMap.get(b.dataId).id,I=t.makeOutput([4],"int32"),k=t.dataIdMap.get(I.dataId).id,R=FC(p,d,Ht[r.dtype],i,u,l,h,m,y,A,w,k),_=t.readSync(I.dataId),D;switch(_[0]){case 1:{D=T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(_[1]);break}case 2:{D=T.getSparseFillEmptyRowsNegativeIndexErrorMessage(_[1],_[2]);break}case 3:D=T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(_[1],_[2],_[3]);break;default:D=""}if(t.disposeData(I.dataId),D)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(x.dataId),t.disposeData(b.dataId),new Error(D);let E=f,P=g;return R!==c[0]&&(E=ol({inputs:{x:f},attrs:{begin:0,size:[R,l]},backend:t}),P=ol({inputs:{x:g},attrs:{begin:0,size:R},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[E,P,x,b]}var Rfe={kernelName:Kp,backendName:"wasm",setupFunc:Nfe,kernelFunc:Efe},OC;function _fe(e){OC=e.wasm.cwrap(zc,null,["number","number","number","number","number","number","number"])}function Dfe(e){let{backend:t,inputs:n}=e,{inputIndices:s,inputShape:r,newShape:a}=n;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=t.dataIdMap.get(s.dataId).id,i=t.dataIdMap.get(r.dataId).id,l=t.dataIdMap.get(a.dataId).id,u=s.shape[0],c=v.sizeFromShape(a.shape),p=t.makeOutput([u,c],s.dtype),d=t.dataIdMap.get(p.dataId).id,h=t.makeOutput([c],a.dtype),f=t.dataIdMap.get(h.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;OC(o,i,l,u,d,f,g);let y=t.readSync(m.dataId),x;switch(y[0]){case 0:{x=T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{x=T.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:x=T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let A=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(h.dataId));x=T.getSparseReshapeInputOutputMultipleErrorMessage(A,b);break}case 4:{let A=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(h.dataId));x=T.getSparseReshapeInputOutputMismatchErrorMessage(A,b);break}default:x=""}if(t.disposeData(m.dataId),x)throw t.disposeData(p.dataId),t.disposeData(h.dataId),new Error(x);return[p,h]}var $fe={kernelName:zc,backendName:"wasm",setupFunc:_fe,kernelFunc:Dfe},MC;function zC(e){MC=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function LC(e,t){let{backend:n,inputs:s}=e,{data:r,indices:a,segmentIds:o}=s,i=a.shape[0],l=n.readSync(o.dataId,i-1,i)[0],c=i>0?l+1:0;if(c<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=r.shape.slice();p[0]=c;let d=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(p,r.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput([4],"int32"),x=n.dataIdMap.get(y.dataId).id;MC(d,Ht[r.dtype],r.shape[0],h,f,g,x,t,0);let A=n.readSync(y.dataId),b;switch(A[0]){case 0:{b=T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{b=T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:b=T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(A[1],A[2]);break;case 3:b=T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(A[1],A[2],A[3]);break;default:b=""}if(n.disposeData(y.dataId),b)throw n.disposeData(m.dataId),new Error(b);return m}function Pfe(e){return LC(e,!0)}var Ffe={kernelName:Zp,backendName:"wasm",setupFunc:zC,kernelFunc:Pfe};function Ofe(e){return LC(e,!1)}var Mfe={kernelName:Yp,backendName:"wasm",setupFunc:zC,kernelFunc:Ofe};function zfe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=n,i=v.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(p=>{let d=[...c];d[i]=p;let h=ol({inputs:{x:r},attrs:{begin:u,size:d},backend:s});return u[i]+=p,h})}var Lfe={kernelName:Bl,backendName:"wasm",kernelFunc:zfe},Bfe=wn(ei),Wfe=wn(Lc),Vfe=!0,Ufe=Dn(si,Vfe),BC;function Gfe(e){BC=e.wasm.cwrap(oi,null,["number","number","number","number"])}function Hfe(e){let{backend:t,inputs:n,attrs:s}=e,{alpha:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=t.makeOutput(a.shape,a.dtype),l=t.dataIdMap.get(i.dataId).id;return BC(o,r,Ht[a.dtype],l),i}var jfe={kernelName:oi,backendName:"wasm",setupFunc:Gfe,kernelFunc:Hfe},WC;function qfe(e){WC=e.wasm.cwrap(Wl,null,["number","array","number","array","array","array","array","array","number","number"])}function Xfe(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=Ut.sliceInfo(r.shape,a,o,i,l,u,c,p,d),w;if(m)w=fs({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let I=Ut.computeOutShape(x,A,b),k=ol({inputs:{x:r},backend:t,attrs:{begin:x,size:I}});w=fs({inputs:{x:k},backend:t,attrs:{shape:f}}),t.disposeData(k.dataId)}else{let I=t.makeOutput(h,"float32"),k=t.dataIdMap.get(r.dataId).id,R=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),_=new Uint8Array(new Int32Array(x).buffer),D=new Uint8Array(new Int32Array(A).buffer),E=new Uint8Array(new Int32Array(b).buffer),P=new Uint8Array(new Int32Array(h).buffer),C=new Uint8Array(new Int32Array(v.computeStrides(h)).buffer),M=t.dataIdMap.get(I.dataId).id;WC(k,R,r.shape.length,_,D,E,P,C,h.length,M),w=fs({inputs:{x:I},backend:t,attrs:{shape:f}}),t.disposeData(I.dataId)}return w}var Kfe={kernelName:Wl,backendName:"wasm",setupFunc:qfe,kernelFunc:Xfe};function Zfe(e){let{backend:t,inputs:n,attrs:s}=e,{data:r,dataSplits:a}=n,{separator:o,nGramWidths:i,leftPad:l,rightPad:u,padWidth:c,preserveShortSequences:p}=s,d=t.readSync(r.dataId),h=t.readSync(a.dataId),[f,m]=zx(d,h,o,i,l,u,c,p),g=t.makeOutput([f.length],"string"),y=t.dataIdMap.get(g.dataId);y.stringBytes=f;let x=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(x).set(m),[g,x]}var Yfe={kernelName:Bc,backendName:"wasm",kernelFunc:Zfe};function Jfe(e){let{backend:t,inputs:n,attrs:s}=e,{input:r,delimiter:a}=n,{skipEmpty:o}=s,i=t.readSync(r.dataId),l=t.readSync(a.dataId),[u,c,p]=Lx(i,l[0],o),d=c.length,h=t.makeOutput([d,2],"int32");t.typedArrayFromHeap(h).set(u);let m=t.makeOutput([d],"string"),g=t.dataIdMap.get(m.dataId);g.stringBytes=c;let y=t.makeOutput([2],"int32");return t.typedArrayFromHeap(y).set(p),[h,m,y]}var Qfe={kernelName:Qp,backendName:"wasm",kernelFunc:Jfe};function eme(e){let{backend:t,inputs:n,attrs:s}=e,{input:r}=n,{numBuckets:a}=s,o=t.readSync(r.dataId),i=Bx(o,a),l=t.makeOutput(r.shape,"int32");return t.typedArrayFromHeap(l).set(i),l}var tme={kernelName:eh,backendName:"wasm",kernelFunc:eme},nme=!0,sme=Dn(ri,nme),VC;function rme(e){VC=e.wasm.cwrap(ti,null,["number","number","number","number"])}function ame(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=fi(o,r,t),f=p;if(h){let A=t.dataIdMap.get(c.dataId).id;A!==i&&(u=c,l=A,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=v.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;VC(l,y,Ht[x.dtype],A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var ome={kernelName:ti,backendName:"wasm",setupFunc:rme,kernelFunc:ame},ime=wn(Vl),lme=wn(ai),UC;function ume(e){UC=e.wasm.cwrap(wa,null,["number","array","number","array","number","number"])}function cme(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,a=n.dataIdMap.get(r.dataId).id,{reps:o}=s,i=new Array(r.shape.length);for(let d=0;d<i.length;d++)i[d]=r.shape[d]*o[d];let l=new Uint8Array(new Int32Array(r.shape).buffer),u=new Uint8Array(new Int32Array(i).buffer),c=n.makeOutput(i,r.dtype),p=n.dataIdMap.get(c.dataId).id;return UC(a,l,r.shape.length,u,i.length,Ht[c.dtype],p),c}var dme={kernelName:wa,backendName:"wasm",setupFunc:ume,kernelFunc:cme},GC;function pme(e){GC=e.wasm.cwrap(Ul,null,["number","array","number","number","number","bool","number","number"])}var hme=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{k:r,sorted:a}=n,o=t.dataIdMap.get(s.dataId).id,i=new Uint8Array(new Int32Array(s.shape).buffer),l=s.shape.slice();l[l.length-1]=r;let u=t.makeOutput(l,s.dtype),c=t.dataIdMap.get(u.dataId).id,p=t.makeOutput(l,"int32"),d=t.dataIdMap.get(p.dataId).id;return GC(o,i,s.shape.length,Ht[s.dtype],r,a,c,d),[u,p]},fme={kernelName:Ul,backendName:"wasm",setupFunc:pme,kernelFunc:hme},HC;function mme(e){HC=e.wasm.cwrap(Gl,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function gme(e){let{backend:t,inputs:n,attrs:s}=e,{image:r,transforms:a}=n,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=s,[c,p,d,h]=r.shape,[f,m]=u!=null?u:[p,d],g=[c,f,m,h],y=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),x=t.makeOutput(g,r.dtype),A=t.dataIdMap.get(x.dataId).id,w=t.dataIdMap.get(r.dataId).id,k=t.dataIdMap.get(a.dataId).id,R=o==="nearest"?1:2,_;switch(i){case"constant":_=1;break;case"reflect":_=2;break;case"wrap":_=3;break;case"nearest":_=4;break;default:_=1;break}return HC(w,k,a.shape[0]>1,c,f,m,h,d,p,y,r.shape.length-1,R,_,l,A),x}var yme={kernelName:Gl,backendName:"wasm",setupFunc:mme,kernelFunc:gme};function Ame(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape[a],i=r.shape.length,l=new Array(i-1),u=0;for(let h=0;h<i;h++)h!==a&&(l[u++]=r.shape[h]);let c=new Array(o),p=new Array(i).fill(0),d=r.shape.slice();d[a]=1;for(let h=0;h<c.length;h++)p[a]=h,c[h]=ol({inputs:{x:r},attrs:{begin:p,size:d},backend:n});return c.map(({dataId:h,dtype:f})=>({dataId:h,dtype:f,shape:l}))}var xme={kernelName:Hl,backendName:"wasm",kernelFunc:Ame};function bme(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(0),s}var vme={kernelName:jl,backendName:"wasm",kernelFunc:bme},wme=[Zce,Yce,Qce,nde,cde,hde,gde,xde,kde,Ede,Rde,_de,Pde,Fde,zde,Wde,Vde,Ude,jde,Kde,Jde,tpe,rpe,ape,ipe,lpe,upe,cpe,hpe,fpe,gpe,xpe,wpe,Spe,Npe,_pe,$pe,Fpe,sde,zpe,Bpe,Vpe,Upe,Hpe,jpe,Xpe,Zpe,Qpe,the,rhe,ihe,che,phe,mhe,yhe,Ahe,vhe,Ihe,The,Ehe,Dhe,Phe,Ohe,IC,Bhe,Uhe,jhe,Xhe,Zhe,Yhe,Jhe,bde,tfe,rfe,ife,cfe,dfe,pfe,mfe,Afe,vfe,wfe,Tde,Sfe,Tfe,Rfe,$fe,Ffe,Mfe,Lfe,Bfe,Wfe,Ufe,jfe,Kfe,Yfe,Qfe,tme,sme,ome,ime,lme,dme,fme,yme,ide,xme,vme];for(let e of wme)ur(e);var gy=j();gy.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));gy.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(gy.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var L7=co(S_()),kme=co(C_()),B7=co(T_()),W7=L7.default||L7,Ime=B7.default||B7,jC=class extends pc{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(qC),yy=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new zp(this,nn())}write(e,t,n){let s={id:this.dataIdNextNumber++};return this.move(s,e,t,n,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}move(e,t,n,s,r){let a=this.dataIdNextNumber++;if(s==="string"){let u=t;this.dataIdMap.set(e,{id:a,stringBytes:u,shape:n,dtype:s,memoryOffset:null,refCount:r});return}let o=v.sizeFromShape(n),i=o*v.bytesPerElement(s),l=this.wasm._malloc(i);this.dataIdMap.set(e,{id:a,memoryOffset:l,shape:n,dtype:s,refCount:r}),this.wasm.tfjs.registerTensor(a,o,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:s,dtype:r,shape:a,stringBytes:o}=this.dataIdMap.get(e);if(r==="string")return(t==null||t===0)&&(n==null||n>=o.length)?o:o.slice(t,n);t=t||0,n=n||v.sizeFromShape(a);let i=v.bytesPerElement(r),l=this.wasm.HEAPU8.slice(s+t*i,s+n*i);return Tme(l.buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let s;if(n==null)s=this.write(null,e,t);else{let r=this.dataIdNextNumber++;s={id:r},this.dataIdMap.set(s,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=v.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,a,n)}return{dataId:s,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),a=v.sizeFromShape(e);switch(t){case"float32":return new Float32Array(s,r,a);case"int32":return new Int32Array(s,r,a);case"bool":return new Uint8Array(s,r,a);default:throw new Error(`Unknown dtype ${t}`)}}};function Sme(e){return(t,n)=>(v.fetch(e,{credentials:"same-origin"}).then(s=>{s.ok||t.env.a(`failed to load wasm binary file at '${e}'`),s.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(a=>{n(a.instance,a.module)})})}),{})}function V7(e,t,n){if(Bm!=null)return Bm;let s="tfjs-backend-wasm.wasm";return e&&t?s="tfjs-backend-wasm-threaded-simd.wasm":e&&(s="tfjs-backend-wasm-simd.wasm"),yp!=null&&yp[s]!=null?yp[s]:n+s}async function Cme(){let[e,t]=await Promise.all([j().getAsync("WASM_HAS_SIMD_SUPPORT"),j().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,s)=>{let r={};r.locateFile=(i,l)=>{if(i.endsWith(".worker.js")){let u=kme.wasmWorkerContents.replace(/\n/g,"\\n"),c=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(c)}return i.endsWith(".wasm")?V7(e,t,hp!=null?hp:l):l+i},ab&&(r.instantiateWasm=Sme(V7(e,t,hp!=null?hp:"")));let a=!1;r.onAbort=()=>{if(a||Ap)return;Ap=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let o;t&&e&&Bm==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+W7.toString()],{type:"text/javascript"}),o=W7(r)):o=Ime(r),o.then(i=>{a=!0,Ap=!1;let l=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",l,["number"]),dispose:i.cwrap("dispose",l,[])},n({wasm:i})}).catch(s)})}function Tme(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var Nme=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Bm=null,hp=null,yp={},Ap=!1,ab=!1;function Eme(e,t=!1){if(Ly("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Ap)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Bm=e,ab=t}function E2(e,t=!1){if(Ap)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")hp=e;else{yp=e;let n=Nme.filter(s=>yp[s]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}ab=t}var qC=-1,yy=-1;function Rme(e){qC=e}function _me(){if(yy===-1)throw new Error("WASM backend not initialized.");return yy}var Dme="3.19.0",$me=2;Xl("wasm",async()=>{let{wasm:e}=await Cme();return new jC(e)},$me);var Ca=j();Ca.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Ca.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Ca.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);Ca.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);Ca.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Ca.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Ca.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Ca.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Ca.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!1);var Ze;(function(e){e[e.MUL=0]="MUL",e[e.ADD=1]="ADD",e[e.SUB=2]="SUB",e[e.DIV=3]="DIV",e[e.EQUAL=4]="EQUAL",e[e.GREATER=5]="GREATER",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.LESS=7]="LESS",e[e.LESS_EQUAL=8]="LESS_EQUAL",e[e.LOGICAL_AND=9]="LOGICAL_AND",e[e.NOT_EQUAL=10]="NOT_EQUAL",e[e.SQUARED_DIFFERENCE=11]="SQUARED_DIFFERENCE",e[e.INT_DIV=12]="INT_DIV",e[e.POW=13]="POW",e[e.PRELU=14]="PRELU",e[e.MAX=15]="MAX",e[e.MIN=16]="MIN",e[e.COMPLEX_MULTIPLY_REAL=17]="COMPLEX_MULTIPLY_REAL",e[e.COMPLEX_MULTIPLY_IMAG=18]="COMPLEX_MULTIPLY_IMAG"})(Ze||(Ze={}));var Pme="return a + b;",Fme="return areal * breal - aimag * bimag;",Ome="return areal * bimag + aimag * breal;",Mme="return a / b;",zme="return a * b;",Lme="return (a - b) * (a - b);",Bme="return a - b;",Wme="return f32(a == b);",Vme="return vec4<f32>(a == b);",Ume="return f32(a > b);",Gme="return vec4<f32>(a > b);",Hme="return f32(a >= b);",jme="return vec4<f32>(a >= b);",qme="return f32(a < b);",Xme="return vec4<f32>(a < b);",Kme="return f32(a <= b);",Zme="return vec4<f32>(a <= b);",Yme="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Jme=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Qme=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,XC=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,e0e=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,t0e=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,n0e="return f32(a != b);",s0e="return vec4<f32>(a != b);",r0e=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,a0e=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${XC}
  return resultTemp;
  `,o0e="if (a < 0.0) { return b * a; }  return a;",i0e=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function U7(e,t){let n=t?XC:Qme;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = isnanVec4(a) | isnanVec4(b);
    `+n+`
    return resultTemp;
  `:n+`
    return ${e}(a, b);
  `}function Wm(e,t){switch(e){case Ze.MUL:return zme;case Ze.ADD:return Pme;case Ze.SUB:return Bme;case Ze.DIV:return Mme;case Ze.EQUAL:return t?Vme:Wme;case Ze.GREATER:return t?Gme:Ume;case Ze.GREATER_EQUAL:return t?jme:Hme;case Ze.LESS:return t?Xme:qme;case Ze.LESS_EQUAL:return t?Zme:Kme;case Ze.LOGICAL_AND:return t?Jme:Yme;case Ze.NOT_EQUAL:return t?s0e:n0e;case Ze.SQUARED_DIFFERENCE:return Lme;case Ze.INT_DIV:return t?t0e:e0e;case Ze.PRELU:return t?i0e:o0e;case Ze.MAX:return U7("max",t);case Ze.MIN:return U7("min",t);case Ze.POW:return t?a0e:r0e;case Ze.COMPLEX_MULTIPLY_REAL:return Fme;case Ze.COMPLEX_MULTIPLY_IMAG:return Ome;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var Me;(function(e){e[e.ABS=0]="ABS",e[e.CEIL=1]="CEIL",e[e.COS=2]="COS",e[e.COSH=3]="COSH",e[e.ELU=4]="ELU",e[e.EXP=5]="EXP",e[e.EXPM1=6]="EXPM1",e[e.FLOOR=7]="FLOOR",e[e.LINEAR=8]="LINEAR",e[e.LOG=9]="LOG",e[e.LOGICAL_NOT=10]="LOGICAL_NOT",e[e.NEG=11]="NEG",e[e.RELU=12]="RELU",e[e.RELU6=13]="RELU6",e[e.LEAKYRELU=14]="LEAKYRELU",e[e.RSQRT=15]="RSQRT",e[e.SIN=16]="SIN",e[e.SINH=17]="SINH",e[e.SIGMOID=18]="SIGMOID",e[e.SQRT=19]="SQRT",e[e.SQUARE=20]="SQUARE",e[e.TANH=21]="TANH",e[e.TO_INT=22]="TO_INT"})(Me||(Me={}));var l0e="return abs(a);",u0e="return ceil(a);",c0e="return cos(a);",d0e=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,p0e="return exp(a) - 1.0;",h0e="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",f0e=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,m0e="return exp(a);",g0e="return floor(a);",y0e="return a;",A0e=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,x0e="return f32(!(a >= 1.0));",b0e="return -a;",v0e="if (a < 0.0) { return uniforms.alpha * a; } return a;",w0e=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,k0e="return select(a, 0.0, a < 0.0);",I0e="return clamp(a, 0.0, 6.0);",S0e="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",C0e=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,T0e="return 1.0/sqrt(a);",N0e="return 1.0 / (1.0 + exp(-1.0 * a));",E0e="return sin(a);",R0e=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,_0e="return sqrt(a);",D0e="return a * a;",$0e=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,P0e="return f32(i32((a)));";function Mi(e,t){switch(e){case Me.ABS:return l0e;case Me.COS:return c0e;case Me.COSH:return d0e;case Me.CEIL:return u0e;case Me.ELU:return t?f0e:h0e;case Me.EXP:return m0e;case Me.EXPM1:return p0e;case Me.FLOOR:return g0e;case Me.LINEAR:return y0e;case Me.LOG:return A0e;case Me.LOGICAL_NOT:return x0e;case Me.NEG:return b0e;case Me.LEAKYRELU:return t?w0e:v0e;case Me.RELU:return t?C0e:k0e;case Me.RELU6:return t?S0e:I0e;case Me.RSQRT:return T0e;case Me.SIGMOID:return N0e;case Me.SIN:return E0e;case Me.SINH:return R0e;case Me.SQRT:return _0e;case Me.SQUARE:return D0e;case Me.TANH:return $0e;case Me.TO_INT:return P0e;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var tn=e=>{switch(e){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${e}-component is not supported.`)}};function Ta(e,t=!1,n=!1,s=3){if(e===null)return"";let r="";if(e==="linear")r=Mi(Me.LINEAR);else if(e==="relu")r=Mi(Me.RELU,n);else if(e==="elu")r=Mi(Me.ELU,n);else if(e==="relu6")r=Mi(Me.RELU6,n);else if(e==="prelu")r=Wm(Ze.PRELU,n);else if(e==="sigmoid")r=Mi(Me.SIGMOID,n);else if(e==="leakyrelu")r=Mi(Me.LEAKYRELU,n);else throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`);let o=tn(n?4:1),i="";return t?i=`
      fn activation(a : ${o}, coords : vec${s}<i32>) -> ${o} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${r}
      }`:i=`
      fn activation(a : ${o}, coords : vec${s}<i32>) -> ${o} {
        ${r}
      }`,i}function hd(e,t){return`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}function F0e(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}var O0e=(e,t,n,s)=>{let r={dtype:s.dtype,shape:s.shape},a=M0e(n,r,t),o=e.createShaderModule({code:a,label:t.constructor.name});return e.createComputePipeline({compute:{module:o,entryPoint:"main"},label:t.constructor.name,layout:"auto"})};function Tn(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";if(e===5)return"vec5";if(e===6)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Ya(e){if(e===0)return"x";if(e===1)return"y";if(e===2)return"z";if(e===3)return"w";if(e===4)return"u";if(e===5)return"v";throw Error(`Index ${e} is not yet supported`)}function lt(){return`
    ${fd()}
      let index = getGlobalIndex();
`}function fd(){return`
  ${R2()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function R2(){return`
  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function M0e(e,t,n){let s=[];if(s.push(`
      const workGroupSizeX = ${n.workGroupSize[0]}u;
      const workGroupSizeY = ${n.workGroupSize[1]}u;
      const workGroupSizeZ = ${n.workGroupSize[2]}u;

      var<private> localId: vec3<u32>;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${KC(n)?"  return i32(globalId.x);":`  let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
                   localId.y * workGroupSizeX + localId.x;
               let workGroupID = (globalId - localId)/vec3<u32>(
                   workGroupSizeX, workGroupSizeY, workGroupSizeZ);

               return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
                   workGroupID.y * numWorkgroups.x + workGroupID.x) *
                   (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
                   localInvocationIndex);
        `}
      }
    `),n.isFromPixels)return s.push(`
        struct Uniform {
          size            : i32,
          numChannels     : i32,
          outShapeStrides : vec2<i32>,
        };

        @group(0) @binding(0) var<storage, read_write> result: array<${xp(t.dtype,n.isVec4)}>;
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `),[G7,s.join(`
`),H7(t.shape),n.getUserCode()].join(`
`);let r=!1,a=!1,o="struct Uniforms { NAN : f32, ";n.variableNames.forEach((f,m)=>{let g=Tn(e[m].shape.length);(g==="vec5"||g==="vec6")&&(a=!0),(r||a)&&(o+="@align(16) "),r=a,o+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${g}, `});let i=Tn(t.shape.length);a=i==="vec5"||i==="vec6",(r||a)&&(o+="@align(16) "),r=a,o+=`outShape : ${i}, `;let l=t.shape.length-1,u=Tn(l);a=u==="vec5"||u==="vec6",(r||a)&&(o+="@align(16) "),r=a,o+=`
         outShapeStrides: ${u}, `,n.size&&(r&&(o+="@align(16) "),r=!1,o+="size : i32, "),n.uniforms&&(r&&(o+="@align(16) "),o+=n.uniforms),o+="};",s.push(o),n.atomic?s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${xp(t.dtype,n.isVec4)}>;
    `),n.variableNames.forEach((f,m)=>{s.push(`
      @group(0) @binding(${1+m}) var<storage, read> ${f}: array<${n.variableTypes?n.variableTypes[m]:xp(e[m].dtype,n.isVec4)}>;
        `)}),o!==""&&s.push(`
      @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let c=V0e(t.shape,n.dispatchLayout),p=[G7,s.join(`
`),H7(t.shape),c,U0e(t.shape.length)];n.atomic||p.push(G0e(t.shape,t.dtype,n.isVec4));let d=e.map((f,m)=>W0e(f,t.shape,n.variableTypes?n.variableTypes[m]==="vec4<f32>":n.isVec4,n.dispatchLayout.x.length===t.shape.length)).join(`
`);return p.push(d),p.push(n.getUserCode()),p.join(`
`)}function z0e(e,t,n,s){let r=e.shaderKey;if(e.isFromPixels)return r;let a=n.map(c=>c.dtype).concat(s.dtype),o=n.map(c=>T.getBroadcastDims(c.shape,s.shape)),i=n.map(c=>v.arraysEqual(c.shape,s.shape)).join("_"),l=o.map(c=>c.join("_")).join(";"),u=KC(e)?"flatDispatch":"";return r+="_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(c=>c.length).join(",")+a.join(",")+e.variableNames.join(",")+l+i+u,r}var G7=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function H7(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let n=v.computeStrides(e),s=Tn(t),r=[];for(let o=0;o<t;o++)r.push(`d${o}`);if(n.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let a;return a="var index2 = index;"+n.map((o,i)=>{let l=`let ${r[i]} = index2 / uniforms.outShapeStrides.${Ya(i)}`,u=i===n.length-1?`let ${r[i+1]} = index2 - ${r[i]} * uniforms.outShapeStrides.${Ya(i)}`:`index2 = index2 - ${r[i]} * uniforms.outShapeStrides.${Ya(i)}`;return`${l}; ${u};`}).join(""),`
    fn getCoordsFromIndex(index : i32) -> ${s} {
      ${a}
      return ${s}(${r.join(",")});
    }
  `}function L0e(e,t){let n=e.name,s=e.shape.length,r=Tn(s),a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=["d0","d1","d2","d3","d4","d5"].slice(0,s),i=o.map(c=>`${c} : i32`).join(", ");if(s<1)return t?`
        fn ${a}() -> vec4<f32> {
          return vec4<f32>(${n}[0]);
        }
      `:`
      fn ${a}() ->f32 {
        return f32(${n}[0]);
      }
    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,u=`${s}D`;return s===0&&(u="1D"),t?`
      fn ${a}(${i}) -> vec4<f32> {
        return vec4<f32>(${n}[getIndexFromCoords${u}(${r}(${o.join(",")}),
          ${l}) / 4]);
      }
      `:`
    fn ${a}(${i}) -> f32 {
      return f32(${n}[getIndexFromCoords${u}(${r}(${o.join(",")}),
        ${l})]);
    }
   `}function B0e(e,t,n,s){let r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),o="get"+a+"ByOutput",i=e.shape.length,l=t.length,u=Tn(l);if(v.arraysEqual(e.shape,t)&&s)return n?`
      fn ${o}Index(globalIndex : i32) -> vec4<f32> {
        return vec4<f32>(${r}[globalIndex]);
      }

      fn ${o}Coords(coords : ${u}) -> vec4<f32> {
        return vec4<f32>(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
      }
      `:`
    fn ${o}Index(globalIndex : i32) -> f32 {
      return f32(${r}[globalIndex]);
    }

    fn ${o}Coords(coords : ${u}) -> f32 {
      return f32(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}]);
    }
    `;let c=T.getBroadcastDims(e.shape,t),p=l-i,d="";if(i===0)return n?`
    fn ${o}Index(globalIndex : i32) -> vec4<f32> {
      return get${a}();
    }

    fn ${o}Coords(coords : ${u}) -> vec4<f32> {
      return get${a}();
    }
  `:`
    fn ${o}Index(globalIndex : i32) -> f32{
      return get${a}();
    }

    fn ${o}Coords(coords : ${u}) -> f32{
      return get${a}();
    }
  `;l<2&&c.length>=1?d="coords = 0;":d=c.map(g=>`coords.${Ya(g+p)} = 0;`).join(`
`);let h="";if(l<2&&i>0)h="coords";else if(l>1){let g=Tn(i),y=e.shape.map((x,A)=>`coords.${Ya(A+p)}`).join(", ");h=`${g}(${y})`}else h="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${i}D`;return n?`
    fn ${o}Index(globalIndex : i32) -> vec4<f32> {
      var coords = getCoordsFromIndex(globalIndex);
      ${d}
      return ${r}[getIndexFromCoords${m}(${h}, ${f}) / 4];
    }

    fn ${o}Coords(coordsIn : ${u}) -> vec4<f32> {
      var coords = coordsIn;
      ${d}
      return ${r}[getIndexFromCoords${m}(${h}, ${f}) / 4];
    }
  `:`
  fn ${o}Index(globalIndex : i32) -> f32 {
    var coords = getCoordsFromIndex(globalIndex);
    ${d}
    return f32(${r}[getIndexFromCoords${m}(${h}, ${f})]);
  }

  fn ${o}Coords(coordsIn : ${u}) -> f32 {
    var coords = coordsIn;
    ${d}
    return f32(${r}[getIndexFromCoords${m}(${h}, ${f})]);
  }
`}function W0e(e,t,n,s){let r=L0e(e,n);return e.shape.length<=t.length&&(r+=B0e(e,t,n,s)),r}function V0e(e,t){let{x:n,y:s=[],z:r=[]}=t,a=e.length;if(n.length===a)return`fn getOutputCoords() -> ${Tn(a)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let o="",i=[n,s,r],l=0;for(let d=0;d<i.length;d++){let h=i[d];if(h.length!==0)if(l+=h.length,h.length===1)o+=`let d${h[0]} = i32(globalId[${d}]);`;else{let f=F0e(h,"uniforms.outShape");o+=`var index${d} = i32(globalId[${d}]);`;for(let m=0;m<f.length;m++)o+=`let d${h[m]} = index${d} / ${f[m]};`,m===f.length-1?o+=`let d${h[m+1]} = index${d} - d${h[m]} * ${f[m]};`:o+=`index${d} = index${d} - d${h[m]} * ${f[m]};`}}let u=[];for(let d=0;d<l;d++)u.push(`d${d}`);let c=Tn(l),p=`fn getOutputCoords() -> ${c} {
  ${o}
`;return u.length===0?p+=`return ${c}(0); }`:p+=`return ${c}(${u.join(",")}); }`,p}function U0e(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:v.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function KC(e){return e.dispatch[1]===1&&e.dispatch[2]===1}function xp(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function G0e(e,t,n){let s=e.length,r=xp(t,n),a;if(n?a=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${r}(value);
    }`:a=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${r}(value);
    }`,s>=2){let o=["d0","d1","d2","d3","d4","d5"].slice(0,s),i=Tn(s);n?a+=`
      fn setOutputAtCoords(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:a+=`
      fn setOutputAtCoords(${o.map(l=>`${l} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${o.map(l=>`${l} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return a}var ZC={};Ge(ZC,{ArrayBufferToTypedArray:()=>QC,GPUBytesPerElement:()=>JC,MatMulProgramType:()=>Gs,computeDispatch:()=>Ue,computeWorkGroupSizeForConv2d:()=>ob,computeWorkGroupSizeForMatMul:()=>YC,computeWorkPerThreadForConv2d:()=>ib,flatDispatchLayout:()=>at,isWebGPUSupported:()=>lb,tilesFitEvenlyIntoShape:()=>H0e});var Xi=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function H0e(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((n,s)=>n%e[s]===0)}function Ue(e,t,n=[1,1,1],s=[1,1,1]){let[r,a,o]=[Math.ceil(Xi(e.x.map(i=>t[i]))/(n[0]*s[0])),e.y?Math.ceil(Xi(e.y.map(i=>t[i]))/(n[1]*s[1])):1,e.z?Math.ceil(Xi(e.z.map(i=>t[i]))/(n[2]*s[2])):1];return[r,a,o]}function ob(e,t,n=!1){if(n)return[8,8,1];let s=Xi(e.x.map(a=>t[a])),r=Xi(e.y.map(a=>t[a]));return s<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function YC(e,t,n){return e===1?[32,1,1]:n===1?[1,32,1]:[8,8,1]}function ib(e,t,n=!1){if(n)return[4,4,1];let s=Xi(e.x.map(a=>t[a])),r=Xi(e.y.map(a=>t[a]));return s<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function at(e){return{x:e.map((t,n)=>n)}}function JC(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function QC(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function lb(){return(typeof window!="undefined"||typeof WorkerGlobalScope!="undefined")&&!!navigator.gpu}var Gs;(function(e){e[e.MatMulPackedVec4Program=0]="MatMulPackedVec4Program",e[e.MatMulReduceProgram=1]="MatMulReduceProgram",e[e.MatMulSplitKProgram=2]="MatMulSplitKProgram",e[e.MatMulSmallOutputSizeProgram=3]="MatMulSmallOutputSizeProgram",e[e.MatMulPackedProgram=4]="MatMulPackedProgram",e[e.MatMulMax=5]="MatMulMax"})(Gs||(Gs={}));function eT(e,t,n,s,r=!1,a=!1,o=!1,i=1){v.assert(n&&i===1||!n,()=>`transposeA ${n} is not compatible with component size ${i}`);let l=`
      let batch = ${e?"0":"batchIn"};
      let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
      ${n?`value = A[(batch * batchASize + col * uniforms.aShape[2] + row) / ${i}];`:`value = A[(batch * batchASize + row * uniforms.aShape[2] + col) / ${i}];`}

    `,u;return s===!1?u=`value = B[(batch * batchBSize + row * uniforms.bShape[2] + col) / ${i}];`:u=`value = B[(batch * batchBSize + col * uniforms.bShape[2] + row) / ${i}];`,`
  fn mm_readA(batchIn: i32, row: i32, colIn: i32) -> ${tn(i)} {
    var value = ${tn(i)}(0.0);
    let col = colIn * ${i};
    ${r&&o?l:`
    ${n?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${l}
    }
    `}
    return value;
  }

  fn mm_readB(batchIn: i32, row: i32, colIn: i32) -> ${tn(i)} {
    let col = colIn * ${i};
    let batch = ${t?"0":"batchIn"};
    let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
    var value = ${tn(i)}(0.0);
    ${u}
    return value;
  }
  `}function _2(e,t,n,s,r,a,o=!1,i=!1,l=!1,u=1){return`
  ${eT(n,s,r,a,o,i,l,u)}
  fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${tn(u)}) {
    let col = colIn * ${u};
    ${o&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${hd(e,t)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var j0e=e=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          t * TileInner + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRowStart + inputRow,
          t * TileInner + inputCol);
        `,q0e=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function ub(e,t,n=!1,s=32){let r=e[1]*t[1],a=e[0]*t[0],o=n?r:s,i=n?s:r;v.assert(i%t[1]===0&&o%t[0]===0&&s%t[1]===0,()=>`tileAHight ${i} must be divisible by workGroupSize[1]${t[1]}, tileAWidth ${o} must be divisible by workGroupSize[0]${t[0]}, tileInner ${s} must be divisible by workGroupSize[1]${t[1]}`);let l=i/t[1],u=o/t[0],c=s/t[1];return`
    var<workgroup> mm_Asub : array<array<f32, ${o}>, ${i}>;
    var<workgroup> mm_Bsub : array<array<f32, ${a}>, ${s}>;
    const RowPerThread = ${e[1]};
    const ColPerThread = ${e[0]};
    const TileInner = ${s};

    @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
    fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
            @builtin(global_invocation_id) GlobalId : vec3<u32>,
            @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
            @builtin(workgroup_id) workgroupId: vec3<u32>) {
      localId = LocalId;
      globalId = GlobalId;
      numWorkgroups = NumWorkgroups;

      let tileRow = i32(localId.y) * RowPerThread;
      let tileCol = i32(localId.x) * ColPerThread;

      let globalRow = i32(globalId.y) * RowPerThread;
      let globalCol = i32(globalId.x) * ColPerThread;
      let batch = i32(globalId.z);
      let globalRowStart = i32(workgroupId.y) * ${r};

      let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

      var acc : array<array<f32, ColPerThread>, RowPerThread>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let tileRowA = i32(localId.y) * ${l};
      let tileColA = i32(localId.x) * ${u};
      let tileRowB = i32(localId.y) * ${c};
      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${l}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${u}; innerCol = innerCol + 1) {
            let inputRow = tileRowA + innerRow;
            let inputCol = tileColA + innerCol;
            ${j0e(n)}
          }
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${c}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch,
              t * TileInner + inputRow,
              globalCol + innerCol);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ColPerThread>;
        for (var k = 0; k < TileInner; k = k + 1) {
          for (var inner = 0; inner < ColPerThread; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            ${q0e(n)}
            for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          mm_write(batch, globalRow + innerRow, globalCol + innerCol,
              acc[innerRow][innerCol]);
        }
      }
    }
  `}var X0e=e=>e?`
      mm_readA(batch, colA, globalRow),
      mm_readA(batch, colA + 1, globalRow),
      mm_readA(batch, colA + 2, globalRow),
      mm_readA(batch, colA + 3, globalRow)
  `:`
      mm_readA(batch, globalRow, colA),
      mm_readA(batch, globalRow, colA + 1),
      mm_readA(batch, globalRow, colA + 2),
      mm_readA(batch, globalRow, colA + 3)
  `;function K0e(e,t=!1){return v.assert(e[1]===1&&e[2]===1,()=>`A linear work group size is required. But got ${e}.`),`
    const TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${fd()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;
      let batch = i32(globalId.z);
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${X0e(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(batch, rowB, globalCol),
                              mm_readB(batch, rowB + 1, globalCol),
                              mm_readB(batch, rowB + 2, globalCol),
                              mm_readB(batch, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}var Z0e=class{constructor(e,t,n,s,r,a=!1,o=!1,i=null,l=null,u=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let c=a?e[1]:e[2];this.workGroupSize=YC(t[1],c,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),v.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let p=i!=null,d=u!=null;p&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.transposeA=a,this.transposeB=o,this.addBias=p,this.activation=l,this.hasPreluActivationWeights=d,this.batchAEqualOne=s,this.batchBEqualOne=r,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],c),this.shaderKey=`matMulPacked_${this.workPerThread}_${a}_${o}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.outputShape[1]>1}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(e,t,n){let s=this.workGroupSize[1]*this.workPerThread,r=this.workGroupSize[0]*this.workPerThread;this.tileInner=32,this.outputShape[1]===1&&(this.tileInner=this.workGroupSize[0]*4);let a=e%s===0,o=t%r===0,i=n%this.tileInner===0;return[a,o,i]}getUserCode(){return`
      ${Ta(this.activation,this.hasPreluActivationWeights)}
      ${_2(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner)}
      ${this.outputShape[1]>1?ub([this.workPerThread,this.workPerThread,1],this.workGroupSize,this.transposeA,this.tileInner):K0e(this.workGroupSize,this.transposeA)}
    `}},Y0e=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          t * TileInner + inputRow,
          globalRowStart / ${t} + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          t * TileInner / ${t} + inputCol);
        `,J0e=(e,t)=>e?`
        let ACached0 = mm_Asub[k * InnerElementSize][localRow];
        let ACached1 = mm_Asub[k * InnerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * InnerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * InnerElementSize + 3][localRow];"}
        for (var i = 0; i < RowPerThread; i = i + 1) {
          acc[i] = BCached[0] * ACached0[i] + acc[i];
          acc[i] = BCached[1] * ACached1[i] + acc[i];
          acc[i] = BCached[2] * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached[3] * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < RowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached[0] * ACached.x + acc[i];
          acc[i] = BCached[1] * ACached.y + acc[i];
          acc[i] = BCached[2] * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached[3] * ACached.w + acc[i];"}
        }`;function cb(e,t,n,s,r=4,a=!1){let o=a?t:s,i=a?s:t,l=a?e[1]:r;return v.assert((a&&t===n||s%4===0||s%3===0)&&e[0]===4&&(r===3||r===4),()=>`tileInner ${s} must be divisible by 4|3. ColPerThread ${e[0]} must be 4.
           innerElementSize ${r} must be 3|4.`),`
  var<workgroup> mm_Asub : array<array<vec${l}<f32>, ${o/l}>, ${i}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n/e[0]}>, ${s}>;

  const RowPerThread = ${e[1]};
  const ColPerThread = ${e[0]};
  const InnerElementSize = ${r};
  const TileInner = ${s};

  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
          @builtin(workgroup_id) workgroupId: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;

    let localRow = i32(localId.y);
    let tileRow = ${t===1?"0":"localRow * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${t===1?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let globalRowStart = i32(workgroupId.y) * ${t};

    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = localRow * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${Y0e(a,l)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch, t * TileInner + inputRow, globalCol);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / InnerElementSize; k = k + 1) {
            BCached[0] = mm_Bsub[k * InnerElementSize][tileCol];
            BCached[1] = mm_Bsub[k * InnerElementSize + 1][tileCol];
            BCached[2] = mm_Bsub[k * InnerElementSize + 2][tileCol];
            ${r===3?"":"BCached[3] = mm_Bsub[k * InnerElementSize + 3][tileCol];"}

            ${J0e(a,r)}
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var Q0e=class{constructor(e,t,n,s,r=!1,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&!r?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let l=a!=null,u=i!=null;l&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=t[1]===1&&!r?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=l,this.activation=o,this.hasPreluActivationWeights=u,this.batchAEqualOne=n,this.batchBEqualOne=s,this.transposeA=r;let c=r?e[1]:e[2];this.fitAOuter=t[1]%this.tileAOuter===0,this.fitBOuter=t[2]%this.tileBOuter===0,this.fitInner=c%this.tileInner===0,this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.elementsPerThread}_${this.batchAEqualOne}_${this.batchBEqualOne}_${this.transposeA}`}getUserCode(){return`
      ${Ta(this.activation,this.hasPreluActivationWeights,!0)}
      ${_2(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,!1,!1,this.fitAOuter,this.fitBOuter,this.fitInner,4)}
      ${cb(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,4,this.transposeA)}
    `}};function e2e(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${fd()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var t2e=class{constructor(e,t,n,s=!1,r=!1,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize);let l=a!=null,u=i!=null;l&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=r,this.addBias=l,this.activation=o,this.hasPreluActivationWeights=u,this.batchAEqualOne=t,this.batchBEqualOne=n,this.shaderKey=`matMulReduce_${this.activation}_${s}_${r}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${Ta(this.activation,this.hasPreluActivationWeights)}
      ${_2(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${e2e()}
    `}};function n2e(e){let t=e[1],n=e[0],s=t>n?t:n;return`
  var<workgroup> mm_Asub : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${fd()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batch, globalRow, globalColA);
    var regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${s};
    globalRowB = globalRowB + ${s};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batch, globalRow, globalColA);
      regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${s};
      globalRowB = globalRowB + ${s};

      for (var k = 0; k < ${s}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}var s2e=class{constructor(e,t,n,s=!1,r=!1,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,8,1],this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]/this.workGroupSize[1]),n[0]];let l=a!=null;l&&this.variableNames.push("bias");let u=i!=null;u&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=r,this.addBias=l,this.activation=o,this.hasPreluActivationWeights=u,this.batchAEqualOne=e[0]===1,this.batchBEqualOne=t[0]===1,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${s}_${r}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${Ta(this.activation,this.hasPreluActivationWeights)}
      ${_2(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${n2e(this.workGroupSize)}
    `}},r2e=class{constructor(e,t,n,s,r=!1,a=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.atomic=!0,this.tileInner=32,v.assert(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]},this.elementsPerThread=[4,4,this.tileInner],this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1),this.dispatch=Ue(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workGroupSize,this.elementsPerThread),this.transposeA=r,this.transposeB=a,this.batchAEqualOne=n,this.batchBEqualOne=s,this.shaderKey=`matMulSplitK_${r}_${a}_${n}_${s}_${this.elementsPerThread}`}getUserCode(){let e=`
     var oldValue = atomicLoad(&(result[flatIndex]));
     var exchanged = false;
     for (; !exchanged;) {
       let newValueF32 = bitcast<f32>(oldValue) + value;
       let newValue = bitcast<i32>(newValueF32);
       let res = atomicCompareExchangeWeak(&(result[flatIndex]), oldValue, newValue);
       oldValue = res.old_value;
       exchanged = res.exchanged;
     }
     `;return`
      ${eT(this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          var value = valueIn;
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          ${e}
        }
      }

      ${this.makeMatMulSplitKSource()}
    `}makeMatMulSplitKSource(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=this.elementsPerThread[1],s=this.elementsPerThread[0],r=this.tileInner/this.workGroupSize[0],a=this.tileInner/this.workGroupSize[1];return v.assert(this.tileInner%this.workGroupSize[0]===0&&this.tileInner%this.workGroupSize[1]===0,()=>`tileInner ${this.tileInner} must be divisible by workGroupSize[0]${this.workGroupSize[0]} and workGroupSize[1]${this.workGroupSize[1]}`),`
      var<workgroup> mm_Asub : array<array<f32, ${this.tileInner}>, ${e}>;
      var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${this.tileInner}>;
      ${fd()}
        let tileRow = i32(localId.y) * ${n};
        let tileCol = i32(localId.x) * ${s};

        let globalRow = i32(globalId.y) * ${n};
        let globalCol = i32(globalId.x) * ${s};
        let batch = 0;
        let kStart = i32(globalId.z) * ${this.tileInner};

        // Load one tile of A into local memory.
        let tileColA = i32(localId.x) * ${r};
        for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${r}; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;
            mm_Asub[inputRow][inputCol] = mm_readA(${this.batchAEqualOne?0:"batch"},
                globalRow + innerRow,
                kStart + inputCol);
          }
        }
        // Load one tile of B into local memory.
        let tileRowB = i32(localId.y) * ${a};
        for (var innerRow = 0; innerRow < ${a}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${s}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(${this.batchBEqualOne?0:"batch"},
                kStart + inputRow,
                globalCol + innerCol);
          }
        }

        workgroupBarrier();

        var acc : array<array<f32, ${s}>, ${n}>;
        // Loop over shared dimension. Compute acc values for a single thread.
        for (var k = 0; k < ${this.tileInner}; k = k + 1) {
          var BCached : array<f32, ${s}>;
          for (var inner = 0; inner < ${s}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {
            let ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${s}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${s}; innerCol = innerCol + 1) {
            mm_write(batch, globalRow + innerRow, globalCol + innerCol, acc[innerRow][innerCol]);
          }
        }
      }
    `}},a2e=class{constructor(e,t=null,n=null,s=null){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=s!=null,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`
    ${Ta(this.activation,this.hasPreluActivationWeights)}
    ${lt()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${hd(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}},o2e=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${lt()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function iu(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||v.inferDtype(r),a==="string"){let o=v.getArrayFromDType(a,v.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new o2e(s),i=[{type:"float32",data:[r]}];return t.runWebGPUProgram(o,[],a,i)}}var i2e={kernelName:Sc,backendName:"webgpu",kernelFunc:iu};function He(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=v.sizeFromShape(s.shape),o=v.inferFromImplicitShape(r,a),i=v.sizeFromShape(o);return v.assert(a===i,()=>`The new shape (${o}) has ${i} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var l2e={kernelName:Dl,backendName:"webgpu",kernelFunc:He};function db({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let u=e.shape.length,c=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],h=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(m),x=v.sizeFromShape(g),b=Kl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);v.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let w=n?[y,p,h]:[y,h,p],I=s?[x,f,d]:[x,d,f],k=He({inputs:{x:e},backend:r,attrs:{shape:w}}),R=He({inputs:{x:t},backend:r,attrs:{shape:I}}),_=[k,R],D=Math.max(y,x),E=y===1,P=x===1,C=(p%4===0&&!n||h%4===0&&n)&&f%4===0&&!s,M=[k,R],W=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[p]}],G,X,K=[D,h,f],Y=j().get("WEBGPU_MATMUL_PROGRAM_TYPE");switch(Y<0&&(h*f<=128?Y=Gs.MatMulReduceProgram:D===1&&h<=128&&f<=48&&d>=2e3?Y=Gs.MatMulSplitKProgram:h<=16&&(f<=512||d>=2*f)||f<=16&&(h<=512||p>=2*h)?Y=Gs.MatMulSmallOutputSizeProgram:C?Y=Gs.MatMulPackedVec4Program:Y=Gs.MatMulPackedProgram),Y){case Gs.MatMulPackedVec4Program:G=new Q0e(w,K,E,P,n,a,l,o);break;case Gs.MatMulReduceProgram:G=new t2e(K,E,P,n,s,a,l,o);break;case Gs.MatMulSplitKProgram:{if(X=iu({backend:r,attrs:{shape:K,value:0,dtype:e.dtype}}),G=new r2e(K,d,E,P,n,s),a||l){X=r.runWebGPUProgram(G,M,e.dtype,W,X);let ee=new a2e(X.shape,a,l,o),le=null,re=[X];a&&re.push(a),o&&re.push(o),l==="leakyrelu"&&(le=[{type:"float32",data:[i]}],ee.uniforms+=" alpha : f32,");let pe=r.runWebGPUProgram(ee,re,X.dtype,le);_.push(X);let ce=He({inputs:{x:pe},backend:r,attrs:{shape:b}});_.push(pe);for(let Ae of _)r.disposeData(Ae.dataId);return ce}break}case Gs.MatMulSmallOutputSizeProgram:G=new s2e(w,I,K,n,s,a,l,o);break;case Gs.MatMulPackedProgram:G=new Z0e(w,K,j().get("WEBGPU_MATMUL_WORK_PER_THREAD"),E,P,n,s,a,l,o);break;default:throw new Error(`Unsupported MatMulProgramType ${Y}.`)}a&&M.push(a),o&&M.push(o),l==="leakyrelu"&&(W.push({type:"float32",data:[i]}),G.uniforms+=" alpha : f32,"),X=r.runWebGPUProgram(G,M,e.dtype,W,X);let se=He({inputs:{x:X},backend:r,attrs:{shape:b}});_.push(X);for(let ee of _)r.disposeData(ee.dataId);return se}function u2e(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=s;return db({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:p,activation:c})}var c2e={kernelName:Qa,backendName:"webgpu",kernelFunc:u2e},j7=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Wm(this.op,!1)}
      }

      ${lt()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},Ay=class{constructor(e,t,n){this.size=!0,this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=at(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length===1&&n.length>1&&t[0]<1024,this.useSharedMemoryWithB=n.length===1&&t.length>1&&n[0]<1024,this.useSharedMemoryWithA||this.useSharedMemoryWithB?(this.isVec4=!1,this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey=`binary_${this.type}_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`,this.type="shared",this.workGroupSize=[256,1,1],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4):(v.arraysEqual(t,n)&&v.sizeFromShape(t)%4===0?(this.isVec4=!0,this.type="vec4",this.workPerThread=4):(this.isVec4=!1,this.type="plain",this.workPerThread=1),this.shaderKey=`binary_${this.type}_${e}`,this.workGroupSize=[128,1,1]),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1])}getUserCode(){let e;if(this.type==="shared"){let t=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",n=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
          let b = sharedBuf[${t}];`:`let a = sharedBuf[${t}];
          let b = getBByOutputCoords(coords);`;e=`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${Wm(this.op,this.isVec4)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${lt()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${n}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}else{let t=this.type==="vec4"?"vec4<f32>":"f32",n=Wm(this.op,this.isVec4);e=`
       fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
         ${n}
       }
       ${lt()}
         if (index < uniforms.size) {
           let a = getAByOutputIndex(index);
           let b = getBByOutputIndex(index);
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `}return e}};function Os(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var d2e={kernelName:Do,backendName:"webgpu",kernelFunc:Os};function md(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.tensorMap.get(a.dataId),i=Os({inputs:{x:s},backend:n}),l=Os({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var p2e={kernelName:Bp,backendName:"webgpu",kernelFunc:md},Wh=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Mi(this.op,!1)}
      }
      ${lt()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function $n({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:s,backend:r})=>{let{x:a}=s,o=r,i=n||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){let u=o.tensorMap.get(a.dataId),c=t(u.values,i);return o.makeTensorInfo(a.shape,i,c)}let l=new Wh(a.shape,e);return o.runWebGPUProgram(l,[a],i)}}function is({opType:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:s}){return({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(n&&o.dtype==="complex64"){let p=l.tensorMap.get(o.dataId),d=l.tensorMap.get(i.dataId),h,f;if(e!==Ze.MUL)[h,f]=[[p.complexTensorInfos.real,d.complexTensorInfos.real],[p.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(g=>{let[y,x]=g,A={dataId:y.dataId,dtype:y.dtype,shape:o.shape},b={dataId:x.dataId,dtype:x.dtype,shape:i.shape},w=new Ay(e,o.shape,i.shape);return l.runWebGPUProgram(w,[A,b],Mn(y.dtype,x.dtype))});else{let g=new j7(Ze.COMPLEX_MULTIPLY_REAL,o.shape,i.shape),y=new j7(Ze.COMPLEX_MULTIPLY_IMAG,o.shape,i.shape),x=[{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:o.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:i.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:i.shape}];h=l.runWebGPUProgram(g,x,"float32"),f=l.runWebGPUProgram(y,x,"float32")}let m=md({inputs:{real:h,imag:f},backend:l});return l.disposeData(h.dataId),l.disposeData(f.dataId),m}let u=s||Mn(o.dtype,i.dtype);if((o.dtype==="string"||i.dtype==="string"||l.shouldExecuteOnCPU([o,i]))&&t!=null){let p=l.tensorMap.get(o.dataId).values,d=l.tensorMap.get(i.dataId).values,h=o.dtype==="string"?T.fromUint8ToStringArray(p):p,f=o.dtype==="string"?T.fromUint8ToStringArray(d):d,[m,g]=t(o.shape,i.shape,h,f,u);return l.makeTensorInfo(g,u,m)}let c=new Ay(e,o.shape,i.shape);return l.runWebGPUProgram(c,[o,i],u)}}var{addImpl:h2e,ceilImpl:f2e,concatImpl:m2e,equalImpl:g2e,expImpl:y2e,expm1Impl:A2e,floorImpl:x2e,gatherNdImpl:b2e,gatherV2Impl:v2e,greaterEqualImpl:w2e,greaterImpl:k2e,lessEqualImpl:I2e,lessImpl:S2e,logImpl:C2e,maxImpl:T2e,maximumImpl:N2e,minimumImpl:E2e,multiplyImpl:R2e,negImpl:_2e,notEqualImpl:D2e,prodImpl:$2e,rangeImpl:P2e,rsqrtImpl:F2e,scatterImpl:O2e,simpleAbsImpl:M2e,sliceImpl:z2e,stridedSliceImpl:L2e,stringNGramsImpl:B2e,subImpl:W2e,tileImpl:V2e,topKImpl:U2e,transposeImpl:G2e,uniqueImpl:obe}=Rx,H2e=$n({opType:Me.ABS,cpuKernelImpl:M2e}),j2e={kernelName:ll,backendName:"webgpu",kernelFunc:H2e},q2e=is({opType:Ze.ADD,cpuKernelImpl:h2e,supportsComplex:!0}),X2e={kernelName:ba,backendName:"webgpu",kernelFunc:q2e},K2e=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}ByOutputCoords(coords);`)});let t=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${lt()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function Z2e(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Os({inputs:{x:s[0]},backend:n});let r=s.map(i=>i.dtype).reduce((i,l)=>Mn(i,l)),a=s.map(i=>i.shape),o=new K2e(a);return n.runWebGPUProgram(o,s,r)}var Y2e={kernelName:ho,backendName:"webgpu",kernelFunc:Z2e},tT=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let s=[t];T.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,e.length),this.op=n==="min"?"<":">";let[r]=T.computeOutAndReduceShapes(e,s);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${Ya(this.inputShape.length-1)}`,n=()=>{let r="";if(this.outputShape.length===1)this.inputShape.length!==1&&(r+="outputCoords,");else for(let a=0;a<this.outputShape.length;a++)r+=`outputCoords.${Ya(a)},`;return r};return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      ${lt()}
        let outputIndex = index / i32(workGroupSizeX);
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = getX(${n()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}},J2e=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      const TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${R2()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},Q2e=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=Tn(this.outputShape.length),t=e1e(this.newDim);return`
      ${lt()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function e1e(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let s=0;s<e.length;s++)n[e[s]]=`resRC.${Ya(s)}`;return n.join()}function xa(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let c=0;c<l.length;c++)l[c]=r.shape[a[c]];if(n.shouldExecuteOnCPU([r])){let p=o.tensorMap.get(r.dataId).values,d=G2e(p,r.shape,r.dtype,a,l);return n.makeTensorInfo(l,r.dtype,d)}if(r.shape.length===2&&v.arraysEqual(a,[1,0])){let c=new J2e(r.shape,a);return o.runWebGPUProgram(c,[r],r.dtype)}let u=new Q2e(r.shape,a);return o.runWebGPUProgram(u,[r],r.dtype)}var t1e={kernelName:jr,backendName:"webgpu",kernelFunc:xa};function n1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=xa({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let c=new tT(l.shape,o[0],"max"),p=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=n.runWebGPUProgram(c,[l],"int32",p);return u.forEach(h=>n.disposeData(h.dataId)),d}var s1e={kernelName:fo,backendName:"webgpu",kernelFunc:n1e};function r1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=xa({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let c=new tT(l.shape,o[0],"min"),p=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=n.runWebGPUProgram(c,[l],"int32",p);return u.forEach(h=>n.disposeData(h.dataId)),d}var a1e={kernelName:Ac,backendName:"webgpu",kernelFunc:r1e},nT=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${lt()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}},sT=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${lt()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function o1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1,c=T.computePool2DInfo(r.shape,a,o,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&v.arraysEqual(c.inShape,c.outShape))return Os({inputs:{x:r},backend:n});let p,d=[{type:"int32",data:[c.strideHeight,c.strideWidth]}];return c.filterHeight===1&&c.filterWidth===1?p=new sT(c):(p=new nT(c,"avg"),d.push({type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]})),n.runWebGPUProgram(p,[r],r.dtype,d)}var i1e={kernelName:mo,backendName:"webgpu",kernelFunc:o1e};function l1e(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return db({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var u1e={kernelName:go,backendName:"webgpu",kernelFunc:l1e},c1e=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Tn(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=Tn(this.rank),t=d1e(this.rank),n;return this.start.length===1?n=this.outputShape.map((r,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((r,a)=>`sourceLoc.${xy[a]} = uniforms.start[${a}] + coords.${xy[a]};`),`
      ${lt()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},xy=["x","y","z","w","u","v"];function d1e(e){if(e===1)return"sourceLoc";if(e<=6)return xy.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function gd(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=Ut.parseSliceParams(r,a,o);if(Ut.assertParamsValid(r,i,l),n.shouldExecuteOnCPU([r])||r.dtype==="string"){let p=n.tensorMap.get(r.dataId),d=z2e(p.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,d)}if(v.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);let u=new c1e(i,l),c=[{type:"int32",data:i}];return n.runWebGPUProgram(u,[r],r.dtype,c)}var p1e={kernelName:Ml,backendName:"webgpu",kernelFunc:gd},h1e=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((x,A)=>x*A),l=T.getReshaped(r.shape,a,i),u=T.getPermuted(l.length,a.length),c=T.getReshapedPermuted(r.shape,a,i),p=T.getSliceBeginCoords(o,a.length),d=T.getSliceSize(c,o,a.length),h=[],f=He({inputs:{x:r},backend:n,attrs:{shape:l}}),m=xa({inputs:{x:f},backend:n,attrs:{perm:u}}),g=He({inputs:{x:m},backend:n,attrs:{shape:c}}),y=gd({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>n.disposeData(x.dataId)),y},f1e={kernelName:ul,backendName:"webgpu",kernelFunc:h1e},rT=is({opType:Ze.NOT_EQUAL,dtype:"bool",cpuKernelImpl:D2e}),m1e={kernelName:Cl,backendName:"webgpu",kernelFunc:rT};function Vh(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Os({inputs:{x:r.complexTensorInfos.real},backend:n})}var g1e={kernelName:Xp,backendName:"webgpu",kernelFunc:Vh};function y1e(e,t){let n=new Wh(e.shape,Me.TO_INT),s=t.runWebGPUProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function by(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Os({inputs:{x:r},backend:n});let o=Wt(r.shape),i=by({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=md({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeData(i.dataId),l}if(r.dtype==="complex64"){let o=Vh({inputs:{input:r},backend:n}),i=by({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeData(o.dataId),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=Os({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return y1e(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),l=rT({inputs:{a:r,b:o},backend:n});return n.disposeData(o.dataId),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var A1e={kernelName:yo,backendName:"webgpu",kernelFunc:by},x1e=$n({opType:Me.CEIL,cpuKernelImpl:f2e}),b1e={kernelName:Ao,backendName:"webgpu",kernelFunc:x1e},v1e=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${lt()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},w1e=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${lt()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function k1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i,l=[{type:"float32",data:[a]},{type:"float32",data:[o]}];return v.sizeFromShape(r.shape)%4===0?i=new v1e(r.shape):i=new w1e(r.shape),n.runWebGPUProgram(i,[r],r.dtype,l)}var I1e={kernelName:va,backendName:"webgpu",kernelFunc:k1e},S1e=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`else if (yC < uniforms.offset${[r]}){ setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);let n=this.offsetLength,s=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${s})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${lt()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function D2(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Os({inputs:{x:r.complexTensorInfos.imag},backend:n})}var C1e={kernelName:Hp,backendName:"webgpu",kernelFunc:D2};function fp(e,t,n){let s=e[0].dtype;if(s==="complex64"){let f=e.map(A=>Vh({inputs:{input:A},backend:n})),m=e.map(A=>D2({inputs:{input:A},backend:n})),g=fp(f,t,n),y=fp(m,t,n),x=md({inputs:{real:g,imag:y},backend:n});return f.forEach(A=>n.disposeData(A.dataId)),m.forEach(A=>n.disposeData(A.dataId)),n.disposeData(g.dataId),n.disposeData(y.dataId),x}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let f=e.map(w=>{let I=v.sizeFromShape(w.shape.slice(t));return He({inputs:{x:w},backend:n,attrs:{shape:[-1,I]}})}),m=f.map(w=>({vals:n.readSync(w.dataId),shape:w.shape})),g=T.computeOutShape(f.map(w=>w.shape),1),y=f[0].shape[0]===1,x=m2e(m,g,s,y),A=T.computeOutShape(e.map(w=>w.shape),t),b=n.makeTensorInfo(A,s,x);return f.forEach(w=>n.disposeData(w.dataId)),b}let a=n.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>a){let f=[];for(let g=0;g<e.length;g+=a){let y=e.slice(g,g+a);f.push(fp(y,t,n))}let m=fp(f,t,n);for(let g of f)n.disposeData(g.dataId);return m}let{tensors2D:o,outShape:i}=T1e(e,t,n),l=o.map(f=>f.shape),u=new S1e(l),c=[],p=new Array(l.length-1);if(p.length>0){p[0]=l[0][1],c.push({type:"int32",data:[p[0]]});for(let f=1;f<p.length;f++)p[f]=p[f-1]+l[f][1],c.push({type:"int32",data:[p[f]]})}let d=n.runWebGPUProgram(u,o,o[0].dtype,c);o.forEach(f=>n.disposeData(f.dataId));let h=He({inputs:{x:d},backend:n,attrs:{shape:i}});return n.disposeData(d.dataId),h}function T1e(e,t,n){let s=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>He({inputs:{x:a},backend:n,attrs:{shape:[v.sizeFromShape(a.shape.slice(0,t)),v.sizeFromShape(a.shape.slice(t))]}})),outShape:s}}function aT(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(u=>u.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(u=>v.sizeFromShape(u.shape)>0);if(i.length===1)return Os({inputs:{x:i[0]},backend:n});let l=i.map(u=>u.shape);return T.assertParamsConsistent(l,a),fp(i,a,n)}var N1e={kernelName:cl,backendName:"webgpu",kernelFunc:aT};function E1e(e,t,n,s,r=!1,a=null,o=!1,i=4,l=4,u=4){let c=_=>{switch(_){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${_} is not supported.`)}},p=_=>{switch(_){case 1:return"return W[row * uniforms.wShape[3] + colIn];";case 4:return"return W[row * uniforms.wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${_} is not supported.`)}},d=e?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,h=e?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=e?"uniforms.xShape[1]":"uniforms.xShape[2]",m=e?"uniforms.xShape[2]":"uniforms.xShape[3]",g=e?"row":"col",y=e?"col":"row",x=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${y} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${y} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
      let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
      let xCh = ${y} % inChannels;
      var resData = ${tn(i)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${m}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(i)}
      }
      return resData;`,A=e?t&&s?`
      let col = colIn * ${i};
      ${x}`:`
      let col = colIn * ${i};
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${x}
      }
      return ${tn(i)}(0.0);`:s&&n?`
      let col = colIn * ${i};
      ${x}`:`
      let col = colIn * ${i};
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${x}
      }
      return ${tn(i)}(0.0);`,b=`${p(l)}`,w=tn(u),I=tn(e?i:l),k=tn(e?l:i);return`
      ${Ta(a,o,u===4,4)}
      fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${I} {
        ${e?A:b}
      }

      fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${k} {
        ${e?b:A}
      }

      fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${w}) {
        let col = colIn * ${u};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${h}
        ${hd(r,a)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var R1e=class{constructor(e,t,n,s,r=!1,a=null,o=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workGroupSize=ob(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=ib(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableTypes=["f32","vec4<f32>"]):(this.innerElementSize=4,this.variableTypes=["vec4<f32>","vec4<f32>"]),r&&(this.variableNames.push("bias"),this.variableTypes.push("vec4<f32>")),o&&(this.variableNames.push("preluActivationWeights"),this.variableTypes.push("vec4<f32>"))):(this.innerElementSize=this.elementsPerThread[0],r&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights")),this.addBias=r,this.activation=a,this.hasPreluActivationWeights=o,this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=s%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}`}getUserCode(){let e=this.isVec4?cb(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,this.innerElementSize,!this.isChannelsLast):ub(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner),t=this.isVec4?[this.isChannelsLast?this.innerElementSize:4,4,4]:[1,1,1];return`
    ${E1e(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}};function q7(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&n===1&&e[0]>1?[e[0],1]:null}function _1e({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=n.dataFormat==="channelsLast",u=!l,c=!1,p=l&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",d=[],h,f;if(p){let y=n.inHeight*n.inWidth*n.inChannels;h=He({inputs:{x:e},backend:s,attrs:{shape:[1,n.batchSize,y]}}),f=He({inputs:{x:t},backend:s,attrs:{shape:[1,y,n.outChannels]}})}else h=He({inputs:{x:e},backend:s,attrs:{shape:l?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),f=He({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});if(d.push(h),d.push(f),a!=null){let y=q7(a.shape,l);y!=null&&(a=He({inputs:{x:a},backend:s,attrs:{shape:y}}),d.push(a))}if(r!=null){let y=q7(r.shape,l);y!=null&&(r=He({inputs:{x:r},backend:s,attrs:{shape:y}}),d.push(r))}let m=db({a:l?h:f,b:l?f:h,transposeA:u,transposeB:c,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),g=He({inputs:{x:m},backend:s,attrs:{shape:n.outShape}});d.push(m);for(let y of d)s.disposeData(y.dataId);return g}function oT({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=r!=null,u=a!=null,c=n.dataFormat==="channelsLast";if(c&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID"||n.filterHeight===1&&n.filterWidth===1&&n.dilationHeight===1&&n.dilationWidth===1&&n.strideHeight===1&&n.strideWidth===1&&(n.padInfo.type==="SAME"||n.padInfo.type==="VALID"))return _1e({x:e,filter:t,convInfo:n,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});let d=c?n.outHeight*n.outWidth:n.outChannels,h=c?n.outChannels:n.outHeight*n.outWidth,f=n.filterHeight*n.filterWidth*n.inChannels,m=[n.padInfo.top,n.padInfo.left],g=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...m]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]},{type:"int32",data:[d]},{type:"int32",data:[h]},{type:"int32",data:[f]}],y=new R1e(n,d,h,f,l,i,u),x=[],A=[e,t];l&&(!c&&r.shape.length===1&&(r=He({inputs:{x:r},backend:s,attrs:{shape:[r.shape[0],1,1]}}),x.push(r)),A.push(r)),u&&(!c&&a.shape.length===1&&(a=He({inputs:{x:a},backend:s,attrs:{shape:[a.shape[0],1,1]}}),x.push(a)),A.push(a)),i==="leakyrelu"&&(g.push({type:"float32",data:[o]}),y.uniforms+=" alpha : f32,");let b=s.runWebGPUProgram(y,A,e.dtype,g);for(let w of x)s.disposeData(w.dataId);return b}function D1e(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=n,p=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!1,p);return oT({x:r,filter:a,convInfo:d,backend:s})}var $1e={kernelName:xo,backendName:"webgpu",kernelFunc:D1e};function P1e(e=4){let t=a=>{switch(a){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${a} is not supported.`)}},s=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${tn(e)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${tn(e)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${e}];`}
      }
      return ${tn(e)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${tn(e)} {
    let col = colIn * ${e};
    ${s}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${tn(e)} {
    let col = colIn * ${e};
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${t(e)}
    }
    return ${tn(e)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${tn(e)}) {
    let col = colIn * ${e};
    if (row < uniforms.dimAOuter && (col + ${e-1}) < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${e}] = value;
    }
  }`}var F1e=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=ob(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=ib(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.innerElementSize=4,this.variableTypes=["vec4<f32>","f32"]):this.innerElementSize=this.elementsPerThread[0],this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}_${this.innerElementSize}`}getUserCode(){let e=this.isVec4?cb(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,this.innerElementSize):ub(this.elementsPerThread,this.workGroupSize);return`
    ${P1e(this.isVec4?4:1)}
    ${e}
    `}},O1e=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${lt()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function M1e(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s,p=T.convertConv2DDataFormat(u),d=T.computeConv2DInfo(o,a.shape,i,1,l,c,!1,p),h=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}],f;if(j().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new O1e(d);else{f=new F1e(d);let m=d.inShape[1]*d.inShape[2],g=d.inShape[3],y=d.filterHeight*d.filterWidth*d.outChannels;h.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return n.runWebGPUProgram(f,[r,a],"float32",h)}var z1e={kernelName:bo,backendName:"webgpu",kernelFunc:M1e},L1e=$n({opType:Me.COS}),B1e={kernelName:vo,backendName:"webgpu",kernelFunc:L1e},W1e=$n({opType:Me.COSH}),V1e={kernelName:wo,backendName:"webgpu",kernelFunc:W1e},U1e=class{constructor(e,t,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workGroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,s,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,o,i]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${lt()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${o};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${i};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},G1e=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=s,c=new U1e(r.shape[3],a.shape,i,l),p=[{type:"float32",data:[u]}];return n.runWebGPUProgram(c,[r,a,o],"float32",p)},H1e={kernelName:pl,backendName:"webgpu",kernelFunc:G1e},Mp;(function(e){e.Prod="*",e.Sum="+"})(Mp||(Mp={}));var X7=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0;let r=128;this.workGroupSize=[r,1,1],this.outputShape=t,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=n,this.reverse=s,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op===Mp.Prod?"1.0":"0.0",n=this.exclusive?t:`getX(${K7(e,"coords",this.op)})`,s=this.outputShape[this.outputShape.length-1],r="",a="";return this.exclusive?(r=this.reverse?`end != ${s-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(r=this.reverse?`end + pow2 < ${s}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${lt()}
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${Z7(e,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${r}) {
           let idx = ${a};
           ${Z7(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${K7(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function K7(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Z7(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function iT(e,t,n,s,r,a){let o=t.shape.length,i=T.getAxesPermutation([s],o),l=t;i!=null&&(l=xa({inputs:{x:t},backend:n,attrs:{perm:i}}));let u=T.getInnerMostAxes(1,o)[0];if(u!==o-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);let c=l.shape[u],p=Os({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let h=new X7(e,l.shape,!1,a),f=p,m=[{type:"float32",data:[d]}];p=n.runWebGPUProgram(h,[p],p.dtype,m),n.disposeData(f.dataId)}if(r){let d=new X7(e,l.shape,r,a),h=p,f=[{type:"float32",data:[0]}];p=n.runWebGPUProgram(d,[p],p.dtype,f),n.disposeData(h.dataId)}if(i!=null){let d=T.getUndoAxesPermutation(i),h=xa({inputs:{x:p},backend:n,attrs:{perm:d}});return n.disposeData(p.dataId),n.disposeData(l.dataId),h}return p}function j1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return iT(Mp.Prod,r,n,a,o,i)}var q1e={kernelName:dl,backendName:"webgpu",kernelFunc:j1e};function X1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return iT(Mp.Sum,r,n,a,o,i)}var K1e={kernelName:ko,backendName:"webgpu",kernelFunc:X1e},Z1e=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${lt()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Y1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],u=o==="NHWC"?r.shape[2]:r.shape[3],c=o==="NHWC"?r.shape[3]:r.shape[1],p=l*a,d=u*a,h=c/(a*a),f=o==="NHWC"?[i,p,d,h]:[i,h,p,d],m=[{type:"int32",data:[a]}],g=new Z1e(f,o);return n.runWebGPUProgram(g,[r],r.dtype,m)}var J1e={kernelName:hl,backendName:"webgpu",kernelFunc:Y1e},Q1e=class{constructor(e,t,n,s=!1,r=null,a=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),s&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.addBias=s,this.activation=r,this.hasPreluActivation=a,this.filterHeight=t,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let e=this.filterWidth*this.filterHeight,t=this.workGroupSize[0]*this.workGroupSize[1]*this.workGroupSize[2],n=this.workGroupSize[1]+this.filterHeight-1,s=this.workGroupSize[0]+this.filterWidth-1;return`
      ${Ta(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${s}>, ${n}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${R2()}
      fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
              @builtin(global_invocation_id) GlobalId : vec3<u32>,
              @builtin(local_invocation_index) LocalIndex: u32,
              @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
        localId = LocalId;
        globalId = GlobalId;
        let localIndex = i32(LocalIndex);
        numWorkgroups = NumWorkgroups;
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pad;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workGroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${s}; inputCol = inputCol + ${this.workGroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = localIndex;
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${hd(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}},lT=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize,[4,4,1]),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}`}getUserCode(){let e=4+this.convInfo.filterWidth-1;return`
      ${Ta(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, row, col, channel);
        }
        return value;
      }
      ${R2()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = i32(globalId.z) / uniforms.outShape[1];
        let r = i32(globalId.z) % uniforms.outShape[1];
        let c = i32(globalId.y) * 4;
        let d1 = i32(globalId.x) * 4;
        let xRCCorner = vec2<i32>(r, c) - uniforms.pad;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          for (var i = 0; i < ${e}; i++)
          {
            xVals[i] = readX(batch, xR, xCCorner + i, d1);
          }
          for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
            let wValue = getW(wR, wC, d1, 0);
            dotProd[0] = dotProd[0] + xVals[0 + wC] * wValue;
            dotProd[1] = dotProd[1] + xVals[1 + wC] * wValue;
            dotProd[2] = dotProd[2] + xVals[2 + wC] * wValue;
            dotProd[3] = dotProd[3] + xVals[3 + wC] * wValue;
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${hd(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}},uT=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, stride : vec2<i32>, dilation : vec2<i32>,`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${Ta(this.activation,this.hasPreluActivation,!1,4)}

      ${fd()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.stride - uniforms.pad;
        let d2 = coords[${this.isChannelsLast?3:1}];
        let channelMul = uniforms.wShape[3];
        let d1 = d2 / channelMul;
        let q = d2 % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
        // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
        // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
        // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
        var value = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = ${e};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = ${e};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          }
          ${hd(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function ege(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s,p=T.convertConv2DDataFormat(l),d=u;d==null&&(d=[1,1]);let h=T.computeConv2DInfo(r.shape,a.shape,o,d,i,c,!0,p),f=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inHeight,h.inWidth]}],m=h.dataFormat==="channelsLast",g;return!m&&h.inHeight>16&&h.inWidth>16&&h.strideHeight===1&&h.strideWidth===1&&h.dilationWidth===1&&h.dilationHeight===1&&h.inChannels===h.outChannels?g=new Q1e(h.outShape,h.filterHeight,h.filterWidth):m&&h.inHeight>4&&h.inWidth>4&&h.strideHeight===1&&h.strideWidth===1&&h.inChannels===h.outChannels&&h.dilationHeight===1&&h.dilationWidth===1&&h.inChannels%4===0?g=new lT(h):(g=new uT(h),f.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]})),n.runWebGPUProgram(g,[r,a],r.dtype,f)}var tge={kernelName:Io,backendName:"webgpu",kernelFunc:ege},cT=is({opType:Ze.MUL,cpuKernelImpl:R2e,supportsComplex:!0}),nge={kernelName:Vo,backendName:"webgpu",kernelFunc:cT},sge=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=T.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${lt()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function Uh(e,t,n,s,r){let a=e.shape.length,o=[],i=v.parseAxisParam(t,e.shape),l=i,u=T.getAxesPermutation(l,a),c=e;u!=null&&(c=xa({inputs:{x:e},attrs:{perm:u},backend:r}),l=T.getInnerMostAxes(l.length,a),o.push(c)),T.assertAxesAreInnerMostDims(s,l,a);let[p,d]=T.computeOutAndReduceShapes(c.shape,l),h=p;n&&(h=T.expandShapeToKeepDim(p,i));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([c])){let m=r.tensorMap.get(c.dataId).values;switch(s){case"max":let g=T2e(m,v.sizeFromShape(d),h,e.dtype);f=r.makeTensorInfo(h,e.dtype,g);break;case"prod":let{outVals:y,outShape:x,outDtype:A}=$2e(c.shape,c.dtype,m,l);f=r.makeTensorInfo(x,A,y);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{let m=v.sizeFromShape(d),y=v.sizeFromShape(c.shape)/m,x={windowSize:m,inSize:m,batchSize:y,outSize:1},A=s==="mean"?"float32":rh(e.dtype),b=[{type:"int32",data:[m]}],w=new sge(x,s),I=r.runWebGPUProgram(w,[c],A,b);o.push(I),f=He({inputs:{x:I},attrs:{shape:h},backend:r})}return o.forEach(m=>r.disposeData(m.dataId)),f}function pb(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Uh(r,a,o,"sum",n)}var rge={kernelName:ti,backendName:"webgpu",kernelFunc:pb};function age(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,l,a);let{path:u,steps:c}=T.getEinsumComputePath(i,l),p=c.length,d=null,h=o.length,f=[];for(let m=0;m<p;++m){for(let g of c[m]){let{permutationIndices:y,expandDims:x}=T.getEinsumPermutation(h,l[g]),A;T.isIdentityPermutation(y)?A=a[g]:(A=xa({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(A.shape,b)||(A=He({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),d===null?d=A:(d=cT({inputs:{a:A,b:d},backend:n}),f.push(d))}m<p-1&&(u[m]>=0&&(d=pb({inputs:{x:d},backend:n,attrs:{axis:u[m]-(o.length-h),keepDims:!1}}),f.push(d)),h--)}for(let m of f)m!==d&&n.disposeData(m.dataId);return d}var oge={kernelName:Gp,backendName:"webgpu",kernelFunc:age},ige=$n({opType:Me.ELU}),lge={kernelName:Co,backendName:"webgpu",kernelFunc:ige},uge=is({opType:Ze.EQUAL,dtype:"bool",cpuKernelImpl:g2e}),cge={kernelName:fl,backendName:"webgpu",kernelFunc:uge},dT=$n({opType:Me.EXP,cpuKernelImpl:y2e,dtype:"float32"}),dge={kernelName:To,backendName:"webgpu",kernelFunc:dT};function vy(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(v.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),He({inputs:{x:a},backend:s,attrs:{shape:i}})}var pge={kernelName:ml,backendName:"webgpu",kernelFunc:vy},hge=$n({opType:Me.EXPM1,cpuKernelImpl:A2e}),fge={kernelName:gl,backendName:"webgpu",kernelFunc:hge},mge=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${lt()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},gge={kernelName:yl,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new mge(n.shape);return s.runWebGPUProgram(r,[n],n.dtype)}},yge=$n({opType:Me.FLOOR,cpuKernelImpl:x2e}),Age={kernelName:No,backendName:"webgpu",kernelFunc:yge},xge=is({opType:Ze.INT_DIV,dtype:"int32"}),bge={kernelName:Eo,backendName:"webgpu",kernelFunc:xge},vge=class{constructor(e,t,n=!1){this.isFromPixels=!0,this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize,[t,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${lt()}
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}},wge={kernelName:vp,backendName:"webgpu",kernelFunc:kge},zu,em=new Map;function kge(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&r instanceof OffscreenCanvas,u=typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap,[c,p]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[p,c,a],h=j().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&o,f=o||i;if(u||l||f){let x;if(h){let D=r;if(!em.has(D)||em.get(D).expired){let E={source:D};em.set(D,n.device.importExternalTexture(E))}x={width:c,height:p,format:null,usage:null,texture:em.get(D)}}else{f&&(zu==null&&(zu=document.createElement("canvas").getContext("2d")),zu.canvas.width=c,zu.canvas.height=p,zu.drawImage(r,0,0,c,p),r=zu.canvas);let D=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,E="rgba8unorm",P=n.textureManager.acquireTexture(d[1],d[0],E,D);n.queue.copyExternalImageToTexture({source:r},{texture:P},[d[1],d[0]]),x={width:c,height:p,format:E,usage:D,texture:P}}let A=v.sizeFromShape(d),b=v.computeStrides(d),w=new vge(d,a,h),I=[{type:"uint32",data:[A]},{type:"uint32",data:[a]},{type:"uint32",data:[...b]}],k=n.makeTensorInfo([p,c],"int32"),R=n.tensorMap.get(k.dataId);R.resourceInfo=x;let _=n.runWebGPUProgram(w,[k],"int32",I);return n.disposeData(k.dataId),_}let m=r.data,g=m;if(a!=null&&a!==4){g=new Uint8Array(r.width*r.height*a);let x=m.length,A=0;for(let b=0;b<x;b++)b%4<a&&(g[A++]=m[b])}let y=n.makeTensorInfo(d,"int32",new Int32Array(g));return n.uploadToGPU(y.dataId),y}var Ige=class{constructor(e,t,n,s,r){this.uniforms="varianceEpsilon : f32,",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset")),r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${lt()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},Sge={kernelName:Ro,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s,scale:r,offset:a,mean:o,variance:i}=e,{varianceEpsilon:l}=t,u=n,c=[s,o,i],p=null;a!=null&&(p=a.shape,c.push(a));let d=null;r!=null&&(d=r.shape,c.push(r));let h=new Ige(s.shape,o.shape,i.shape,p,d),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(h,c,s.dtype,f)}};function Cge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=T.convertConv2DDataFormat(c),g=T.computeConv2DInfo(r.shape,a.shape,l,p,u,d,!1,m);return oT({x:r,filter:a,convInfo:g,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:f,activation:h})}var Tge={kernelName:eo,backendName:"webgpu",kernelFunc:Cge};function Nge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=s,f=c;f==null&&(f=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let m=T.computeConv2DInfo(r.shape,a.shape,l,f,u,p,!0),g=[r,a],y=o!=null,x=i!=null;y&&g.push(o),x&&g.push(i);let A=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}],b;return m.inHeight>4&&m.inWidth>4&&m.strideHeight===1&&m.strideWidth===1&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?b=new lT(m,y,d,x):(b=new uT(m,y,d,x),A.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),d==="leakyrelu"&&(A.push({type:"float32",data:[h]}),b.uniforms+=" alpha : f32,"),n.runWebGPUProgram(b,g,"float32",A)}var Ege={kernelName:to,backendName:"webgpu",kernelFunc:Nge},Rge=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Tn(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${lt()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function _ge(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=v.sizeFromShape(s.shape),[l,u,c,p]=T.prepareAndValidate(s,r),d=He({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),h=He({inputs:{x:s},backend:n,attrs:{shape:[v.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let x=n.readSync(r.dataId),A=n.bufferSync(s),b=b2e(x,A,s.dtype,u,o,c,p,s.shape,i);return n.makeTensorInfo(l,s.dtype,b.values)}let f=new Rge(o,[u,c]),m=[{type:"int32",data:[o]},{type:"int32",data:p}],g=n.runWebGPUProgram(f,[h,d],h.dtype,m),y=He({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(d.dataId),n.disposeData(h.dataId),n.disposeData(g.dataId),y}var Dge={kernelName:xl,backendName:"webgpu",kernelFunc:_ge},$ge=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=Pge(this.aShape);return`
      ${lt()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function Pge(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let s=0;s<e.length;s++)s===2?n.push("indexZ"):n.push(`${t[s]}`);return n.join()}function pT(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],u=T.segment_util.collectGatherOpShapeInfo(r,a,l,i),c=v.sizeFromShape(a.shape),p=[],d=He({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=He({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(d),p.push(h);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,a])){let A=n.tensorMap.get(h.dataId).values,b=We(h.shape,h.dtype,A),I=n.tensorMap.get(d.dataId).values,k=We(d.shape,d.dtype,I),R=v2e(k,b,f);return p.forEach(_=>n.disposeData(_.dataId)),n.makeTensorInfo(u.outputShape,R.dtype,R.values)}let m=new $ge(d.shape,f),g=n.runWebGPUProgram(m,[d,h],d.dtype);p.push(g);let y=He({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach(x=>n.disposeData(x.dataId)),y}var Fge={kernelName:Al,backendName:"webgpu",kernelFunc:pT},Oge=is({opType:Ze.GREATER,cpuKernelImpl:k2e,dtype:"bool"}),Mge={kernelName:bl,backendName:"webgpu",kernelFunc:Oge},zge=is({opType:Ze.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:w2e}),Lge={kernelName:_o,backendName:"webgpu",kernelFunc:zge};function Bge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=[{type:"float32",data:[a]}],i=new Wh(r.shape,Me.LEAKYRELU);return i.uniforms="alpha : f32,",n.runWebGPUProgram(i,[r],"float32",o)}var Wge={kernelName:$o,backendName:"webgpu",kernelFunc:Bge},Vge=is({opType:Ze.LESS,dtype:"bool",cpuKernelImpl:S2e}),Uge={kernelName:vl,backendName:"webgpu",kernelFunc:Vge},Gge=is({opType:Ze.LESS_EQUAL,dtype:"bool",cpuKernelImpl:I2e}),Hge={kernelName:wl,backendName:"webgpu",kernelFunc:Gge},jge=$n({opType:Me.LOG,cpuKernelImpl:C2e}),qge={kernelName:Po,backendName:"webgpu",kernelFunc:jge},Xge=is({opType:Ze.LOGICAL_AND,dtype:"bool"}),Kge={kernelName:kl,backendName:"webgpu",kernelFunc:Xge},Zge=$n({opType:Me.LOGICAL_NOT}),Yge={kernelName:Il,backendName:"webgpu",kernelFunc:Zge};function hT(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s;return Uh(r,a,o,"max",n)}var Jge={kernelName:Fo,backendName:"webgpu",kernelFunc:hT},Qge=is({opType:Ze.MAX,cpuKernelImpl:N2e}),e3e={kernelName:Oo,backendName:"webgpu",kernelFunc:Qge};function t3e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1,c=T.computePool2DInfo(r.shape,a,o,u,i,l),p,d=[];if(c.filterHeight===1&&c.filterWidth===1){if(v.arraysEqual(c.inShape,c.outShape))return Os({inputs:{x:r},backend:n});p=new sT(c),d.push({type:"int32",data:[c.strideHeight,c.strideWidth]})}else p=new nT(c,"max"),d.push({type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]});return n.runWebGPUProgram(p,[r],r.dtype,d)}var n3e={kernelName:Mo,backendName:"webgpu",kernelFunc:t3e};function s3e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{keepDims:a,axis:o}=s;return Uh(r,o,a,"mean",n)}var r3e={kernelName:zo,backendName:"webgpu",kernelFunc:s3e};function a3e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Uh(r,a,o,"min",n)}var o3e={kernelName:Lo,backendName:"webgpu",kernelFunc:a3e},i3e=is({opType:Ze.MIN,cpuKernelImpl:E2e}),l3e={kernelName:Bo,backendName:"webgpu",kernelFunc:i3e},u3e=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,u)=>`uniforms.pad${u}[0]`).join(","),n=this.xShape.map((l,u)=>`uniforms.pad${u}[0] + uniforms.xShape${e>1?`[${u}]`:""}`).join(","),s=e===1?"start":"start[i]",r=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",o=Tn(e),i=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${lt()}
        if (index < uniforms.size) {
          let start = ${o}(${t});
          let end = ${o}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${r}) {
              ${a} = (${r} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${i}));
        }
      }
    `}},c3e={kernelName:Wo,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{paddings:r,mode:a}=t,o=n,i=r.map(c=>({type:"int32",data:[c[0],c[1]]})),l=new u3e(s.shape,r,a);return o.runWebGPUProgram(l,[s],s.dtype,i)}};function d3e(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.tensorMap.get(s.dataId),[o,i]=_2e(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r=new Wh(s.shape,Me.NEG);return n.runWebGPUProgram(r,[s],s.dtype)}var p3e={kernelName:Sl,backendName:"webgpu",kernelFunc:d3e};function h3e(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:p}=cr.nonMaxSuppressionV3Impl(u,c,o,i,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var f3e={kernelName:Tl,backendName:"webgpu",kernelFunc:h3e};function m3e(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),p=n.readSync(a.dataId),d=o,h=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=cr.nonMaxSuppressionV5Impl(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var g3e={kernelName:Nl,backendName:"webgpu",kernelFunc:m3e};function Vm(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=Vh({inputs:{input:s},backend:n}),a=Vm({inputs:{x:r},backend:n}),o=D2({inputs:{input:s},backend:n}),i=Vm({inputs:{x:o},backend:n}),l=md({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return iu({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var y3e={kernelName:jl,backendName:"webgpu",kernelFunc:Vm};function fT(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=Vh({inputs:{input:s},backend:n}),a=fT({inputs:{x:r},backend:n}),o=D2({inputs:{input:s},backend:n}),i=Vm({inputs:{x:o},backend:n}),l=md({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return iu({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var A3e={kernelName:El,backendName:"webgpu",kernelFunc:fT};function x3e(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return vy({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(c=>{v.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(c=>{let p=vy({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(p),p}),u=aT({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeData(c.dataId)),u}var b3e={kernelName:_l,backendName:"webgpu",kernelFunc:x3e},v3e=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,s)=>n[0]+e[s]+n[1]),this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=Tn(e),n=this.xShape.map((c,p)=>`uniforms.pad${p}[0]`).join(","),s=this.xShape.map((c,p)=>`uniforms.pad${p}[0] + uniforms.xShape${e>1?`[${p}]`:""}`).join(","),r=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${s})`:`${s}`,o=e>1?"any(outC < start)":"outC < start",i=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${lt()}
        if (index < uniforms.size) {
          let start = ${r};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${o} || ${i}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}},mT=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(a.every(u=>v.arraysEqual(u,[0,0])))return Os({inputs:{x:r},backend:n});if(v.sizeFromShape(r.shape)===0){let u=a.map((c,p)=>c[0]+r.shape[p]+c[1]);return iu({backend:n,attrs:{shape:u,value:o,dtype:r.dtype}})}let i=[{type:"float32",data:[o]}];a.map(u=>i.push({type:"int32",data:[u[0],u[1]]}));let l=new v3e(r.shape,a);return n.runWebGPUProgram(l,[r],r.dtype,i)},w3e={kernelName:Uo,backendName:"webgpu",kernelFunc:mT},k3e=is({opType:Ze.POW}),I3e={kernelName:Go,backendName:"webgpu",kernelFunc:k3e};function S3e(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=new Ay(Ze.PRELU,s.shape,r.shape);return n.runWebGPUProgram(a,[s,r],"float32")}var C3e={kernelName:Ho,backendName:"webgpu",kernelFunc:S3e};function T3e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Uh(r,a,o,"prod",n)}var N3e={kernelName:jo,backendName:"webgpu",kernelFunc:T3e},E3e=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=P2e(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},R3e={kernelName:$c,backendName:"webgpu",kernelFunc:E3e},gT=is({opType:Ze.DIV}),_3e={kernelName:So,backendName:"webgpu",kernelFunc:gT},D3e=$n({opType:Me.RELU}),$3e={kernelName:qo,backendName:"webgpu",kernelFunc:D3e},P3e=$n({opType:Me.RELU6}),F3e={kernelName:Zo,backendName:"webgpu",kernelFunc:P3e},O3e=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${lt()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function M3e(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,size:o,halfPixelCenters:i}=s,[l,u]=o,c=a&&l>1?1:0,p=a&&u>1?1:0,h=[{type:"float32",data:[c,p]},{type:"float32",data:[i?.5:0]}],f=new O3e(r.shape,l,u);return n.runWebGPUProgram(f,[r],"float32",h)}var z3e={kernelName:Ko,backendName:"webgpu",kernelFunc:M3e},L3e=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=s,this.shaderKey=`resizeNearest_${s}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${lt()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function B3e(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,c=a&&l>1?1:0,p=a&&u>1?1:0,h=[{type:"float32",data:[c,p]},{type:"float32",data:[a?.5:0]}],f=new L3e(r.shape,l,u,o);return n.runWebGPUProgram(f,[r],r.dtype,h)}var W3e={kernelName:Xo,backendName:"webgpu",kernelFunc:B3e},V3e=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${lt()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},U3e={kernelName:ql,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new V3e(s.shape,a),[u,c]=T.getImageCenter(o,s.shape[1],s.shape[2]),p=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof a=="number"?p.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):p.push({type:"float32",data:a}),i.runWebGPUProgram(l,[s],s.dtype,p)}},G3e=$n({opType:Me.RSQRT,cpuKernelImpl:F2e}),H3e={kernelName:Yo,backendName:"webgpu",kernelFunc:G3e},cm=class{constructor(e,t,n,s,r,a,o,i=!0){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=o,this.sumDupeIndices=i,this.dispatchLayout=at(e),this.dispatch=Ue(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${s}_${this.sliceDimGreaterThanOne}_${o}_${i}`;let l=Tn(r.length);this.uniforms=`sliceDim : i32, strides: ${l}, size: i32,`,this.updatesRank=s,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",s="",r="";this.dispatchLayout.x.length===1?(s="flattenedIndex",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(s="vec2<i32>(flattenedIndex, coords[1])",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let o=`getUpdates(${Array.from({length:this.updatesRank},(u,c)=>`coords[${c}]`).join(", ")})`,i=(u,c)=>{let p=`atomicAdd(${u}, bitcast<i32>(${c}))`;this.type==="float32"&&(p=`
          {
            var oldBits = 0;
            var newBits = bitcast<i32>(${c});
            loop {
              let info = atomicCompareExchangeWeak(${u}, oldBits, newBits);
              if (info.exchanged) {
                break;
              }
              oldBits = info.old_value;
              let oldValue = bitcast<f32>(oldBits);
              let newValue = oldValue + (${c});
              newBits = bitcast<i32>(newValue);
            }
          }
        `);let d=`atomicStore(${u}, bitcast<i32>(${c}));`;return this.sumDupeIndices?p:d};return`
    ${r}

      ${lt()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue =
              ${xp(this.type,!1)}(${o});
          let flatIndex = getOutputIndexFromCoords(${s});

          ${i("&result[flatIndex]","updateValue")};
        }
      }`}};function j3e(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=T.calculateShapes(a,r,o),d=[p/u,u];if(p===0)return n.makeTensorInfo(o,r.dtype);let h=He({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=He({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=f.dtype,g=iu({backend:n,attrs:{shape:d,value:0,dtype:m}}),y=v.sizeFromShape(f.shape),x=[{type:"int32",data:[i]},{type:"int32",data:c},{type:"int32",data:[y]}],A=new cm(f.shape,i,h.shape.length,f.shape.length,c,d,m),b=n.runWebGPUProgram(A,[f,h],m,x,g),w=He({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(b.dataId),w}var q3e={kernelName:Fl,backendName:"webgpu",kernelFunc:j3e},X3e=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let o=0;o<this.outputShape.length;o++)a.push(`${s[o]}`),o<this.cRank&&r.push(`${s[o]}`);e=r.join(),t=a.join()}return`
      ${lt()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function K3e(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new X3e(s.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(o,[s,r,a],Mn(r.dtype,a.dtype))}var Z3e={kernelName:Ol,backendName:"webgpu",kernelFunc:K3e},Y3e=$n({opType:Me.SIGMOID}),J3e={kernelName:Qo,backendName:"webgpu",kernelFunc:Y3e},Q3e=$n({opType:Me.SIN}),eye={kernelName:Jo,backendName:"webgpu",kernelFunc:Q3e},tye=$n({opType:Me.SINH}),nye={kernelName:zl,backendName:"webgpu",kernelFunc:tye},yT=is({opType:Ze.SUB,cpuKernelImpl:W2e,supportsComplex:!0}),sye={kernelName:ri,backendName:"webgpu",kernelFunc:yT};function rye(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=v.parseAxisParam([a],r.shape),i=hT({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=T.expandShapeToKeepDim(i.shape,o),u=He({inputs:{x:i},backend:n,attrs:{shape:l}}),c=yT({inputs:{a:r,b:u},backend:n}),p=dT({inputs:{x:c},backend:n}),d=pb({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),h=He({inputs:{x:d},backend:n,attrs:{shape:l}}),f=gT({inputs:{a:p,b:h},backend:n});return n.disposeData(i.dataId),n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(p.dataId),n.disposeData(d.dataId),n.disposeData(h.dataId),f}var aye={kernelName:ni,backendName:"webgpu",kernelFunc:rye},oye=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((y,x)=>y*x),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<r.shape.length;++y)l.push([0,0]);let u=[],c=mT({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),p=T.getReshaped(c.shape,a,i,!1),d=T.getPermuted(p.length,a.length,!1),h=T.getReshapedPermuted(c.shape,a,i,!1),f=He({inputs:{x:c},backend:n,attrs:{shape:p}}),m=xa({inputs:{x:f},backend:n,attrs:{perm:d}}),g=He({inputs:{x:m},backend:n,attrs:{shape:h}});return u.push(c),u.push(f),u.push(m),u.forEach(y=>n.disposeData(y.dataId)),g},iye={kernelName:Ll,backendName:"webgpu",kernelFunc:oye},lye=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=uye(this.rank,"uniforms.");return`
      ${lt()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function uye(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e;r++)s.push(`(${n[r]} % ${t}aShape[${r}])`);return s.join()}function AT(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(n.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let l=n.readSync(r.dataId),u=r.dtype==="string"?l.map(d=>v.decodeString(d)):l,c=We(r.shape,r.dtype,u),p=V2e(c,a);return n.makeTensorInfo(p.shape,p.dtype,p.values)}let o=new lye(r.shape,a);return n.runWebGPUProgram(o,[r],r.dtype)}var cye={kernelName:wa,backendName:"webgpu",kernelFunc:AT};function dye(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=T.calculateShapes(a,r,i),h=!1;if(a.dtype==="string"){let R=n.bufferSync(r),_=n.bufferSync(a),D=v.decodeString(n.readSync(o.dataId)[0]),E=O2e(R,_,i,d,c,u,l,p,D,h);return n.makeTensorInfo(i,E.dtype,E.values)}let f=[d/c,c],m=He({inputs:{x:r},backend:n,attrs:{shape:[u,l]}}),g=a.shape.length?He({inputs:{x:a},backend:n,attrs:{shape:[u,c]}}):Os({inputs:{x:a},backend:n}),y=g.dtype,x=n.makeTensorInfo([],y,v.makeZerosTypedArray(1,y)),A=He({inputs:{x:o},backend:n,attrs:{shape:Array(f.length).fill(1)}}),b=AT({inputs:{x:A},backend:n,attrs:{reps:f}}),w=v.sizeFromShape([u,c]),I=[{type:"int32",data:[l]},{type:"int32",data:p},{type:"int32",data:[w]}];switch(u){case 0:break;case 1:{let R=new cm([u,c],l,m.shape.length,g.shape.length,p,f,y,h);n.runWebGPUProgram(R,[g,m],y,I,b)}break;default:{let R=new cm([u,c],l,m.shape.length,x.shape.length,p,f,y,h);n.runWebGPUProgram(R,[x,m],y,I,b)}{let R=new cm([u,c],l,m.shape.length,g.shape.length,p,f,y);n.runWebGPUProgram(R,[g,m],y,I,b)}}let k=He({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeData(m.dataId),n.disposeData(g.dataId),n.disposeData(A.dataId),n.disposeData(x.dataId),n.disposeData(b.dataId),k}var pye={kernelName:Jp,backendName:"webgpu",kernelFunc:dye};function hye(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),u=r.shape.length,c=new Array(u).fill(0),p=r.shape.slice();return l.map(d=>{let h=[...p];h[i]=d;let f=gd({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});return c[i]+=d,f})}var fye={kernelName:Bl,backendName:"webgpu",kernelFunc:hye},mye=$n({opType:Me.SQRT}),gye={kernelName:ei,backendName:"webgpu",kernelFunc:mye},yye={kernelName:Lc,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t,r=new Wh(n.shape,Me.SQUARE);return s.runWebGPUProgram(r,[n],n.dtype)}},Aye=is({opType:Ze.SQUARED_DIFFERENCE}),xye={kernelName:si,backendName:"webgpu",kernelFunc:Aye},bye=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=Tn(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let s=0;t=this.outputShape.map((r,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${lt()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function vye(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=Ut.sliceInfo(r.shape,a,o,i,l,u,c,p,d),w;if(m)w=He({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let I=Ut.computeOutShape(x,A,b),k=gd({inputs:{x:r},backend:n,attrs:{begin:x,size:I}});w=He({inputs:{x:k},backend:n,attrs:{shape:f}}),n.disposeData(k.dataId)}else if(n.shouldExecuteOnCPU([r])){let k=n.readSync(r.dataId),R=We(r.shape,r.dtype,k),_=L2e(h,R,b,x);w=n.makeTensorInfo(f,r.dtype,_.values)}else{let k=new bye(h),R=[{type:"int32",data:x},{type:"int32",data:b}],_=n.runWebGPUProgram(k,[r],r.dtype,R);w=He({inputs:{x:_},backend:n,attrs:{shape:f}}),n.disposeData(_.dataId)}return w}var wye={kernelName:Wl,backendName:"webgpu",kernelFunc:vye};function kye(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:p}=t,d=n.readSync(c.dataId),h=n.readSync(p.dataId),[f,m]=B2e(d,h,r,a,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var Iye={kernelName:Bc,backendName:"webgpu",kernelFunc:kye},Sye=$n({opType:Me.TANH}),Cye={kernelName:ai,backendName:"webgpu",kernelFunc:Sye},Tye=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${lt()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},Nye=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${lt()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Lu(e,t){t!==null&&e.disposeData(t.dataId)}function Y7(e){let t=1;for(;t<e;)t*=2;return t}function Eye(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=r.shape,l=i[i.length-1];if(n.shouldExecuteOnCPU([r])){let w=n.readSync(r.dataId),[I,k]=U2e(w,i,r.dtype,a,o);return[n.makeTensorInfo(I.shape,I.dtype,I.values),n.makeTensorInfo(k.shape,k.dtype,k.values)]}if(a===0)return i[i.length-1]=0,[n.makeTensorInfo(i,r.dtype,[]),n.makeTensorInfo(i,"int32",[])];if(l===1)return[r,iu({attrs:{shape:i,dtype:"int32",value:0},backend:n})];let c=v.sizeFromShape(i)/l,p=He({inputs:{x:r},attrs:{shape:[c,l]},backend:n}),d=Y7(a),h=Y7(l),f=null,m=()=>f===null?[p,p]:[p,f],g=(w,I,k)=>{let R=m(),_=new Tye(k),E=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[w]},{type:"int32",data:[I]}],P=f;f=n.runWebGPUProgram(_,R,"int32",E),Lu(n,P)};for(let w=1;w<d;w*=2){let I=w*2;for(let k=w;k>=1;k/=2)g(I,k,[c,h])}for(let w=h;w>d;w/=2){let I=m(),k=new Nye([c,w/2]),_=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[d]}],D=f;f=n.runWebGPUProgram(k,I,"int32",_),Lu(n,D);let E=d/2,P=E*2;for(let C=E;C>=1;C/=2)g(P,C,f.shape)}let y=f;f=gd({inputs:{x:f},backend:n,attrs:{begin:0,size:[c,a]}}),Lu(n,y);let x=pT({inputs:{x:p,indices:f},backend:n,attrs:{axis:1,batchDims:1}});Lu(n,p);let A=i.slice(0,-1);A.push(a),y=f,f=He({inputs:{x:f},attrs:{shape:A},backend:n}),Lu(n,y);let b=x;return x=He({inputs:{x},attrs:{shape:A},backend:n}),Lu(n,b),[x,f]}var Rye={kernelName:Ul,backendName:"webgpu",kernelFunc:Eye},_ye=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=at(this.outputShape),this.dispatch=Ue(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${lt()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function Dye(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=s,[c,p,d,h]=r.shape,[f,m]=u!=null?u:[p,d],g=[c,f,m,h],y=new _ye(g),x=o==="nearest"?1:2,A;switch(i){case"constant":A=1;break;case"reflect":A=2;break;case"wrap":A=3;break;case"nearest":A=4;break;default:A=1;break}let b=[{type:"int32",data:[x]},{type:"int32",data:[A]},{type:"float32",data:[l]}];return n.runWebGPUProgram(y,[r,a],"float32",b)}var $ye={kernelName:Gl,backendName:"webgpu",kernelFunc:Dye};function Pye(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],u=new Array(i-1),c=0;for(let m=0;m<i;m++)m!==a&&(u[c++]=o.shape[m]);let p=[],d=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){d[a]=m;let g=gd({inputs:{x:o},backend:n,attrs:{begin:d,size:h}}),y=He({inputs:{x:g},backend:n,attrs:{shape:u}});f[m]=y,p.push(g)}return p.forEach(m=>n.disposeData(m.dataId)),f}var Fye={kernelName:Hl,backendName:"webgpu",kernelFunc:Pye},Oye=[c2e,j2e,X2e,Y2e,s1e,a1e,i1e,u1e,f1e,A1e,b1e,I1e,p2e,N1e,$1e,z1e,B1e,V1e,H1e,q1e,K1e,J1e,tge,oge,lge,cge,dge,pge,fge,i2e,gge,wge,Age,bge,Sge,Tge,Ege,Dge,Fge,Mge,Lge,d2e,C1e,Wge,Uge,Hge,qge,Kge,Yge,Jge,e3e,n3e,r3e,o3e,l3e,c3e,nge,p3e,f3e,g3e,m1e,A3e,b3e,w3e,I3e,C3e,N3e,R3e,g1e,_3e,$3e,F3e,l2e,z3e,W3e,U3e,H3e,q3e,Z3e,J3e,eye,nye,p1e,wye,Iye,aye,iye,pye,fye,gye,yye,xye,sye,rge,Cye,cye,Rye,$ye,t1e,Fye,y3e];for(let e of Oye)ur(e);var Mye=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let s=J7(e,t);if(this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.usedBuffers.has(s)||this.usedBuffers.set(s,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(s).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(s).shift();return this.usedBuffers.get(s).push(a),a}this.numBytesAllocated+=e;let r=this.device.createBuffer({size:e,usage:t,mappedAtCreation:n});return this.usedBuffers.get(s).push(r),r}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let s=J7(t,n);this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let r=this.usedBuffers.get(s),a=r.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},s=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function J7(e,t){return`${e}_${t}`}var zye=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,s){let r=e6(n),a=e*t*r,o=Q7(e,t,n,s);if(this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.usedTextures.has(o)||this.usedTextures.set(o,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(o).length>0){this.numFreeTextures--;let l=this.freeTextures.get(o).shift();return this.usedTextures.get(o).push(l),l}this.numBytesAllocated+=a;let i=this.device.createTexture({size:[e,t],format:n,usage:s});return this.usedTextures.get(o).push(i),i}releaseTexture(e,t,n,s,r){if(this.freeTextures.size===0)return;let a=Q7(t,n,s,r);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;let o=this.usedTextures.get(a),i=o.indexOf(e);if(i<0)throw new Error("Cannot release a texture that was never provided by this texture manager");o.splice(i,1);let l=e6(s),u=t*n*l;this.numBytesUsed-=u}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function Q7(e,t,n,s){return`${e}_${t}_${n}_${s}`}function e6(e){if(e==="rgba8unorm")return 16;throw new Error(`${e} is not supported!`)}var Lye=j().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),Bye=(e,t)=>{let n=e.limits.maxComputeWorkgroupsPerDimension,s=t.dispatchLayout,r=t.dispatch;if(r.every(o=>o<=n))return r;v.assert(r[0]>n&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let a=Math.ceil(Math.sqrt(r[0]));return a>n?(a=Math.ceil(Math.cbrt(r[0])),v.assert(a<=n,()=>"Total dispatch size exceeds WebGPU maximum."),[a,a,a]):[a,a,1]},$2=class extends pc{constructor(e,t=!1){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchNumberInEncoder=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,!lb())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new Mye(this.device),this.textureManager=new zye(this.device),this.tensorMap=new zp(this,nn()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),j().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return $2.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}disposeData(e,t=!1){if(this.tensorDataPendingDisposal.indexOf(e)>=0)return!1;if(!this.tensorMap.has(e))return!0;let n=this.tensorMap.get(e);if(this.decRef(e),!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDataPendingDisposal.push(e),!1;let{complexTensorInfos:s}=this.tensorMap.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.releaseResource(e),this.tensorMap.delete(e),!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let t=this.tensorMap.get(e);if(!(!t||!t.resourceInfo)){if("texture"in t.resourceInfo){let n=t.resourceInfo;n.texture instanceof GPUTexture&&this.textureManager.releaseTexture(n.texture,n.width,n.height,n.format,n.usage),n.texture=null}else{let n=t.resourceInfo;this.bufferManager.releaseBuffer(n.buffer,n.size,n.usage),n.buffer=null}t.resourceInfo=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.tensorMap.set(s,{dtype:n,shape:t,values:e,refCount:1}),s}move(e,t,n,s,r){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:s,shape:n,values:t,refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.size,e.usage)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,t){let n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=n.getMappedRange().slice(0);return n.unmap(),n!=null&&this.bufferManager.releaseBuffer(n,t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),j().getBool("WEBGPU_USE_PROFILE_TOOL")&&(v.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),s}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.releaseResource(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let s;if(t.dtype==="complex64"){let r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=r[0],o=r[1];s=T.mergeRealAndImagArrays(a,o)}else{let r=t.resourceInfo,a=await this.getBufferData(r.buffer,r.size);s=QC(a,t.dtype)}return this.convertAndCacheOnCPU(e,s),s}readToGPU(e){let t=this.tensorMap.get(e),{values:n,dtype:s,shape:r,resourceInfo:a}=t;if(s==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let o=a.size,i=this.bufferManager.acquireBuffer(o,a.usage);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a.buffer,0,i,0,o),this.submitQueue();let l=this.makeTensorInfo(r,s),u=nn().makeTensorFromTensorInfo(l),c=this.tensorMap.get(l.dataId);return c.resourceInfo={size:o,usage:this.defaultGpuBufferUsage(),buffer:i},{tensorRef:u,buffer:i,bufSize:o}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(s=>v.decodeString(s));return We(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return We(e.shape,e.dtype,t)}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=v.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=v.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},i=await Promise.all(r);return o.kernelMs=v.sum(i),o.getExtraProfileInfo=()=>i.map((l,u)=>({name:a[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}makeTensorInfo(e,t,n){return t==="string"&&n!=null&&n.length>0&&v.isString(n[0])&&(n=n.map(r=>v.encodeString(r))),{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);if("texture"in t.resourceInfo){let s=t.resourceInfo;return s.texture instanceof GPUExternalTexture?s.texture:s.texture.createView()}let n=t.resourceInfo;return{offset:0,size:n.size,buffer:n.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.resourceInfo)return;let n=JC(t.dtype)*v.sizeFromShape(t.shape),s=this.bufferManager.acquireBuffer(n,this.defaultGpuBufferUsage());if(t.resourceInfo={size:n,usage:this.defaultGpuBufferUsage(),buffer:s},t.values){let r=this.bufferManager.acquireUploadBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),a=r.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(a).set(t.values):new Float32Array(a).set(t.values),r.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(r,0,s,0,n);let o={size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:r};this.stagingPendingDisposal.push(o)}}makeUniforms(e){let t=0,n=0,s=[];e.forEach(i=>{i.data.length===0&&(i.data=[1]);let l;switch(i.data.length){case 1:l=4;break;case 2:l=8;break;case 3:l=16;break;case 4:l=16;break;case 5:l=16;break;case 6:l=16;break;default:v.assert(!1,()=>`Unsupported ${i.data.length}D shape`)}(n===5||n===6)&&(l=16),t=Math.ceil(t/l)*l,n=i.data.length,s.push(t),t+=i.data.length*4});let r=new ArrayBuffer(t);e.forEach((i,l)=>{let u=s[l];i.type==="int32"?new Int32Array(r,u,i.data.length).set(i.data):i.type==="uint32"?new Uint32Array(r,u,i.data.length).set(i.data):new Float32Array(r,u,i.data.length).set(i.data)});let a=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(a,0,r,0,t);let o={size:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:a};return this.uniformPendingDisposal.push(o),{offset:0,size:t,buffer:a}}runWebGPUProgram(e,t,n,s,r){if(r||(r=this.makeTensorInfo(e.outputShape,n)),v.sizeFromShape(r.shape)===0)return this.tensorMap.get(r.dataId).values=v.getTypedArrayFromDType(r.dtype,0),r;this.uploadToGPU(r.dataId),e.dispatch=Bye(this.device,e);let a=[],o=[];if(!e.isFromPixels){a.push({type:"float32",data:[NaN]}),o=t.concat(r).map(g=>g.shape);let f="int32";o.map(g=>{a.push({type:f,data:g})});let m=v.computeStrides(r.shape);if(a.push({type:f,data:m}),e.size){let g=v.sizeFromShape(e.outputShape);a.push({type:f,data:[e.isVec4?g/4:g]})}}let i=t.map((f,m)=>{if(f.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(f.dataId),{dtype:this.tensorMap.get(f.dataId).dtype,shape:f.shape,name:e.variableNames[m]}}),l=z0e(e,o,i,r),u;l in this.pipelineCache?u=this.pipelineCache[l]:(u=O0e(this.device,e,i,r),this.pipelineCache[l]=u),s&&(a=[...a,...s]);let c=[this.tensorToBinding(r),...t.map(f=>this.tensorToBinding(f)),this.makeUniforms(a)],p=this.device.createBindGroup({layout:u.getBindGroupLayout(0),entries:c.map((f,m)=>({binding:m,resource:f}))});this.ensureCommandEncoderReady();let d=this.getComputePass(),h=this.activeTimers!=null;return h&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,0),d.setPipeline(u),d.setBindGroup(0,p),d.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),h&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(f=>{this.commandQueueOwnedIds.add(f.dataId)}),this.commandQueueOwnedIds.add(r.dataId),j().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),h&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}async getTimeFromQuerySet(e){let t=this.bufferManager.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.bufferManager.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(n.getMappedRange()),r=Number(s[1]-s[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=Lye){return j().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).resourceInfo==null&&v.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}};$2.nextDataId=0;var xT={};Ge(xT,{WebGPUBackend:()=>$2,webgpu_util:()=>ZC});lb()&&Xl("webgpu",async()=>{j().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:j().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n=t.limits,s={},r=t.features.has("timestamp-query");s.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.maxStorageBufferBindingSize},r?s.requiredFeatures=["timestamp-query"]:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let a=await t.requestDevice(s);return new $2(a,r)},3);var Wye="3.19.0",Vye="3.19.0",Uye="3.19.0",Gye="3.19.0",Hye="3.19.0",jye="3.19.0",qye="3.19.0",Gh={tfjs:Wye,"tfjs-core":Vye,"tfjs-data":Uye,"tfjs-layers":Gye,"tfjs-converter":Hye,"tfjs-backend-webgl":jye,"tfjs-backend-wasm":qye};var bT=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`;var vT=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,wT=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,kT=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,IT=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,ST=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`;var hb=(e,t,n)=>{let s=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(s,(r,a)=>(n[a]=0,r))},fb=class{constructor(t,n,s){ge(this,"uniform",{});ge(this,"attribute",{});ge(this,"gl");ge(this,"id");ge(this,"compile",(t,n)=>{let s=this.gl.createShader(n);return s?(this.gl.shaderSource(s,t),this.gl.compileShader(s),this.gl.getShaderParameter(s,this.gl.COMPILE_STATUS)?s:(ae(`filter: gl compile failed: ${this.gl.getShaderInfoLog(s)||"unknown"}`),null)):(ae("filter: could not create shader"),null)});this.gl=t;let r=this.compile(n,this.gl.VERTEX_SHADER),a=this.compile(s,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),!(!r||!a)){if(!this.id){ae("filter: could not create webgl program");return}if(this.gl.attachShader(this.id,r),this.gl.attachShader(this.id,a),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){ae(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)||"unknown"}`);return}this.gl.useProgram(this.id),hb(n,"attribute",this.attribute);for(let o in this.attribute)this.attribute[o]=this.gl.getAttribLocation(this.id,o);hb(n,"uniform",this.uniform),hb(s,"uniform",this.uniform);for(let o in this.uniform)this.uniform[o]=this.gl.getUniformLocation(this.id,o)}}};function CT(){let e=0,t=null,n=!1,s=-1,r=[null,null],a=[],o=null,i=null,l=ls(100,100),u={},c={INTERMEDIATE:1},p=l.getContext("webgl");if(!p){ae("filter: cannot get webgl context");return}this.gl=p;function d(x,A){if(!(x===l.width&&A===l.height)){if(l.width=x,l.height=A,!o){let b=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);o=p.createBuffer(),p.bindBuffer(p.ARRAY_BUFFER,o),p.bufferData(p.ARRAY_BUFFER,b,p.STATIC_DRAW),p.pixelStorei(p.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}p.viewport(0,0,l.width,l.height),r=[null,null]}}function h(x,A){let b=p.createFramebuffer();p.bindFramebuffer(p.FRAMEBUFFER,b);let w=p.createRenderbuffer();p.bindRenderbuffer(p.RENDERBUFFER,w);let I=p.createTexture();return p.bindTexture(p.TEXTURE_2D,I),p.texImage2D(p.TEXTURE_2D,0,p.RGBA,x,A,0,p.RGBA,p.UNSIGNED_BYTE,null),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.LINEAR),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.LINEAR),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.framebufferTexture2D(p.FRAMEBUFFER,p.COLOR_ATTACHMENT0,p.TEXTURE_2D,I,0),p.bindTexture(p.TEXTURE_2D,null),p.bindFramebuffer(p.FRAMEBUFFER,null),{fbo:b,texture:I}}function f(x){return r[x]=r[x]||h(l.width,l.height),r[x]}function m(x=0){if(!i)return;let A=null,b=null,w=!1;e===0?A=t:A=f(s).texture||null,e++,n&&!(x&c.INTERMEDIATE)?(b=null,w=e%2===0):(s=(s+1)%2,b=f(s).fbo||null),p.bindTexture(p.TEXTURE_2D,A),p.bindFramebuffer(p.FRAMEBUFFER,b),p.uniform1f(i.uniform.flipY,w?-1:1),p.drawArrays(p.TRIANGLES,0,6)}function g(x){if(u[x])return i=u[x],p.useProgram((i?i.id:null)||null),i;if(i=new fb(p,bT,x),!i)return ae("filter: could not get webgl program"),null;let A=Float32Array.BYTES_PER_ELEMENT,b=4*A;return p.enableVertexAttribArray(i.attribute.pos),p.vertexAttribPointer(i.attribute.pos,2,p.FLOAT,!1,b,0*A),p.enableVertexAttribArray(i.attribute.uv),p.vertexAttribPointer(i.attribute.uv,2,p.FLOAT,!1,b,2*A),u[x]=i,i}let y={colorMatrix:x=>{let A=new Float32Array(x);A[4]/=255,A[9]/=255,A[14]/=255,A[19]/=255;let b=A[18]===1&&A[3]===0&&A[8]===0&&A[13]===0&&A[15]===0&&A[16]===0&&A[17]===0&&A[19]===0?wT:vT,w=g(b);!w||(p.uniform1fv(w.uniform.m,A),m())},brightness:x=>{let A=(x||0)+1;y.colorMatrix([A,0,0,0,0,0,A,0,0,0,0,0,A,0,0,0,0,0,1,0])},saturation:x=>{let A=(x||0)*2/3+1,b=(A-1)*-.5;y.colorMatrix([A,b,b,0,0,b,A,b,0,0,b,b,A,0,0,0,0,0,1,0])},desaturate:()=>{y.saturation(-1)},contrast:x=>{let A=(x||0)+1,b=-128*(A-1);y.colorMatrix([A,0,0,0,b,0,A,0,0,b,0,0,A,0,b,0,0,0,1,0])},negative:()=>{y.contrast(-2)},hue:x=>{x=(x||0)/180*Math.PI;let A=Math.cos(x),b=Math.sin(x),w=.213,I=.715,k=.072;y.colorMatrix([w+A*(1-w)+b*-w,I+A*-I+b*-I,k+A*-k+b*(1-k),0,0,w+A*-w+b*.143,I+A*(1-I)+b*.14,k+A*-k+b*-.283,0,0,w+A*-w+b*-(1-w),I+A*-I+b*I,k+A*(1-k)+b*k,0,0,0,0,0,1,0])},desaturateLuminance:()=>{y.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{y.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{y.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{y.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{y.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{y.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{y.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{y.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:x=>{let A=new Float32Array(x),b=1/l.width,w=1/l.height,I=g(ST);!I||(p.uniform1fv(I.uniform.m,A),p.uniform2f(I.uniform.px,b,w),m())},detectEdges:()=>{y.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{y.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{y.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:x=>{let A=x||1;y.convolution.call(this,[0,-1*A,0,-1*A,1+4*A,-1*A,0,-1*A,0])},emboss:x=>{let A=x||1;y.convolution.call(this,[-2*A,-1*A,0,-1*A,1,1*A,0,1*A,2*A])},blur:x=>{let A=x/7/l.width,b=x/7/l.height,w=g(IT);!w||(p.uniform2f(w.uniform.px,0,b),m(c.INTERMEDIATE),p.uniform2f(w.uniform.px,A,0),m())},pixelate:x=>{let A=x/l.width,b=x/l.height,w=g(kT);!w||(p.uniform2f(w.uniform.size,A,b),m())}};this.add=function(x){let A=Array.prototype.slice.call(arguments,1),b=y[x];a.push({func:b,args:A})},this.reset=function(){a=[]},this.get=function(){return a},this.apply=function(x){d(x.width,x.height),e=0,t||(t=p.createTexture()),p.bindTexture(p.TEXTURE_2D,t),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.NEAREST),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.NEAREST),p.texImage2D(p.TEXTURE_2D,0,p.RGBA,p.RGBA,p.UNSIGNED_BYTE,x);for(let A=0;A<a.length;A++){n=A===a.length-1;let b=a[A];b.func.apply(this,b.args||[])}return l},this.draw=function(x){return this.add("brightness",0),this.apply(x)}}async function P2(e){let t=e.shape.length===4?st(e):e,n=Kt(t,3,2),s=[ya(n[0]),ya(n[1]),ya(n[2])],r=[hn(n[0]),hn(n[1]),hn(n[2])],a=await Promise.all(r.map(h=>h.data())),o=.99*Math.max(a[0][0],a[1][0],a[2][0]),i=[me(n[0],s[0]),me(n[1],s[1]),me(n[2],s[2])],l=[me(r[0],s[0]),me(r[1],s[1]),me(r[2],s[2])],u=[fe(o,l[0]),fe(o,l[1]),fe(o,l[2])],c=[z(i[0],u[0]),z(i[1],u[1]),z(i[2],u[2])],p=an([c[0],c[1],c[2]],2),d=V(p,[1,t.shape[0],t.shape[1],3]);return J([...n,...s,...r,...i,...l,...u,...c,p,t]),d}var F2=3840,kn=null,In=null,yd=null,$t,Na={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function ls(e,t){let n;if(he.browser)if(he.worker){if(typeof OffscreenCanvas=="undefined")throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");n=new OffscreenCanvas(e,t)}else{if(typeof document=="undefined")throw new Error("canvas error: attempted to run in browser but DOM is not defined");n=document.createElement("canvas"),n.width=e,n.height=t}else typeof he.Canvas!="undefined"?n=new he.Canvas(e,t):typeof globalThis.Canvas!="undefined"&&(n=new globalThis.Canvas(e,t));return n}function O2(e,t){let n=t||ls(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}async function Ad(e,t,n=!0){var d,h;if(!e)return t.debug&&ae("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof nt)&&!(typeof Image!="undefined"&&e instanceof Image)&&!(typeof he.Canvas!="undefined"&&e instanceof he.Canvas)&&!(typeof globalThis.Canvas!="undefined"&&e instanceof globalThis.Canvas)&&!(typeof ImageData!="undefined"&&e instanceof ImageData)&&!(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)&&!(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)&&!(typeof HTMLMediaElement!="undefined"&&e instanceof HTMLMediaElement)&&!(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)&&!(typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement)&&!(typeof OffscreenCanvas!="undefined"&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof nt){let f=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(e.shape.length===3){if(e.shape[2]===3)f=Lt(e,0);else if(e.shape[2]===4){let m=di(e,[0,0,0],[-1,-1,3]);f=Lt(m,0),J(m)}}else e.shape.length===4&&(e.shape[3]===3?f=On(e):e.shape[3]===4&&(f=so(e,[0,0,0,0],[-1,-1,-1,3])));if(f==null||f.shape.length!==4||f.shape[0]!==1||f.shape[3]!==3)throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape.toString()}`);if(f.dtype==="int32"){let m=ye(f,"float32");J(f),f=m}return{tensor:f,canvas:t.filter.return?In:null}}if(typeof e.readyState!="undefined"&&e.readyState<=2)return t.debug&&ae("input stream is not ready"),{tensor:null,canvas:kn};let s=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,r=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!s||!r)return t.debug&&ae("cannot determine input dimensions"),{tensor:null,canvas:kn};let a=s,o=r;if(a>F2&&(a=F2,o=Math.trunc(a*r/s)),o>F2&&(o=F2,a=Math.trunc(o*s/r)),(((d=t.filter)==null?void 0:d.width)||0)>0?a=t.filter.width:(((h=t.filter)==null?void 0:h.height)||0)>0&&(a=s*((t.filter.height||0)/r)),(t.filter.height||0)>0?o=t.filter.height:(t.filter.width||0)>0&&(o=r*((t.filter.width||0)/s)),!a||!o)throw new Error("input error: cannot determine dimension");(!kn||kn.width!==a||kn.height!==o)&&(kn=ls(a,o));let i=kn.getContext("2d");if(typeof ImageData!="undefined"&&e instanceof ImageData?i.putImageData(e,0,0):t.filter.flip&&typeof i.translate!="undefined"?(i.translate(s,0),i.scale(-1,1),i.drawImage(e,0,0,s,r,0,0,kn.width,kn.height),i.setTransform(1,0,0,1,0,0)):i.drawImage(e,0,0,s,r,0,0,kn.width,kn.height),(!In||kn.width!==In.width||kn.height!==In.height)&&(In=ls(kn.width,kn.height)),t.filter.enabled&&he.webgl.supported?($t||($t=he.browser?new CT:null),he.filter=!!$t,!$t||!$t.add?(t.debug&&ae("input process error: cannot initialize filters"),he.webgl.supported=!1,t.filter.enabled=!1,O2(kn,In)):($t.reset(),t.filter.brightness!==0&&$t.add("brightness",t.filter.brightness),t.filter.contrast!==0&&$t.add("contrast",t.filter.contrast),t.filter.sharpness!==0&&$t.add("sharpen",t.filter.sharpness),t.filter.blur!==0&&$t.add("blur",t.filter.blur),t.filter.saturation!==0&&$t.add("saturation",t.filter.saturation),t.filter.hue!==0&&$t.add("hue",t.filter.hue),t.filter.negative&&$t.add("negative"),t.filter.sepia&&$t.add("sepia"),t.filter.vintage&&$t.add("brownie"),t.filter.sepia&&$t.add("sepia"),t.filter.kodachrome&&$t.add("kodachrome"),t.filter.technicolor&&$t.add("technicolor"),t.filter.polaroid&&$t.add("polaroid"),t.filter.pixelate!==0&&$t.add("pixelate",t.filter.pixelate),$t.get()>0?In=$t.apply(kn):In=$t.draw(kn))):(O2(kn,In),$t&&($t=null),he.filter=!!$t),!n)return{tensor:null,canvas:In};if(!In)throw new Error("canvas error: cannot create output");let l,u=3;if(typeof ImageData!="undefined"&&e instanceof ImageData||e.data&&e.width&&e.height)if(he.browser&&Ks)l=Ks?Ks.fromPixels(e):null;else{u=e.data.length/e.height/e.width;let f=new Uint8Array(e.data.buffer);l=ct(f,[e.height,e.width,u],"int32")}else if((!yd||In.width!==yd.width||In.height!==yd.height)&&(yd=ls(In.width,In.height)),Ks&&he.browser)t.backend==="webgl"||t.backend==="humangl"||t.backend==="webgpu"?l=Ks.fromPixels(In):(yd=O2(In),l=Ks.fromPixels(yd));else{let g=O2(In).getContext("2d").getImageData(0,0,a,o);u=g.data.length/a/o;let y=new Uint8Array(g.data.buffer);l=ct(y,[a,o,u])}if(u===4){let f=di(l,[0,0,0],[-1,-1,3]);J(l),l=f}if(!l)throw new Error("input error: cannot create tensor");let c=ye(l,"float32"),p=t.filter.equalization?await P2(c):Lt(c,0);return J([l,c]),{tensor:p,canvas:t.filter.return?In:null}}async function TT(e,t){let n=!1;if(e.cacheSensitivity===0||!t.shape||t.shape.length!==4||t.shape[1]>2048||t.shape[2]>2048)return n;if(!Na.inputTensor)Na.inputTensor=On(t);else if(Na.inputTensor.shape[1]!==t.shape[1]||Na.inputTensor.shape[2]!==t.shape[2])J(Na.inputTensor),Na.inputTensor=On(t);else{let s={};s.diff=me(t,Na.inputTensor),s.squared=z(s.diff,s.diff),s.sum=ke(s.squared);let a=(await s.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;J([Na.inputTensor,s.diff,s.squared,s.sum]),Na.inputTensor=On(t),n=a<=(e.cacheSensitivity||0)}return n}async function NT(e,t,n){let s={};if(!t||!n||t.shape.length!==4||t.shape.length!==n.shape.length)return e.debug||ae("invalid input tensor or tensor shapes do not match:",t.shape,n.shape),0;if(t.shape[0]!==1||n.shape[0]!==1||t.shape[3]!==3||n.shape[3]!==3)return e.debug||ae("input tensors must be of shape [1, height, width, 3]:",t.shape,n.shape),0;s.input1=On(t),s.input2=t.shape[1]!==n.shape[1]||t.shape[2]!==n.shape[2]?Se.resizeBilinear(n,[t.shape[1],t.shape[2]]):On(n),s.diff=me(s.input1,s.input2),s.squared=z(s.diff,s.diff),s.sum=ke(s.squared);let a=(await s.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return J([s.input1,s.input2,s.diff,s.squared,s.sum]),a}var mb=class{constructor(){ge(this,"browser");ge(this,"node");ge(this,"worker");ge(this,"platform","");ge(this,"agent","");ge(this,"backends",[]);ge(this,"initial");ge(this,"filter");ge(this,"tfjs");ge(this,"offscreen");ge(this,"perfadd",!1);ge(this,"tensorflow",{version:void 0,gpu:void 0});ge(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0});ge(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0});ge(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0});ge(this,"cpu",{model:void 0,flags:[]});ge(this,"kernels",[]);ge(this,"Canvas");ge(this,"Image");ge(this,"ImageData");if(this.browser=typeof navigator!="undefined",this.node=typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined",this.tfjs={version:Gh["tfjs-core"]},this.offscreen=typeof OffscreenCanvas!="undefined",this.initial=!0,this.worker=this.browser&&this.offscreen?typeof WorkerGlobalScope!="undefined":void 0,typeof navigator!="undefined"){let t=navigator.userAgent.match(/\(([^()]+)\)/g);if(t!=null&&t[0]){let n=t[0].match(/\(([^()]+)\)/g);this.platform=n!=null&&n[0]?n[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(t[0],""),this.platform[1]&&(this.agent=this.agent.replace(t[1],"")),this.agent=this.agent.replace(/  /g," ")}}else typeof process!="undefined"&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(nn().registryFactory),this.tensorflow={version:Bn().binding?Bn().binding.TF_Version:void 0,gpu:Bn().binding?Bn().binding.isUsingGpuDevice():void 0},this.wasm.supported=typeof WebAssembly!="undefined",this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&Ln()==="wasm"&&(this.wasm.simd=j().get("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=j().get("WASM_HAS_MULTITHREAD_SUPPORT"));let t=ls(100,100),n=t?t.getContext("webgl2"):void 0;if(this.webgl.supported=typeof n!="undefined",this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&(Ln()==="webgl"||Ln()==="humangl")){let s=Bn().gpgpu!=="undefined"?await Bn().getGPGPUContext().gl:null;s&&(this.webgl.version=s.getParameter(s.VERSION),this.webgl.renderer=s.getParameter(s.RENDERER))}this.webgpu.supported=this.browser&&typeof navigator.gpu!="undefined",this.webgpu.backend=this.backends.includes("webgpu");try{if(this.webgpu.supported){let s=await navigator.gpu.requestAdapter();this.webgpu.adapter=s?s.name:void 0}}catch(s){this.webgpu.supported=!1}try{this.kernels=Xr(Ln()).map(s=>s.kernelName.toLowerCase())}catch(s){}}updateCPU(){let t={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=t:Object.defineProperty(this,"cpu",{value:t})}},he=new mb;var gb={};la(gb,{age:()=>cAe,"anti-spoofing":()=>WAe,antispoof:()=>Yye,blazeface:()=>Jye,"blazeface-back":()=>dAe,"blazeface-front":()=>pAe,"blazepose-detect":()=>BAe,"blazepose-detector2d":()=>hAe,"blazepose-detector3d":()=>fAe,"blazepose-full":()=>mAe,"blazepose-heavy":()=>gAe,"blazepose-lite":()=>yAe,default:()=>e5e,efficientpose:()=>AAe,"efficientpose-i-lite":()=>VAe,"efficientpose-ii-lite":()=>UAe,"efficientpose-iv":()=>GAe,emotion:()=>Qye,faceboxes:()=>xAe,facemesh:()=>eAe,"facemesh-attention":()=>vAe,"facemesh-attention-alt":()=>bAe,"facemesh-detection-full":()=>wAe,"facemesh-detection-short":()=>kAe,"facemesh-orig":()=>IAe,faceres:()=>tAe,"faceres-deep":()=>SAe,gear:()=>CAe,gender:()=>NAe,"gender-ssrnet-imdb":()=>TAe,handdetect:()=>EAe,"handlandmark-full":()=>nAe,"handlandmark-lite":()=>RAe,"handlandmark-sparse":()=>_Ae,handskeleton:()=>DAe,handtrack:()=>sAe,"insightface-efficientnet-b0":()=>HAe,"insightface-ghostnet-strides1":()=>jAe,"insightface-ghostnet-strides2":()=>qAe,"insightface-mobilenet-emore":()=>XAe,"insightface-mobilenet-swish":()=>KAe,iris:()=>rAe,liveness:()=>aAe,"mb3-centernet":()=>oAe,meet:()=>$Ae,mobileface:()=>PAe,mobilefacenet:()=>FAe,models:()=>iAe,"movenet-lightning":()=>lAe,"movenet-multipose":()=>OAe,"movenet-thunder":()=>MAe,nanodet:()=>zAe,"nanodet-e":()=>ZAe,"nanodet-g":()=>YAe,"nanodet-m":()=>JAe,"nanodet-t":()=>QAe,posenet:()=>LAe,selfie:()=>uAe});var Yye=853098,Jye=538928,Qye=820516,eAe=1477958,tAe=6978814,nAe=5431368,sAe=2964837,rAe=2599092,aAe=592976,oAe=4030290,iAe=0,lAe=4650216,uAe=212886,cAe=161240,dAe=538928,pAe=402048,hAe=7499400,fAe=5928856,mAe=6338290,gAe=27501554,yAe=2725490,AAe=5651240,xAe=2013002,bAe=2387598,vAe=2382414,wAe=1026192,kAe=201268,IAe=2955780,SAe=13957620,CAe=1498916,TAe=161236,NAe=201808,EAe=3515612,RAe=2023432,_Ae=5286322,DAe=5502280,$Ae=372228,PAe=2183192,FAe=5171976,OAe=9448838,MAe=12477112,zAe=7574558,LAe=5032780,BAe=5928804,WAe=853098,VAe=2269064,UAe=5651240,GAe=25643252,HAe=13013224,jAe=8093408,qAe=8049584,XAe=6938536,KAe=12168584,ZAe=12319156,YAe=7574558,JAe=1887474,QAe=5294216,e5e={antispoof:Yye,blazeface:Jye,emotion:Qye,facemesh:eAe,faceres:tAe,"handlandmark-full":nAe,handtrack:sAe,iris:rAe,liveness:aAe,"mb3-centernet":oAe,models:iAe,"movenet-lightning":lAe,selfie:uAe,age:cAe,"blazeface-back":dAe,"blazeface-front":pAe,"blazepose-detector2d":hAe,"blazepose-detector3d":fAe,"blazepose-full":mAe,"blazepose-heavy":gAe,"blazepose-lite":yAe,efficientpose:AAe,faceboxes:xAe,"facemesh-attention-alt":bAe,"facemesh-attention":vAe,"facemesh-detection-full":wAe,"facemesh-detection-short":kAe,"facemesh-orig":IAe,"faceres-deep":SAe,gear:CAe,"gender-ssrnet-imdb":TAe,gender:NAe,handdetect:EAe,"handlandmark-lite":RAe,"handlandmark-sparse":_Ae,handskeleton:DAe,meet:$Ae,mobileface:PAe,mobilefacenet:FAe,"movenet-multipose":OAe,"movenet-thunder":MAe,nanodet:zAe,posenet:LAe,"blazepose-detect":BAe,"anti-spoofing":WAe,"efficientpose-i-lite":VAe,"efficientpose-ii-lite":UAe,"efficientpose-iv":GAe,"insightface-efficientnet-b0":HAe,"insightface-ghostnet-strides1":jAe,"insightface-ghostnet-strides2":qAe,"insightface-mobilenet-emore":XAe,"insightface-mobilenet-swish":KAe,"nanodet-e":ZAe,"nanodet-g":YAe,"nanodet-m":JAe,"nanodet-t":QAe};var i1={};la(i1,{Models:()=>tf,getModelStats:()=>E4,load:()=>R4,reset:()=>o1,validate:()=>b1,validateModel:()=>Rd});var hr,yb=[],t5e=["white","black","asian","indian","other"],n5e=[15,23,28,35.5,45.5,55.5,65],ET=0,RT=0,Ab=Number.MAX_SAFE_INTEGER;async function _T(e){var t;return he.initial&&(hr=null),hr?e.debug&&ae("cached model:",hr.modelUrl):hr=await je((t=e.face.gear)==null?void 0:t.modelPath),hr}async function xb(e,t,n,s){var o,i;if(!hr)return{age:0,gender:"unknown",genderScore:0,race:[]};let r=Ab<(((o=t.face.gear)==null?void 0:o.skipFrames)||0),a=(((i=t.face.gear)==null?void 0:i.skipTime)||0)>ie()-RT;return t.skipAllowed&&a&&r&&ET===s&&yb[n]?(Ab++,yb[n]):(Ab=0,new Promise(async l=>{var y,x;if(!(hr!=null&&hr.inputs[0].shape))return;let u={},c=[[0,.1,.9,.9]];u.resize=Se.cropAndResize(e,c,[0],[hr.inputs[0].shape[2],hr.inputs[0].shape[1]]);let p={age:0,gender:"unknown",genderScore:0,race:[]};(y=t.face.gear)!=null&&y.enabled&&([u.age,u.gender,u.race]=hr.execute(u.resize,["age_output","gender_output","race_output"]));let d=await u.gender.data();p.gender=d[0]>d[1]?"male":"female",p.genderScore=Math.round(100*(d[0]>d[1]?d[0]:d[1]))/100;let h=await u.race.data();for(let A=0;A<h.length;A++)h[A]>(((x=t.face.gear)==null?void 0:x.minConfidence)||.2)&&p.race.push({score:Math.round(100*h[A])/100,race:t5e[A]});p.race.sort((A,b)=>b.score-A.score);let m=Array.from(await u.age.data()).map((A,b)=>[n5e[b],A]).sort((A,b)=>b[1]-A[1]),g=m[0][0];for(let A=1;A<m.length;A++)g+=m[A][1]*(m[A][0]-g);p.age=Math.round(10*g)/10,Object.keys(u).forEach(A=>J(u[A])),yb[n]=p,ET=s,RT=ie(),l(p)}))}var rt={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};function $T(){rt.tf255=Ce(255,"float32"),rt.tf1=Ce(1,"float32"),rt.tf2=Ce(2,"float32"),rt.tf05=Ce(.5,"float32"),rt.tf127=Ce(127.5,"float32"),rt.rgb=Pt([.2989,.587,.114],"float32")}var Ms,M2=[],PT=0,FT=0,bb=Number.MAX_SAFE_INTEGER;async function OT(e){return he.initial&&(Ms=null),Ms?e.debug&&ae("cached model:",Ms.modelUrl):Ms=await je(e.face.ssrnet.modelPathAge),Ms}async function vb(e,t,n,s){var o,i,l,u;if(!Ms)return{age:0};let r=bb<(((o=t.face.ssrnet)==null?void 0:o.skipFrames)||0),a=(((i=t.face.ssrnet)==null?void 0:i.skipTime)||0)>ie()-FT;return t.skipAllowed&&r&&a&&PT===s&&((l=M2[n])==null?void 0:l.age)&&((u=M2[n])==null?void 0:u.age)>0?(bb++,M2[n]):(bb=0,new Promise(async c=>{var h;if(!(Ms!=null&&Ms.inputs)||!Ms.inputs[0]||!Ms.inputs[0].shape)return;let p={};p.resize=Se.resizeBilinear(e,[Ms.inputs[0].shape[2],Ms.inputs[0].shape[1]],!1),p.enhance=z(p.resize,rt.tf255);let d={age:0};if((h=t.face.ssrnet)!=null&&h.enabled&&(p.age=Ms.execute(p.enhance)),p.age){let f=await p.age.data();d.age=Math.trunc(10*f[0])/10}Object.keys(p).forEach(f=>J(p[f])),M2[n]=d,PT=s,FT=ie(),c(d)}))}var fr,z2=[],zT=0,LT=0,wb=Number.MAX_SAFE_INTEGER,kb=[.2989,.587,.114];async function BT(e){var t;return he.initial&&(fr=null),fr?e.debug&&ae("cached model:",fr.modelUrl):fr=await je((t=e.face.ssrnet)==null?void 0:t.modelPathGender),fr}async function Ib(e,t,n,s){var o,i,l,u;if(!fr)return{gender:"unknown",genderScore:0};let r=wb<(((o=t.face.ssrnet)==null?void 0:o.skipFrames)||0),a=(((i=t.face.ssrnet)==null?void 0:i.skipTime)||0)>ie()-LT;return t.skipAllowed&&r&&a&&zT===s&&((l=z2[n])==null?void 0:l.gender)&&((u=z2[n])==null?void 0:u.genderScore)>0?(wb++,z2[n]):(wb=0,new Promise(async c=>{var f;if(!(fr!=null&&fr.inputs[0].shape))return;let p={};p.resize=Se.resizeBilinear(e,[fr.inputs[0].shape[2],fr.inputs[0].shape[1]],!1),p.enhance=Z(()=>{let[m,g,y]=Kt(p.resize,3,3),x=z(m,kb[0]),A=z(g,kb[1]),b=z(y,kb[2]),w=y0([x,A,b]);return z(me(w,rt.tf05),2)});let d={gender:"unknown",genderScore:0};(f=t.face.ssrnet)!=null&&f.enabled&&(p.gender=fr.execute(p.enhance));let h=await p.gender.data();d.gender=h[0]>h[1]?"female":"male",d.genderScore=h[0]>h[1]?Math.trunc(100*h[0])/100:Math.trunc(100*h[1])/100,Object.keys(p).forEach(m=>J(p[m])),z2[n]=d,zT=s,LT=ie(),c(d)}))}var Wn,L2=[],Sb=Number.MAX_SAFE_INTEGER,VT=0,UT=0;async function GT(e){var t;return he.initial&&(Wn=null),Wn?e.debug&&ae("cached model:",Wn.modelUrl):Wn=await je((t=e.face.antispoof)==null?void 0:t.modelPath),Wn}async function Cb(e,t,n,s){var o,i;if(!Wn)return 0;let r=(((o=t.face.antispoof)==null?void 0:o.skipTime)||0)>ie()-UT,a=Sb<(((i=t.face.antispoof)==null?void 0:i.skipFrames)||0);return t.skipAllowed&&r&&a&&VT===s&&L2[n]?(Sb++,L2[n]):(Sb=0,new Promise(async l=>{let u=Se.resizeBilinear(e,[Wn!=null&&Wn.inputs[0].shape?Wn.inputs[0].shape[2]:0,Wn!=null&&Wn.inputs[0].shape?Wn.inputs[0].shape[1]:0],!1),c=Wn==null?void 0:Wn.execute(u),p=(await c.data())[0];L2[n]=Math.round(100*p)/100,VT=s,UT=ie(),J([u,c]),l(L2[n])}))}var mr={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[185,40,39,37,0,267,269,270,409],lipsLowerOuter:[61,146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[191,80,81,82,13,312,311,310,415],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],lipsLowerSemiOuter:[76,77,90,180,85,16,315,404,320,307,306],lipsUpperSemiOuter:[184,74,73,72,11,302,303,304,408],lipsLowerSemiInner:[62,96,89,179,86,15,316,403,319,325,292],lipsUpperSemiInner:[183,42,41,38,12,268,271,272,407],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},Tb={count:468,mouth:13,symmetryLine:[13,mr.midwayBetweenEyes[0]]},lu={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},Nb=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}],jh=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],uu=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255];var r5e=[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178],a5e=[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152],o5e=[33,133,362,263,1,78,308],uke=r5e.map(e=>jh[e]),cke=a5e.map(e=>jh[e]),dke=o5e.map(e=>jh[e]);function mi(e){let t=e.map(n=>n[0]);return t.push(e[e.length-1][1]),t}var i5e=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],l5e=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],u5e=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],c5e=[[474,475],[475,476],[476,477],[477,474]],d5e=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],p5e=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],h5e=[[469,470],[470,471],[471,472],[472,469]],f5e=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],pke={lips:mi(i5e),leftEye:mi(l5e),leftEyebrow:mi(u5e),leftIris:mi(c5e),rightEye:mi(d5e),rightEyebrow:mi(p5e),rightIris:mi(h5e),faceOval:mi(f5e)};var xd=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],B2=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],W2=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],V2=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],XT=(e,t)=>{let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]];return{startPoint:n,endPoint:s,landmarks:e.landmarks,confidence:e.confidence}},Rb=(e,t,n)=>{let s=t.shape[1],r=t.shape[2],a=[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r],o=Se.cropAndResize(t,[a],[0],n),i=fe(o,rt.tf255);return J(o),i},U2=(e,t)=>{let n=B2(e),s=xd(e),r=[t*s[0]/2,t*s[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],landmarks:e.landmarks,confidence:e.confidence}},G2=e=>{let t=B2(e),n=xd(e),s=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-s),Math.round(t[1]-s)],endPoint:[Math.round(t[0]+s),Math.round(t[1]+s)],landmarks:e.landmarks,confidence:e.confidence}},KT=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}},_b=[[1,0,0],[0,1,0],[0,0,1]],m5e=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),g5e=(e,t)=>m5e(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]));var jT=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],cu=(e,t)=>{let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n},y5e=(e,t)=>{let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n},qT=(e,t)=>{let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(cu(e[r],y5e(t,a)))}return n},ZT=(e,t)=>{let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=jT(t[0],t[1]),o=qT(a,r),i=jT(-t[0],-t[1]);return qT(o,i)},A5e=e=>{let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-cu(t[0],n),-cu(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]},x5e=(e,t)=>[cu(e,t[0]),cu(e,t[1])];function YT(e){let t=e===192?{strides:[4],anchors:[1]}:{strides:[e/16,e/8],anchors:[2,6]},n=[];for(let s=0;s<t.strides.length;s++){let r=t.strides[s],a=Math.floor((e+r-1)/r),o=Math.floor((e+r-1)/r),i=t.anchors[s];for(let l=0;l<a;l++){let u=r*(l+.5);for(let c=0;c<o;c++){let p=r*(c+.5);for(let d=0;d<i;d++)n.push([p,u])}}}return n}function JT(e,t,n,s,r){let a=xd(t),o=e.map(h=>[a[0]/r*(h[0]-r/2),a[1]/r*(h[1]-r/2),h[2]||0]),i=n&&n!==0&&Math.abs(n)>.2,l=i?ZT(n,[0,0]):_b,u=i?o.map(h=>[...x5e(h,l),h[2]]):o,c=i?A5e(s):_b,p=B2(t),d=[cu(p,c[0]),cu(p,c[1])];return u.map(h=>[Math.trunc(h[0]+d[0]),Math.trunc(h[1]+d[1]),Math.trunc(h[2]||0)])}function QT(e,t,n,s){let r=t.landmarks.length>=Tb.count?Tb.symmetryLine:lu.symmetryLine,a=0,o=_b,i;if(e&&he.kernels.includes("rotatewithoffset"))if(a=g5e(t.landmarks[r[0]],t.landmarks[r[1]]),a&&a!==0&&Math.abs(a)>.2){let u=B2(t),c=[u[0]/n.shape[2],u[1]/n.shape[1]],p=Se.rotateWithOffset(n,a,0,c);o=ZT(-a,u),i=Rb(t,p,[s,s]),J(p)}else i=Rb(t,n,[s,s]);else i=Rb(t,n,[s,s]);return[a,o,i]}var b5e=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...n)+(Math.max(...n)-Math.min(...n))/2]},eN=(e,t)=>{let n=b5e(e),s=xd(t);return{startPoint:[n[0]-s[0]/2,n[1]-s[1]/2],endPoint:[n[0]+s[0]/2,n[1]+s[1]/2]}};var tN=6,v5e=1.4,ta,nN=null,gi=0,qh=null,bd=()=>gi;async function sN(e){var t;return he.initial&&(ta=null),ta?e.debug&&ae("cached model:",ta.modelUrl):ta=await je((t=e.face.detector)==null?void 0:t.modelPath),gi=ta.inputs[0].shape?ta.inputs[0].shape[2]:0,qh=Ce(gi,"int32"),nN=ar(YT(gi)),ta}function w5e(e){let t={};t.boxStarts=ze(e,[0,1],[-1,2]),t.centers=ue(t.boxStarts,nN),t.boxSizes=ze(e,[0,3],[-1,2]),t.boxSizesNormalized=fe(t.boxSizes,qh),t.centersNormalized=fe(t.centers,qh),t.halfBoxSize=fe(t.boxSizesNormalized,rt.tf2),t.starts=me(t.centersNormalized,t.halfBoxSize),t.ends=ue(t.centersNormalized,t.halfBoxSize),t.startNormalized=z(t.starts,qh),t.endNormalized=z(t.ends,qh);let n=Zl([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(s=>J(t[s])),n}async function rN(e,t){var i,l,u,c;if(!e||e.isDisposedInternal||e.shape.length!==4||e.shape[1]<1||e.shape[2]<1)return[];let n={};n.resized=Se.resizeBilinear(e,[gi,gi]),n.div=fe(n.resized,rt.tf127),n.normalized=me(n.div,rt.tf05);let s=ta==null?void 0:ta.execute(n.normalized);if(Array.isArray(s)&&s.length>2){let p=s.sort((d,h)=>d.size-h.size);n.concat384=St([p[0],p[2]],2),n.concat512=St([p[1],p[3]],2),n.concat=St([n.concat512,n.concat384],1),n.batch=st(n.concat,0)}else Array.isArray(s)?n.batch=st(s[0]):n.batch=st(s);J(s),n.boxes=w5e(n.batch),n.logits=ze(n.batch,[0,0],[-1,1]),n.sigmoid=Cn(n.logits),n.scores=st(n.sigmoid),n.nms=await Se.nonMaxSuppressionAsync(n.boxes,n.scores,((i=t.face.detector)==null?void 0:i.maxDetected)||0,((l=t.face.detector)==null?void 0:l.iouThreshold)||0,((u=t.face.detector)==null?void 0:u.minConfidence)||0);let r=await n.nms.array(),a=[],o=await n.scores.data();for(let p=0;p<r.length;p++){let d=o[r[p]];if(d>(((c=t.face.detector)==null?void 0:c.minConfidence)||0)){let h={};h.bbox=ze(n.boxes,[r[p],0],[1,-1]),h.slice=ze(n.batch,[r[p],tN-1],[1,-1]),h.squeeze=st(h.slice),h.landmarks=V(h.squeeze,[tN,-1]);let f=await h.bbox.data(),m={startPoint:[f[0],f[1]],endPoint:[f[2],f[3]],landmarks:await h.landmarks.array(),confidence:d},g=XT(m,[(e.shape[2]||0)/gi,(e.shape[1]||0)/gi]),y=U2(g,t.face.scale||v5e),x=G2(y);a.push(x),Object.keys(h).forEach(A=>J(h[A]))}}return Object.keys(n).forEach(p=>J(n[p])),a}var H2={};la(H2,{connected:()=>Pb,kpt:()=>$b});var $b=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],Pb={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]};var oN=224,k5e,I5e=5,j2=[8,16,32,32,32];function iN(){let e=[],t=0;for(;t<I5e;){let n=0,s=t;for(;s<j2.length&&j2[s]===j2[t];)n+=2,s++;let r=j2[t],a=Math.ceil(oN/r),o=Math.ceil(oN/r);for(let i=0;i<a;++i)for(let l=0;l<o;++l)for(let u=0;u<n;++u)e.push({x:(l+.5)/o,y:(i+.5)/a});t=s}k5e={x:Pt(e.map(n=>n.x)),y:Pt(e.map(n=>n.y))}}function Ea(e,t=[1,1]){let n=[e.map(i=>i[0]),e.map(i=>i[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[s[0],s[1],r[0]-s[0],r[1]-s[1]],o=[a[0]/t[0],a[1]/t[1],a[2]/t[0],a[3]/t[1]];return{box:a,boxRaw:o}}function lN(e,t=[1,1]){let n=[e.map(u=>u[0]),e.map(u=>u[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[(s[0]+r[0])/2,(s[1]+r[1])/2],o=Math.max(a[0]-s[0],a[1]-s[1],-a[0]+r[0],-a[1]+r[1]),i=[Math.trunc(a[0]-o),Math.trunc(a[1]-o),Math.trunc(2*o),Math.trunc(2*o)],l=[i[0]/t[0],i[1]/t[1],i[2]/t[0],i[3]/t[1]];return{box:i,boxRaw:l}}function q2(e,t){let n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}var dN={initial:!0},zs={detector:null,landmarks:null},vd={detector:[224,224],landmarks:[256,256]},Fb=Number.MAX_SAFE_INTEGER,C5e={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],detector:[]},K2=null,Xh,yi=[[0,0],[0,0],[0,0],[0,0]],uN=0,cN=e=>1-1/(1+Math.exp(e));async function pN(e){if(dN.initial&&(zs.detector=null),!zs.detector&&e.body.detector&&e.body.detector.modelPath){zs.detector=await je(e.body.detector.modelPath);let t=Object.values(zs.detector.modelSignature.inputs);vd.detector[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,vd.detector[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&zs.detector&&ae("cached model:",zs.detector.modelUrl);return iN(),zs.detector}async function hN(e){if(dN.initial&&(zs.landmarks=null),zs.landmarks)e.debug&&ae("cached model:",zs.landmarks.modelUrl);else{zs.landmarks=await je(e.body.modelPath);let t=Object.values(zs.landmarks.modelSignature.inputs);vd.landmarks[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,vd.landmarks[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return zs.landmarks}function T5e(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;let s;if(Xh&&(n.cropped=Se.cropAndResize(e,[Xh],[0],[e.shape[1],e.shape[2]])),e.shape[1]!==e.shape[2]){let r=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],a=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];yi=[[0,0],r,a,[0,0]],n.pad=Zs(n.cropped||e,yi),n.resize=Se.resizeBilinear(n.pad,[t,t]),s=fe(n.resize,rt.tf255)}else e.shape[1]!==t?(n.resize=Se.resizeBilinear(n.cropped||e,[t,t]),s=fe(n.resize,rt.tf255)):s=fe(n.cropped||e,rt.tf255);return Object.keys(n).forEach(r=>J(n[r])),s}function N5e(e,t){for(let n of e)n.position=[Math.trunc(n.position[0]*(t[0]+yi[2][0]+yi[2][1])/t[0]-yi[2][0]),Math.trunc(n.position[1]*(t[1]+yi[1][0]+yi[1][1])/t[1]-yi[1][0]),n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],2*n.position[2]/(t[0]+t[1])];if(Xh)for(let n of e)n.positionRaw=[n.positionRaw[0]+Xh[1],n.positionRaw[1]+Xh[0],n.positionRaw[2]],n.position=[Math.trunc(n.positionRaw[0]*t[0]),Math.trunc(n.positionRaw[1]*t[1]),n.positionRaw[2]];return e}function E5e(e){let t=e.find(i=>i.part==="leftPalm"),n=e.find(i=>i.part==="leftWrist"),s=e.find(i=>i.part==="leftIndex");t.position[2]=((n.position[2]||0)+(s.position[2]||0))/2;let r=e.find(i=>i.part==="rightPalm"),a=e.find(i=>i.part==="rightWrist"),o=e.find(i=>i.part==="rightIndex");r.position[2]=((a.position[2]||0)+(o.position[2]||0))/2}async function R5e(e,t,n){var f;let s={};[s.ld,s.segmentation,s.heatmap,s.world,s.poseflag]=(f=zs.landmarks)==null?void 0:f.execute(e,C5e.landmarks);let r=(await s.poseflag.data())[0],a=await s.ld.data(),o=await s.world.data();Object.keys(s).forEach(m=>J(s[m]));let i=[],l=5;for(let m=0;m<a.length/l;m++){let g=cN(a[l*m+3]),y=cN(a[l*m+4]),x=Math.trunc(100*g*y*r)/100,A=[a[l*m+0]/vd.landmarks[0],a[l*m+1]/vd.landmarks[1],a[l*m+2]+0],b=[Math.trunc(n[0]*A[0]),Math.trunc(n[1]*A[1]),A[2]],w=[o[l*m+0],o[l*m+1],o[l*m+2]+0];i.push({part:$b[m],positionRaw:A,position:b,distance:w,score:x})}if(r<(t.body.minConfidence||0))return null;E5e(i);let u=N5e(i,n),c=u.map(m=>m.position),p=Ea(c,[n[0],n[1]]),d={};for(let[m,g]of Object.entries(Pb)){let y=[];for(let x=0;x<g.length-1;x++){let A=u.find(w=>w.part===g[x]),b=u.find(w=>w.part===g[x+1]);A&&b&&y.push([A.position,b.position])}d[m]=y}return{id:0,score:Math.trunc(100*r)/100,box:p.box,boxRaw:p.boxRaw,keypoints:u,annotations:d}}async function Ob(e,t){let n=[e.shape[2]||0,e.shape[1]||0],s=(t.body.skipTime||0)>ie()-uN,r=Fb<(t.body.skipFrames||0);if(t.skipAllowed&&s&&r&&K2!==null)Fb++;else{let a={};a.landmarks=T5e(e,256),K2=await R5e(a.landmarks,t,n),Object.keys(a).forEach(o=>J(a[o])),uN=ie(),Fb=0}return K2?[K2]:[]}var wd=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}];var Ra,du=0,Mb=[],mN=0,zb=Number.MAX_SAFE_INTEGER;async function gN(e){if(he.initial&&(Ra=null),Ra)e.debug&&ae("cached model:",Ra.modelUrl);else{Ra=await je(e.object.modelPath);let t=Object.values(Ra.modelSignature.inputs);du=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return Ra}async function _5e(e,t,n){if(!e)return[];let s={},r=[],a=await e.array();s.squeeze=st(e);let o=Kt(s.squeeze,6,1);s.stack=an([o[1],o[0],o[3],o[2]],1),s.boxes=st(s.stack),s.scores=st(o[4]),s.classes=st(o[5]),J([e,...o]),s.nms=await Se.nonMaxSuppressionAsync(s.boxes,s.scores,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence||0);let i=await s.nms.data(),l=0;for(let u of Array.from(i)){let c=Math.trunc(100*a[0][u][4])/100,p=a[0][u][5],d=wd[p].label,[h,f]=[a[0][u][0]/du,a[0][u][1]/du],m=[h,f,a[0][u][2]/du-h,a[0][u][3]/du-f],g=[Math.trunc(m[0]*t[0]),Math.trunc(m[1]*t[1]),Math.trunc(m[2]*t[0]),Math.trunc(m[3]*t[1])];r.push({id:l++,score:c,class:p,label:d,box:g,boxRaw:m})}return Object.keys(s).forEach(u=>J(s[u])),r}async function Lb(e,t){let n=(t.object.skipTime||0)>ie()-mN,s=zb<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&Mb.length>0?(zb++,Mb):(zb=0,new Promise(async r=>{let a=[e.shape[2]||0,e.shape[1]||0],o=Se.resizeBilinear(e,[du,du]),i=t.object.enabled?Ra==null?void 0:Ra.execute(o,["tower_0/detections"]):null;mN=ie(),J(o);let l=await _5e(i,a,t);Mb=l,r(l)}))}var Z2={};la(Z2,{connected:()=>Wb,kpt:()=>Bb});var Bb=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],Wb={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var Vn,AN=0,us={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},Vb=Number.MAX_SAFE_INTEGER;async function xN(e){return he.initial&&(Vn=null),Vn?e.debug&&ae("cached model:",Vn.modelUrl):Vn=await je(e.body.modelPath),Vn}async function D5e(e,t){let[n,s]=e.shape,r=V(e,[s*n]),a=hn(r,0),o=(await a.data())[0];if(o>t){let i=Rs(r,0),l=Jl(i,n),u=(await l.data())[0],c=fe(i,n),p=(await c.data())[0];return J([r,a,i,l,c]),[u,p,o]}return J([r,a]),[0,0,o]}async function Ub(e,t){let n=(t.body.skipTime||0)>ie()-AN,s=Vb<(t.body.skipFrames||0);return t.skipAllowed&&n&&s&&Object.keys(us.keypoints).length>0?(Vb++,[us]):(Vb=0,new Promise(async r=>{let a=Z(()=>{if(!(Vn!=null&&Vn.inputs[0].shape))return null;let p=Se.resizeBilinear(e,[Vn.inputs[0].shape[2],Vn.inputs[0].shape[1]],!1),d=z(p,rt.tf2);return me(d,rt.tf1)}),o;if(t.body.enabled&&(o=Vn==null?void 0:Vn.execute(a)),AN=ie(),J(a),o){us.keypoints.length=0;let p=st(o);J(o);let d=En(p,2);J(p);for(let h=0;h<d.length;h++){let[f,m,g]=await D5e(d[h],t.body.minConfidence);g>(t.body.minConfidence||0)&&us.keypoints.push({score:Math.round(100*g)/100,part:Bb[h],positionRaw:[f/Vn.inputs[0].shape[2],m/Vn.inputs[0].shape[1]],position:[Math.round(e.shape[2]*f/Vn.inputs[0].shape[2]),Math.round(e.shape[1]*m/Vn.inputs[0].shape[1])]})}d.forEach(h=>J(h))}us.score=us.keypoints.reduce((p,d)=>d.score>p?d.score:p,0);let i=us.keypoints.map(p=>p.position[0]),l=us.keypoints.map(p=>p.position[1]);us.box=[Math.min(...i),Math.min(...l),Math.max(...i)-Math.min(...i),Math.max(...l)-Math.min(...l)];let u=us.keypoints.map(p=>p.positionRaw[0]),c=us.keypoints.map(p=>p.positionRaw[1]);us.boxRaw=[Math.min(...u),Math.min(...c),Math.max(...u)-Math.min(...u),Math.max(...c)-Math.min(...c)];for(let[p,d]of Object.entries(Wb)){let h=[];for(let f=0;f<d.length-1;f++){let m=us.keypoints.find(y=>y.part===d[f]),g=us.keypoints.find(y=>y.part===d[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&h.push([m.position,g.position])}us.annotations[p]=h}r([us])}))}var $5e=["angry","disgust","fear","happy","sad","surprise","neutral"],Js,Y2=[],vN=0,wN=0,Gb=Number.MAX_SAFE_INTEGER;async function kN(e){var t;return he.initial&&(Js=null),Js?e.debug&&ae("cached model:",Js.modelUrl):Js=await je((t=e.face.emotion)==null?void 0:t.modelPath),Js}async function Hb(e,t,n,s){var o,i;if(!Js)return[];let r=Gb<(((o=t.face.emotion)==null?void 0:o.skipFrames)||0),a=(((i=t.face.emotion)==null?void 0:i.skipTime)||0)>ie()-wN;return t.skipAllowed&&a&&r&&vN===s&&Y2[n]&&Y2[n].length>0?(Gb++,Y2[n]):(Gb=0,new Promise(async l=>{var c;let u=[];if((c=t.face.emotion)!=null&&c.enabled){let p={},d=Js!=null&&Js.inputs[0].shape?Js.inputs[0].shape[2]:0;p.resize=Se.resizeBilinear(e,[d,d],!1),p.channels=z(p.resize,rt.rgb),p.grayscale=ke(p.channels,3,!0),p.grayscaleSub=me(p.grayscale,rt.tf05),p.grayscaleMul=z(p.grayscaleSub,rt.tf2),p.emotion=Js==null?void 0:Js.execute(p.grayscaleMul),wN=ie();let h=await p.emotion.data();for(let f=0;f<h.length;f++)h[f]>(t.face.emotion.minConfidence||0)&&u.push({score:Math.min(.99,Math.trunc(100*h[f])/100),emotion:$5e[f]});u.sort((f,m)=>m.score-f.score),Object.keys(p).forEach(f=>J(p[f]))}Y2[n]=u,vN=s,l(u)}))}var gr,jb=[],SN=0,CN=0,TN=Number.MAX_SAFE_INTEGER;async function NN(e){var t;return he.initial&&(gr=null),gr?e.debug&&ae("cached model:",gr.modelUrl):gr=await je((t=e.face.mobilefacenet)==null?void 0:t.modelPath),gr}async function qb(e,t,n,s){var o,i;if(!gr)return[];let r=TN<(((o=t.face.mobilefacenet)==null?void 0:o.skipFrames)||0),a=(((i=t.face.mobilefacenet)==null?void 0:i.skipTime)||0)>ie()-CN;return t.skipAllowed&&a&&r&&SN===s&&jb[n]?(TN++,jb[n]):new Promise(async l=>{var c;let u=[];if(((c=t.face.mobilefacenet)==null?void 0:c.enabled)&&(gr==null?void 0:gr.inputs[0].shape)){let p={};p.crop=Se.resizeBilinear(e,[gr.inputs[0].shape[2],gr.inputs[0].shape[1]],!1),p.data=gr.execute(p.crop);let d=await p.data.data();u=Array.from(d),Object.keys(p).forEach(h=>J(p[h]))}jb[n]=u,SN=s,CN=ie(),l(u)})}var yr,Xb=[],RN=0,_N=0,DN=Number.MAX_SAFE_INTEGER;async function $N(e){return he.initial&&(yr=null),yr?e.debug&&ae("cached model:",yr.modelUrl):yr=await je(e.face.insightface.modelPath),yr}async function Kb(e,t,n,s){var o,i;if(!yr)return[];let r=DN<(((o=t.face.insightface)==null?void 0:o.skipFrames)||0),a=(((i=t.face.insightface)==null?void 0:i.skipTime)||0)>ie()-_N;return t.skipAllowed&&a&&r&&RN===s&&Xb[n]?(DN++,Xb[n]):new Promise(async l=>{var c;let u=[];if(((c=t.face.insightface)==null?void 0:c.enabled)&&(yr==null?void 0:yr.inputs[0].shape)){let p={};p.crop=Se.resizeBilinear(e,[yr.inputs[0].shape[2],yr.inputs[0].shape[1]],!1),p.data=yr.execute(p.crop);let d=await p.data.data();u=Array.from(d),Object.keys(p).forEach(h=>J(p[h]))}Xb[n]=u,RN=s,_N=ie(),l(u)})}var _a,Ai=0,P5e=2.3,Zb=mr.leftEyeLower0,Yb=mr.rightEyeLower0,kd={leftBounds:[Zb[0],Zb[Zb.length-1]],rightBounds:[Yb[0],Yb[Yb.length-1]]},Id={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function zN(e){var t;return he.initial&&(_a=null),_a?e.debug&&ae("cached model:",_a.modelUrl):_a=await je((t=e.face.iris)==null?void 0:t.modelPath),Ai=_a.inputs[0].shape?_a.inputs[0].shape[2]:0,Ai===-1&&(Ai=64),_a}function J2(e,t,n,s){for(let r=0;r<Nb.length;r++){let{key:a,indices:o}=Nb[r],i=mr[`${n}${a}`];if(!s||s.includes(a))for(let l=0;l<o.length;l++){let u=o[l];e[i[l]]=[t[u][0],t[u][1],(t[u][2]+e[i[l]][2])/2]}}}var F5e=e=>{let t=e[kd.leftBounds[0]][2],n=e[kd.rightBounds[0]][2];return t-n},FN=(e,t,n,s,r,a=!1)=>{let o=G2(U2(KT([e[n],e[s]]),P5e)),i=xd(o),l=Se.cropAndResize(t,[[o.startPoint[1]/r,o.startPoint[0]/r,o.endPoint[1]/r,o.endPoint[0]/r]],[0],[Ai,Ai]);if(a&&he.kernels.includes("flipleftright")){let u=Se.flipLeftRight(l);J(l),l=u}return{box:o,boxSize:i,crop:l}},ON=(e,t,n,s=!1)=>{let r=[];for(let a=0;a<Id.numCoordinates;a++){let o=e[a*3],i=e[a*3+1],l=e[a*3+2];r.push([(s?1-o/Ai:o/Ai)*n[0]+t.startPoint[0],i/Ai*n[1]+t.startPoint[1],l])}return{rawCoords:r,iris:r.slice(Id.index)}},MN=(e,t,n)=>{let s=e[mr[`${n}EyeUpper0`][Id.upperCenter]][2],r=e[mr[`${n}EyeLower0`][Id.lowerCenter]][2],a=(s+r)/2;return t.map((o,i)=>{let l=a;return i===2?l=s:i===4&&(l=r),[o[0],o[1],l]})};async function LN(e,t,n,s){if(!_a)return n.debug&&ae("face mesh iris detection requested, but model is not loaded"),e;let{box:r,boxSize:a,crop:o}=FN(e,t,kd.leftBounds[0],kd.leftBounds[1],s,!0),{box:i,boxSize:l,crop:u}=FN(e,t,kd.rightBounds[0],kd.rightBounds[1],s,!0),c=St([o,u]);J(o),J(u);let p=_a.execute(c);J(c);let d=await p.data();J(p);let h=d.slice(0,Id.numCoordinates*3),{rawCoords:f,iris:m}=ON(h,r,a,!0),g=d.slice(Id.numCoordinates*3),{rawCoords:y,iris:x}=ON(g,i,l,!1),A=F5e(e);Math.abs(A)<30?(J2(e,f,"left",null),J2(e,y,"right",null)):A<1?J2(e,f,"left",["EyeUpper0","EyeLower0"]):J2(e,y,"right",["EyeUpper0","EyeLower0"]);let b=MN(e,m,"left"),w=MN(e,x,"right");return e.concat(b).concat(w)}var O5e=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],M5e=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],z5e=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],L5e=[[474,475],[475,476],[476,477],[477,474]],B5e=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],W5e=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],V5e=[[469,470],[470,471],[471,472],[472,469]],U5e=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]];function xi(e){let t=e.map(n=>n[0]);return t.push(e[e.length-1][1]),t}var G5e={lips:xi(O5e),leftEye:xi(M5e),leftEyebrow:xi(z5e),leftIris:xi(L5e),rightEye:xi(B5e),rightEyebrow:xi(W5e),rightIris:xi(V5e),faceOval:xi(U5e)},H5e=Object.entries(G5e).map(([e,t])=>t.map(n=>[n,e])).flat(),Gke=new Map(H5e),Kh=[61,146,91,181,84,17,314,405,321,375,291,185,40,39,37,0,267,269,270,409,78,95,88,178,87,14,317,402,318,324,308,191,80,81,82,13,312,311,310,415,76,77,90,180,85,16,315,404,320,307,306,184,74,73,72,11,302,303,304,408,62,96,89,179,86,15,316,403,319,325,292,183,42,41,38,12,268,271,272,407],pu=[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],hu=[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417];async function VN(e,t){let n={lips:await t.filter(a=>a.size===160)[0].data(),irisL:await t.filter(a=>a.size===10)[0].data(),eyeL:await t.filter(a=>a.size===142)[0].data(),irisR:await t.filter(a=>a.size===10)[1].data(),eyeR:await t.filter(a=>a.size===142)[1].data()},s=pu.reduce((a,o)=>a+=e[o][2],0)/pu.length;for(let a=0;a<n.irisL.length/2;a++)e.push([n.irisL[2*a+0],n.irisL[2*a+1],s]);let r=hu.reduce((a,o)=>a+=e[o][2],0)/hu.length;for(let a=0;a<n.irisR.length/2;a++)e.push([n.irisR[2*a+0],n.irisR[2*a+1],r]);for(let a=0;a<n.eyeL.length/2;a++)e[pu[a]]=[n.eyeL[2*a+0],n.eyeL[2*a+1],e[pu[a]][2]];for(let a=0;a<n.eyeR.length/2;a++)e[hu[a]]=[n.eyeR[2*a+0],n.eyeR[2*a+1],e[hu[a]][2]];for(let a=0;a<n.lips.length/2;a++)e[Kh[a]]=[n.lips[2*a+0],n.lips[2*a+1],e[Kh[a]][2]];return e}var na={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},Un=null,Zh=0;async function UN(e,t){var l,u,c,p,d,h,f,m,g,y;let n=(((l=t.face.detector)==null?void 0:l.skipTime)||0)>ie()-na.timestamp,s=na.skipped<(((u=t.face.detector)==null?void 0:u.skipFrames)||0);!t.skipAllowed||!n||!s||na.boxes.length===0?(na.boxes=await rN(e,t),na.timestamp=ie(),na.skipped=0):na.skipped++;let r=[],a=[],o=0,i=Zh;for(let x=0;x<na.boxes.length;x++){let A=na.boxes[x],b=0,w,I={id:o++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([b,w,I.tensor]=QT((c=t.face.detector)==null?void 0:c.rotation,A,e,(p=t.face.mesh)!=null&&p.enabled?Zh:bd()),t.filter.equalization){let k=I.tensor?await P2(I.tensor):void 0;J(I.tensor),k&&(I.tensor=k)}if(I.boxScore=Math.round(100*A.confidence)/100,(d=t.face.mesh)!=null&&d.enabled)if(!Un)t.debug&&ae("face mesh detection requested, but model is not loaded");else{if(((h=t.face.attention)==null?void 0:h.enabled)&&!he.kernels.includes("atan2"))return J(I.tensor),r;let k=Un.execute(I.tensor),_=await k.find(D=>D.shape[D.shape.length-1]===1).data();if(I.faceScore=Math.round(100*_[0])/100,I.faceScore<(((f=t.face.detector)==null?void 0:f.minConfidence)||1)){if(A.confidence=I.faceScore,t.face.mesh.keepInvalid){I.box=W2(A,e),I.boxRaw=V2(A,e),I.score=I.boxScore,I.mesh=A.landmarks.map(D=>[(A.startPoint[0]+A.endPoint[0])/2+(A.endPoint[0]+A.startPoint[0])*D[0]/bd(),(A.startPoint[1]+A.endPoint[1])/2+(A.endPoint[1]+A.startPoint[1])*D[1]/bd()]),I.meshRaw=I.mesh.map(D=>[D[0]/(e.shape[2]||1),D[1]/(e.shape[1]||1),(D[2]||0)/i]);for(let D of Object.keys(lu))I.annotations[D]=[I.mesh[lu[D]]]}}else{let D=k.find(M=>M.shape[M.shape.length-1]===1404),E=V(D,[-1,3]),P=await E.array();J(E),(m=t.face.attention)!=null&&m.enabled?P=await VN(P,k):(g=t.face.iris)!=null&&g.enabled&&(P=await LN(P,I.tensor,t,Zh)),I.mesh=JT(P,A,b,w,Zh),I.meshRaw=I.mesh.map(M=>[M[0]/(e.shape[2]||0),M[1]/(e.shape[1]||0),(M[2]||0)/i]);for(let M of Object.keys(mr))I.annotations[M]=mr[M].map(W=>I.mesh[W]);I.score=I.faceScore;let C={...eN(I.mesh,A),confidence:A.confidence,landmarks:A.landmarks};I.box=W2(C,e),I.boxRaw=V2(C,e),a.push(C)}J(k)}else{I.box=W2(A,e),I.boxRaw=V2(A,e),I.score=I.boxScore,I.mesh=A.landmarks.map(k=>[(A.startPoint[0]+A.endPoint[0])/2+(A.endPoint[0]+A.startPoint[0])*k[0]/bd(),(A.startPoint[1]+A.endPoint[1])/2+(A.endPoint[1]+A.startPoint[1])*k[1]/bd()]),I.meshRaw=I.mesh.map(k=>[k[0]/(e.shape[2]||0),k[1]/(e.shape[1]||0),(k[2]||0)/i]);for(let k of Object.keys(lu))I.annotations[k]=[I.mesh[lu[k]]]}I.score>(((y=t.face.detector)==null?void 0:y.minConfidence)||1)?r.push(I):J(I.tensor)}return na.boxes=a,r}async function GN(e){var t,n,s,r;return he.initial&&(Un=null),((t=e.face.attention)==null?void 0:t.enabled)&&(Un==null?void 0:Un.signature)&&Object.keys(((n=Un==null?void 0:Un.signature)==null?void 0:n.outputs)||{}).length<6&&(Un=null),Un?e.debug&&ae("cached model:",Un.modelUrl):(s=e.face.attention)!=null&&s.enabled?Un=await je(e.face.attention.modelPath):Un=await je((r=e.face.mesh)==null?void 0:r.modelPath),Zh=Un.inputs[0].shape?Un.inputs[0].shape[2]:0,Un}var HN=uu,jN=jh;var Ls,Q2=[],qN=0,XN=0,Qb=Number.MAX_SAFE_INTEGER;async function KN(e){var t;return he.initial&&(Ls=null),Ls?e.debug&&ae("cached model:",Ls.modelUrl):Ls=await je((t=e.face.description)==null?void 0:t.modelPath),Ls}function e4(e){let t=e.image||e.tensor||e;if(!(Ls!=null&&Ls.inputs[0].shape))return t;let n=Se.resizeBilinear(t,[Ls.inputs[0].shape[2],Ls.inputs[0].shape[1]],!1),s=z(n,rt.tf255);return J(n),s}async function t4(e,t,n,s){var o,i,l,u;if(!Ls)return{age:0,gender:"unknown",genderScore:0,descriptor:[]};let r=Qb<(((o=t.face.description)==null?void 0:o.skipFrames)||0),a=(((i=t.face.description)==null?void 0:i.skipTime)||0)>ie()-qN;return t.skipAllowed&&r&&a&&XN===s&&((l=Q2[n])==null?void 0:l.age)&&((u=Q2[n])==null?void 0:u.age)>0?(Qb++,Q2[n]):(Qb=0,new Promise(async c=>{var d;let p={age:0,gender:"unknown",genderScore:0,descriptor:[]};if((d=t.face.description)!=null&&d.enabled){let h=e4(e),f=Ls==null?void 0:Ls.execute(h);qN=ie(),J(h);let g=await f.find(R=>R.shape[1]===1).data(),y=Math.trunc(200*Math.abs(g[0]-.5))/100;y>(t.face.description.minConfidence||0)&&(p.gender=g[0]<=.5?"female":"male",p.genderScore=Math.min(.99,y));let x=Rs(f.find(R=>R.shape[1]===100),1),A=(await x.data())[0];J(x);let w=await f.find(R=>R.shape[1]===100).data();p.age=Math.round(w[A-1]>w[A+1]?10*A-100*w[A-1]:10*A+100*w[A+1])/10;let I=f.find(R=>R.shape[1]===1024),k=I?await I.data():[];p.descriptor=Array.from(k),f.forEach(R=>J(R))}Q2[n]=p,XN=s,c(p)}))}function e1(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function Yh(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function JN(e,t,n){let s=t.shape[1],r=t.shape[2],a=[[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r]];return Se.cropAndResize(t,a,[0],n)}function QN(e,t){let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],r=e.palmLandmarks.map(a=>[a[0]*t[0],a[1]*t[1]]);return{startPoint:n,endPoint:s,palmLandmarks:r,confidence:e.confidence}}function t1(e,t=1.5){let n=Yh(e),s=e1(e),r=[t*s[0]/2,t*s[1]/2],a=[n[0]-r[0],n[1]-r[1]],o=[n[0]+r[0],n[1]+r[1]];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function n1(e){let t=Yh(e),n=e1(e),r=Math.max(...n)/2,a=[t[0]-r,t[1]-r],o=[t[0]+r,t[1]+r];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function q5e(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function eE(e,t){let n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return q5e(n)}var ZN=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function bi(e,t){let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n}function X5e(e,t){let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n}function YN(e,t){let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(bi(e[r],X5e(t,a)))}return n}function s4(e,t){let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=ZN(t[0],t[1]),o=YN(a,r),i=ZN(-t[0],-t[1]);return YN(o,i)}function tE(e){let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-bi(t[0],n),-bi(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]}function r4(e,t){return[bi(e,t[0]),bi(e,t[1])]}var sE=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}];var s1=class{constructor(t){ge(this,"model");ge(this,"anchors");ge(this,"anchorsTensor");ge(this,"inputSize");ge(this,"inputSizeTensor");ge(this,"doubleInputSizeTensor");var n,s,r,a;this.model=t,this.anchors=sE.map(o=>[o.x,o.y]),this.anchorsTensor=ar(this.anchors),this.inputSize=((a=(r=(s=(n=this==null?void 0:this.model)==null?void 0:n.inputs)==null?void 0:s[0])==null?void 0:r.shape)==null?void 0:a[2])||0,this.inputSizeTensor=Pt([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=Pt([this.inputSize*2,this.inputSize*2])}normalizeBoxes(t){let n={};n.boxOffsets=ze(t,[0,0],[-1,2]),n.boxSizes=ze(t,[0,2],[-1,2]),n.div=fe(n.boxOffsets,this.inputSizeTensor),n.boxCenterPoints=ue(n.div,this.anchorsTensor),n.halfBoxSizes=fe(n.boxSizes,this.doubleInputSizeTensor),n.sub=me(n.boxCenterPoints,n.halfBoxSizes),n.startPoints=z(n.sub,this.inputSizeTensor),n.add=ue(n.boxCenterPoints,n.halfBoxSizes),n.endPoints=z(n.add,this.inputSizeTensor);let s=Zl([n.startPoints,n.endPoints],1);return Object.keys(n).forEach(r=>J(n[r])),s}normalizeLandmarks(t,n){let s={};s.reshape=V(t,[-1,7,2]),s.div=fe(s.reshape,this.inputSizeTensor),s.landmarks=ue(s.div,this.anchors[n]?this.anchors[n]:0);let r=z(s.landmarks,this.inputSizeTensor);return Object.keys(s).forEach(a=>J(s[a])),r}async predict(t,n){var i;let s={};s.resize=Se.resizeBilinear(t,[this.inputSize,this.inputSize]),s.div=fe(s.resize,rt.tf127),s.image=me(s.div,rt.tf1),s.batched=this.model.execute(s.image),s.predictions=st(s.batched),s.slice=ze(s.predictions,[0,0],[-1,1]),s.sigmoid=Cn(s.slice),s.scores=st(s.sigmoid);let r=await s.scores.data();s.boxes=ze(s.predictions,[0,1],[-1,4]),s.norm=this.normalizeBoxes(s.boxes),s.nms=await Se.nonMaxSuppressionAsync(s.norm,s.scores,3*(((i=n.hand)==null?void 0:i.maxDetected)||1),n.hand.iouThreshold,n.hand.minConfidence);let a=await s.nms.array(),o=[];for(let l of a){let u={};u.box=ze(s.norm,[l,0],[1,-1]),u.slice=ze(s.predictions,[l,5],[1,14]),u.norm=this.normalizeLandmarks(u.slice,l),u.palmLandmarks=V(u.norm,[-1,2]);let c=await u.box.data(),p=c.slice(0,2),d=c.slice(2,4),h=await u.palmLandmarks.array(),f={startPoint:p,endPoint:d,palmLandmarks:h,confidence:r[l]},m=QN(f,[(t.shape[2]||1)/this.inputSize,(t.shape[1]||0)/this.inputSize]);o.push(m),Object.keys(u).forEach(g=>J(u[g]))}return Object.keys(s).forEach(l=>J(s[l])),o}};var Y5e=5,rE=1.65,aE=[0,5,9,13,17,1,2],J5e=0,Q5e=2,oE=0,r1=class{constructor(t,n){ge(this,"handDetector");ge(this,"handPoseModel");ge(this,"inputSize");ge(this,"storedBoxes");ge(this,"skipped");ge(this,"detectedHands");var s,r,a;this.handDetector=t,this.handPoseModel=n,this.inputSize=((a=(r=(s=this.handPoseModel)==null?void 0:s.inputs)==null?void 0:r[0].shape)==null?void 0:a[2])||0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(t){let n=t.map(o=>o[0]),s=t.map(o=>o[1]),r=[Math.min(...n),Math.min(...s)],a=[Math.max(...n),Math.max(...s)];return{startPoint:r,endPoint:a}}getBoxForPalmLandmarks(t,n){let s=t.map(a=>r4([...a,1],n)),r=this.calculateLandmarksBoundingBox(s);return t1(n1(r),Y5e)}getBoxForHandLandmarks(t){let n=this.calculateLandmarksBoundingBox(t),s=t1(n1(n),rE);s.palmLandmarks=[];for(let r=0;r<aE.length;r++)s.palmLandmarks.push(t[aE[r]].slice(0,2));return s}transformRawCoords(t,n,s,r){let a=e1(n),o=[a[0]/this.inputSize,a[1]/this.inputSize,(a[0]+a[1])/this.inputSize/2],i=t.map(h=>[o[0]*(h[0]-this.inputSize/2),o[1]*(h[1]-this.inputSize/2),o[2]*h[2]]),l=s4(s,[0,0]),u=i.map(h=>[...r4(h,l),h[2]]),c=tE(r),p=[...Yh(n),1],d=[bi(p,c[0]),bi(p,c[1])];return u.map(h=>[Math.trunc(h[0]+d[0]),Math.trunc(h[1]+d[1]),Math.trunc(h[2])])}async estimateHands(t,n){let s=!1,r,a=(n.hand.skipTime||0)>ie()-oE,o=this.skipped<(n.hand.skipFrames||0);n.skipAllowed&&a&&o&&(r=await this.handDetector.predict(t,n),this.skipped=0),n.skipAllowed&&this.skipped++,r&&r.length>0&&(r.length!==this.detectedHands&&this.detectedHands!==n.hand.maxDetected||!n.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...r],this.storedBoxes.length>0&&(s=!0));let i=[];for(let l=0;l<this.storedBoxes.length;l++){let u=this.storedBoxes[l];if(!!u)if(n.hand.landmarks){let c=n.hand.rotation?eE(u.palmLandmarks[J5e],u.palmLandmarks[Q5e]):0,p=Yh(u),d=[p[0]/t.shape[2],p[1]/t.shape[1]],h=n.hand.rotation&&he.kernels.includes("rotatewithoffset")?Se.rotateWithOffset(t,c,0,d):t.clone(),f=s4(-c,p),m=s?this.getBoxForPalmLandmarks(u.palmLandmarks,f):u,g=JN(m,h,[this.inputSize,this.inputSize]),y=fe(g,rt.tf255);J(g),J(h);let[x,A]=this.handPoseModel.execute(y);oE=ie(),J(y);let b=(await x.data())[0];if(J(x),b>=n.hand.minConfidence/4){let w=V(A,[-1,3]),I=await w.array();J(A),J(w);let k=this.transformRawCoords(I,m,c,f),R=this.getBoxForHandLandmarks(k);this.storedBoxes[l]={...R,confidence:b};let _={landmarks:k,confidence:b,boxConfidence:u.confidence,fingerConfidence:b,box:{topLeft:R.startPoint,bottomRight:R.endPoint}};i.push(_)}else this.storedBoxes[l]=null;J(A)}else{let c=t1(n1(u),rE),p={confidence:u.confidence,boxConfidence:u.confidence,fingerConfidence:0,box:{topLeft:c.startPoint,bottomRight:c.endPoint},landmarks:[]};i.push(p)}}return this.storedBoxes=this.storedBoxes.filter(l=>l!==null),this.detectedHands=i.length,i.length>n.hand.maxDetected&&(i.length=n.hand.maxDetected),i}};var cs={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>cs.nameMapping[e],getPoints:e=>cs.pointsMapping[e]},wi={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>wi.nameMapping[e]},jt={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>jt.nameMapping[e]},vi=class{constructor(t){ge(this,"name");ge(this,"curls");ge(this,"directions");ge(this,"weights");ge(this,"weightsRelative");this.name=t,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(t,n,s){typeof this.curls[t]=="undefined"&&(this.curls[t]=[]),this.curls[t].push([n,s])}direction(t,n,s){this.directions[t]||(this.directions[t]=[]),this.directions[t].push([n,s])}weight(t,n){this.weights[t]=n;let s=this.weights.reduce((r,a)=>r+a,0);this.weightsRelative=this.weights.map(r=>r*5/s)}matchAgainst(t,n){let s=0;for(let r in t){let a=t[r],o=this.curls[r];if(typeof o=="undefined"){s+=this.weightsRelative[r];continue}for(let[i,l]of o)if(a===i){s+=l*this.weightsRelative[r];break}}for(let r in n){let a=n[r],o=this.directions[r];if(typeof o=="undefined"){s+=this.weightsRelative[r];continue}for(let[i,l]of o)if(a===i){s+=l*this.weightsRelative[r];break}}return s/10}};var{thumb:Mr,index:Da,middle:$a,ring:fu,pinky:mu}=cs,{none:zr,half:txe,full:Lr}=wi,{verticalUp:Sd,verticalDown:aIe,horizontalLeft:a4,horizontalRight:nxe,diagonalUpRight:sxe,diagonalUpLeft:Cd,diagonalDownRight:oIe,diagonalDownLeft:iIe}=jt,ki=new vi("thumbs up");ki.curl(Mr,zr,1);ki.direction(Mr,Sd,1);ki.direction(Mr,Cd,.25);ki.direction(Mr,sxe,.25);for(let e of[cs.index,cs.middle,cs.ring,cs.pinky])ki.curl(e,Lr,1),ki.direction(e,a4,1),ki.direction(e,nxe,1);var un=new vi("victory");un.curl(Mr,txe,.5);un.curl(Mr,zr,.5);un.direction(Mr,Sd,1);un.direction(Mr,Cd,1);un.curl(Da,zr,1);un.direction(Da,Sd,.75);un.direction(Da,Cd,1);un.curl($a,zr,1);un.direction($a,Sd,1);un.direction($a,Cd,.75);un.curl(fu,Lr,1);un.direction(fu,Sd,.2);un.direction(fu,Cd,1);un.direction(fu,a4,.2);un.curl(mu,Lr,1);un.direction(mu,Sd,.2);un.direction(mu,Cd,1);un.direction(mu,a4,.2);un.weight(Da,2);un.weight($a,2);var Ii=new vi("point");Ii.curl(Mr,Lr,1);Ii.curl(Da,zr,.5);Ii.curl($a,Lr,.5);Ii.curl(fu,Lr,.5);Ii.curl(mu,Lr,.5);Ii.weight(Da,2);Ii.weight($a,2);var Si=new vi("middle finger");Si.curl(Mr,zr,1);Si.curl(Da,Lr,.5);Si.curl($a,Lr,.5);Si.curl(fu,Lr,.5);Si.curl(mu,Lr,.5);Si.weight(Da,2);Si.weight($a,2);var Td=new vi("open palm");Td.curl(Mr,zr,.75);Td.curl(Da,zr,.75);Td.curl($a,zr,.75);Td.curl(fu,zr,.75);Td.curl(mu,zr,.75);var iE=[ki,un,Ii,Si,Td];var rxe=.7,gu={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function lE(e,t,n,s){let r=(t-s)/(e-n),a=Math.atan(r)*180/Math.PI;return a<=0?a=-a:a>0&&(a=180-a),a}function cE(e,t){if(!e||!t)return[0,0];let n=lE(e[0],e[1],t[0],t[1]);if(e.length===2)return n;let s=lE(e[1],e[2],t[1],t[2]);return[n,s]}function uE(e,t=1){let n=0,s=0,r=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?s=1*t:r=1*t,[n,s,r]}function axe(e,t,n){let s=e[0]-t[0],r=e[0]-n[0],a=t[0]-n[0],o=e[1]-t[1],i=e[1]-n[1],l=t[1]-n[1],u=e[2]-t[2],c=e[2]-n[2],p=t[2]-n[2],d=Math.sqrt(s*s+o*o+u*u),h=Math.sqrt(r*r+i*i+c*c),f=Math.sqrt(a*a+l*l+p*p),m=(f*f+d*d-h*h)/(2*f*d);m>1?m=1:m<-1&&(m=-1);let g=Math.acos(m);g=57.2958*g%180;let y;return g>gu.NO_CURL_START_LIMIT?y=wi.none:g>gu.HALF_CURL_START_LIMIT?y=wi.half:y=wi.full,y}function dE(e,t,n,s){let r;return s===Math.abs(e)?e>0?r=jt.horizontalLeft:r=jt.horizontalRight:s===Math.abs(t)?t>0?r=jt.horizontalLeft:r=jt.horizontalRight:n>0?r=jt.horizontalLeft:r=jt.horizontalRight,r}function pE(e,t,n,s){let r;return s===Math.abs(e)?e<0?r=jt.verticalDown:r=jt.verticalUp:s===Math.abs(t)?t<0?r=jt.verticalDown:r=jt.verticalUp:n<0?r=jt.verticalDown:r=jt.verticalUp,r}function oxe(e,t,n,s,r,a,o,i){let l,u=pE(e,t,n,s),c=dE(r,a,o,i);return u===jt.verticalUp?c===jt.horizontalLeft?l=jt.diagonalUpLeft:l=jt.diagonalUpRight:c===jt.horizontalLeft?l=jt.diagonalDownLeft:l=jt.diagonalDownRight,l}function ixe(e,t,n,s){let r=e[0]-t[0],a=e[0]-n[0],o=t[0]-n[0],i=e[1]-t[1],l=e[1]-n[1],u=t[1]-n[1],c=Math.max(Math.abs(r),Math.abs(a),Math.abs(o)),p=Math.max(Math.abs(i),Math.abs(l),Math.abs(u)),d=0,h=0,f=0,m=p/(c+1e-5);m>1.5?d+=gu.DISTANCE_VOTE_POWER:m>.66?h+=gu.DISTANCE_VOTE_POWER:f+=gu.DISTANCE_VOTE_POWER;let g=Math.sqrt(r*r+i*i),y=Math.sqrt(a*a+l*l),x=Math.sqrt(o*o+u*u),A=Math.max(g,y,x),b=e[0],w=e[1],I=n[0],k=n[1];A===g?(I=n[0],k=n[1]):A===x&&(b=t[0],w=t[1]);let D=cE([b,w],[I,k]),E=uE(D,gu.TOTAL_ANGLE_VOTE_POWER);d+=E[0],h+=E[1],f+=E[2];for(let C of s){let M=uE(C,gu.SINGLE_ANGLE_VOTE_POWER);d+=M[0],h+=M[1],f+=M[2]}let P;return d===Math.max(d,h,f)?P=pE(l,i,u,p):f===Math.max(h,f)?P=dE(a,r,o,c):P=oxe(l,i,u,p,a,r,o,c),P}function hE(e){let t=[],n=[],s=[],r=[];if(!e)return{curls:s,directions:r};for(let a of cs.all){let o=cs.getPoints(a),i=[],l=[];for(let u of o){let c=e[u[0]],p=e[u[1]],d=cE(c,p),h=d[0],f=d[1];i.push(h),l.push(f)}t.push(i),n.push(l)}for(let a of cs.all){let o=a===cs.thumb?1:0,i=cs.getPoints(a),l=e[i[o][0]],u=e[i[o+1][1]],c=e[i[3][1]],p=axe(l,u,c),d=ixe(l,u,c,t[a].slice(o));s[a]=p,r[a]=d}return{curls:s,directions:r}}function a1(e){if(!e||e.length===0)return null;let t=hE(e),n={};for(let s of cs.all)n[cs.getName(s)]={curl:wi.getName(t.curls[s]),direction:jt.getName(t.directions[s])};return n}function fE(e){let t=[];if(!e||e.length===0)return t;let n=hE(e);for(let s of iE){let r=s.matchAgainst(n.curls,n.directions);r>=rxe&&t.push({name:s.name,confidence:r})}return t}var mE={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]},yu,Au,gE;async function i4(e,t){let n=await gE.estimateHands(e,t);if(!n)return[];let s=[];for(let r=0;r<n.length;r++){let a={};if(n[r].landmarks)for(let c of Object.keys(mE))a[c]=mE[c].map(p=>n[r].landmarks[p]);let o=n[r].landmarks,i=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],l=[0,0,0,0];if(o&&o.length>0){for(let c of o)c[0]<i[0]&&(i[0]=c[0]),c[1]<i[1]&&(i[1]=c[1]),c[0]>i[2]&&(i[2]=c[0]),c[1]>i[3]&&(i[3]=c[1]);i[2]-=i[0],i[3]-=i[1],l=[i[0]/(e.shape[2]||0),i[1]/(e.shape[1]||0),i[2]/(e.shape[2]||0),i[3]/(e.shape[1]||0)]}else i=n[r].box?[Math.trunc(Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.max(0,n[r].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[r].box.bottomRight[0])-Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[r].box.bottomRight[1])-Math.max(0,n[r].box.topLeft[1]))]:[0,0,0,0],l=[n[r].box.topLeft[0]/(e.shape[2]||0),n[r].box.topLeft[1]/(e.shape[1]||0),(n[r].box.bottomRight[0]-n[r].box.topLeft[0])/(e.shape[2]||0),(n[r].box.bottomRight[1]-n[r].box.topLeft[1])/(e.shape[1]||0)];let u=a1(o);s.push({id:r,score:Math.round(100*n[r].confidence)/100,boxScore:Math.round(100*n[r].boxConfidence)/100,fingerScore:Math.round(100*n[r].fingerConfidence)/100,label:"hand",box:i,boxRaw:l,keypoints:o,annotations:a,landmarks:u})}return s}async function l4(e){var n,s;he.initial&&(yu=null,Au=null),!yu||!Au?[yu,Au]=await Promise.all([e.hand.enabled?je((n=e.hand.detector)==null?void 0:n.modelPath):null,e.hand.landmarks?je((s=e.hand.skeleton)==null?void 0:s.modelPath):null]):(e.debug&&ae("cached model:",yu.modelUrl),e.debug&&ae("cached model:",Au.modelUrl));let t=yu?new s1(yu):void 0;return t&&Au&&(gE=new r1(t,Au)),[yu,Au]}var Rt={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function lxe(){let e=Rt.gl;!e||(Rt.extensions=e.getSupportedExtensions())}function AE(e){if(e.config.backend==="humangl"&&(Rt.name in nn().registry&&(!Rt.gl||!Rt.gl.getParameter(Rt.gl.VERSION))&&(ae("error: humangl backend invalid context"),o1(e)),!Wy(Rt.name))){try{Rt.canvas=ls(100,100)}catch(n){ae("error: cannot create canvas:",n);return}try{if(Rt.gl=Rt.canvas.getContext("webgl2",Rt.webGLattr),!Rt.gl){ae("error: cannot get WebGL context");return}if(!Rt.gl.getParameter(Rt.gl.VERSION).includes("2.0")){ae("override: using fallback webgl backend as webgl 2.0 is not detected"),e.config.backend="webgl";return}Rt.canvas&&(Rt.canvas.addEventListener("webglcontextlost",s=>{throw ae("error: humangl:",s.type),ae("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")}),Rt.canvas.addEventListener("webglcontextrestored",s=>{ae("error: humangl context restored:",s)}),Rt.canvas.addEventListener("webglcontextcreationerror",s=>{ae("error: humangl context create:",s)}))}catch(n){ae("error: cannot get WebGL context:",n);return}try{v2(2,Rt.gl)}catch(n){ae("error: cannot set WebGL context:",n);return}try{let n=new Xu(Rt.gl);Xl(Rt.name,()=>new ud(n),Rt.priority)}catch(n){ae("error: cannot register WebGL backend:",n);return}try{Xr("webgl").forEach(s=>{let r={...s,backendName:Rt.name};ur(r)})}catch(n){ae("error: cannot update WebGL backend registration:",n);return}let t=Bn().getGPGPUContext?Bn().getGPGPUContext().gl:null;if(t)ae(`humangl webgl version:${t.getParameter(t.VERSION)} renderer:${t.getParameter(t.RENDERER)}`);else{ae("error: no current gl context:",t,Rt.gl);return}try{j().flagRegistry.WEBGL_VERSION&&j().set("WEBGL_VERSION",2)}catch(n){ae("error: cannot set WebGL backend flags:",n);return}lxe(),ae("backend registered:",Rt.name)}}function uxe(){if(!he.kernels.includes("mod")){let e={kernelName:"Mod",backendName:Ln(),kernelFunc:t=>Z(()=>me(t.inputs.a,z(fe(t.inputs.a,t.inputs.b),t.inputs.b)))};ur(e),he.kernels.push("mod")}if(!he.kernels.includes("floormod")){let e={kernelName:"FloorMod",backendName:Ln(),kernelFunc:t=>Z(()=>ue(z(Vc(t.inputs.a/t.inputs.b),t.inputs.b),Jl(t.inputs.a,t.inputs.b)))};ur(e),he.kernels.push("floormod")}}async function l1(e,t=!1){if(e.state="backend",t||he.initial||e.config.backend&&e.config.backend.length>0&&Ln()!==e.config.backend){let n=ie();if(e.config.backend&&e.config.backend.length>0){if(typeof window=="undefined"&&typeof WorkerGlobalScope!="undefined"&&e.config.debug&&e.config.debug&&ae("running inside web worker"),he.browser&&e.config.backend==="tensorflow"&&(e.config.debug&&ae("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),he.node&&(e.config.backend==="webgl"||e.config.backend==="humangl")&&(e.config.debug&&ae(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),he.browser&&e.config.backend==="webgpu")if(typeof navigator=="undefined"||typeof navigator.gpu=="undefined")ae("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{let r=await navigator.gpu.requestAdapter();if(e.config.debug&&ae("enumerated webgpu adapter:",r),!r)ae("override: backend set to webgpu but browser reports no available gpu"),e.config.backend="humangl";else{let a="requestAdapterInfo"in r?await r.requestAdapterInfo():void 0;ae("webgpu adapter info:",a)}}e.config.backend==="humangl"&&AE(e);let s=Object.keys(nn().registryFactory);if(e.config.debug&&ae("available backends:",s),s.includes(e.config.backend)||(ae(`error: backend ${e.config.backend} not found in registry`),e.config.backend=he.node?"tensorflow":"webgl",e.config.debug&&ae(`override: setting backend ${e.config.backend}`)),e.config.debug&&ae("setting backend:",e.config.backend),e.config.backend==="wasm"){if(j().flagRegistry.CANVAS2D_WILL_READ_FREQUENTLY&&j().set("CANVAS2D_WILL_READ_FREQUENTLY",!0),e.config.debug&&ae("wasm path:",e.config.wasmPath),typeof E2!="undefined")E2(e.config.wasmPath,e.config.wasmPlatformFetch);else throw new Error("backend error: attempting to use wasm backend but wasm path is not set");let r=!1,a=!1;try{r=await j().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"),a=await j().getAsync("WASM_HAS_SIMD_SUPPORT"),e.config.debug&&ae(`wasm execution: ${a?"simd":"no simd"} ${r?"multithreaded":"singlethreaded"}`),e.config.debug&&!a&&ae("warning: wasm simd support is not enabled")}catch(o){ae("wasm detection failed")}}try{await By(e.config.backend),await Wc(),$T()}catch(r){return ae("error: cannot set backend:",e.config.backend,r),!1}}if(Ln()==="humangl"&&(j().flagRegistry.CHECK_COMPUTATION_FOR_ERRORS&&j().set("CHECK_COMPUTATION_FOR_ERRORS",!1),j().flagRegistry.WEBGL_CPU_FORWARD&&j().set("WEBGL_CPU_FORWARD",!0),j().flagRegistry.WEBGL_USE_SHAPES_UNIFORMS&&j().set("WEBGL_USE_SHAPES_UNIFORMS",!0),j().flagRegistry.CPU_HANDOFF_SIZE_THRESHOLD&&j().set("CPU_HANDOFF_SIZE_THRESHOLD",256),j().flagRegistry.WEBGL_EXP_CONV&&j().set("WEBGL_EXP_CONV",!0),j().flagRegistry.USE_SETTIMEOUTCUSTOM&&j().set("USE_SETTIMEOUTCUSTOM",!0),typeof e.config.deallocate!="undefined"&&e.config.deallocate&&(ae("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),j().set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),Bn().getGPGPUContext)){let s=await Bn().getGPGPUContext().gl;e.config.debug&&ae(`gl version:${s.getParameter(s.VERSION)} renderer:${s.getParameter(s.RENDERER)}`)}Ln(),zy(),await Wc(),e.performance.initBackend=Math.trunc(ie()-n),e.config.backend=Ln(),await he.updateBackend(),uxe()}return!0}function u1(e,t){for(let n of e){let s={kernelName:n,backendName:t.backend,kernelFunc:()=>{t.debug&&ae("kernelFunc",n,t.backend)}};ur(s)}he.kernels=Xr(Ln()).map(n=>n.kernelName.toLowerCase())}var gn=[null,null],dxe=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],Ci=[[0,0],[0,0]],pxe=["hand","fist","pinch","point","face","tip","pinchtip"],bE=4,vE=1.6,hxe=512,fxe=1.4,c1=Number.MAX_SAFE_INTEGER,u4=0,Pa=[0,0],Yt={boxes:[],hands:[]},wE={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function kE(e){var t;if(he.initial&&(gn[0]=null),gn[0])e.debug&&ae("cached model:",gn[0].modelUrl);else{u1(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),gn[0]=await je((t=e.hand.detector)==null?void 0:t.modelPath);let n=Object.values(gn[0].modelSignature.inputs);Ci[0][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,Ci[0][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return gn[0]}async function IE(e){var t;if(he.initial&&(gn[1]=null),gn[1])e.debug&&ae("cached model:",gn[1].modelUrl);else{gn[1]=await je((t=e.hand.skeleton)==null?void 0:t.modelPath);let n=Object.values(gn[1].modelSignature.inputs);Ci[1][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,Ci[1][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return gn[1]}async function mxe(e,t){let n=[];if(!e||!gn[0])return n;let s={},r=(e.shape[2]||1)/(e.shape[1]||1),a=Math.min(Math.round((e.shape[1]||0)/8)*8,hxe),o=Math.round(a*r/8)*8;s.resize=Se.resizeBilinear(e,[a,o]),s.cast=ye(s.resize,"int32"),[s.rawScores,s.rawBoxes]=await gn[0].executeAsync(s.cast,dxe),s.boxes=st(s.rawBoxes,[0,2]),s.scores=st(s.rawScores,[0]);let i=En(s.scores,1);J(i[bE]),i.splice(bE,1),s.filtered=an(i,1),J(i),s.max=hn(s.filtered,1),s.argmax=Rs(s.filtered,1);let l=0;s.nms=await Se.nonMaxSuppressionAsync(s.boxes,s.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);let u=await s.nms.data(),c=await s.max.data(),p=await s.argmax.data();for(let d of Array.from(u)){let h=ze(s.boxes,d,1),f=await h.data();J(h);let m=[f[1],f[0],f[3]-f[1],f[2]-f[0]],g=q2(m,fxe),y=[Math.trunc(m[0]*Pa[0]),Math.trunc(m[1]*Pa[1]),Math.trunc(m[2]*Pa[0]),Math.trunc(m[3]*Pa[1])],x=c[d],A=pxe[p[d]],b={id:l++,score:x,box:y,boxRaw:g,label:A};n.push(b)}return Object.keys(s).forEach(d=>J(s[d])),n.sort((d,h)=>h.score-d.score),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}async function c4(e,t,n){let s={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&gn[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){let r={},a=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];r.crop=Se.cropAndResize(e,[a],[0],[Ci[1][0],Ci[1][1]],"bilinear"),r.div=fe(r.crop,rt.tf255),[r.score,r.keypoints]=gn[1].execute(r.div,["Identity_1","Identity"]);let o=(await r.score.data())[0],i=(100-Math.trunc(100/(1+Math.exp(o))))/100;if(i>=(n.hand.minConfidence||0)){s.fingerScore=i,r.reshaped=V(r.keypoints,[-1,3]);let c=(await r.reshaped.array()).map(p=>[p[0]/Ci[1][1],p[1]/Ci[1][0],p[2]||0]).map(p=>[p[0]*t.boxRaw[2],p[1]*t.boxRaw[3],p[2]||0]);s.keypoints=c.map(p=>[Pa[0]*(p[0]+t.boxRaw[0]),Pa[1]*(p[1]+t.boxRaw[1]),p[2]||0]),s.landmarks=a1(s.keypoints);for(let p of Object.keys(wE))s.annotations[p]=wE[p].map(d=>s.landmarks&&s.keypoints[d]?s.keypoints[d]:null)}Object.keys(r).forEach(l=>J(r[l]))}return s}async function d4(e,t){if(!gn[0]||!gn[1]||!gn[0].inputs[0].shape||!gn[1].inputs[0].shape)return[];Pa=[e.shape[2]||0,e.shape[1]||0],c1++;let n=(t.hand.skipTime||0)>ie()-u4,s=c1<(t.hand.skipFrames||0);return t.skipAllowed&&n&&s?Yt.hands:new Promise(async r=>{let a=3*(t.hand.skipTime||0)>ie()-u4,o=c1<3*(t.hand.skipFrames||0);t.skipAllowed&&Yt.hands.length===t.hand.maxDetected?Yt.hands=await Promise.all(Yt.boxes.map(l=>c4(e,l,t))):t.skipAllowed&&a&&o&&Yt.hands.length>0?Yt.hands=await Promise.all(Yt.boxes.map(l=>c4(e,l,t))):(Yt.boxes=await mxe(e,t),u4=ie(),Yt.hands=await Promise.all(Yt.boxes.map(l=>c4(e,l,t))),c1=0);let i=[...Yt.boxes];if(Yt.boxes.length=0,t.cacheSensitivity>0)for(let l=0;l<Yt.hands.length;l++){let u=lN(Yt.hands[l].keypoints,Pa);if(u.box[2]/(e.shape[2]||1)>.05&&u.box[3]/(e.shape[1]||1)>.05&&Yt.hands[l].fingerScore&&Yt.hands[l].fingerScore>(t.hand.minConfidence||0)){let c=q2(u.box,vE),p=q2(u.boxRaw,vE);Yt.boxes.push({...i[l],box:c,boxRaw:p})}}for(let l=0;l<Yt.hands.length;l++){let u=Ea(Yt.hands[l].keypoints,Pa);Yt.hands[l].box=u.box,Yt.hands[l].boxRaw=u.boxRaw}r(Yt.hands)})}var Gn,d1=[],p4=Number.MAX_SAFE_INTEGER,CE=0,TE=0;async function NE(e){var t;return he.initial&&(Gn=null),Gn?e.debug&&ae("cached model:",Gn.modelUrl):Gn=await je((t=e.face.liveness)==null?void 0:t.modelPath),Gn}async function h4(e,t,n,s){var o,i;if(!Gn)return 0;let r=(((o=t.face.liveness)==null?void 0:o.skipTime)||0)>ie()-TE,a=p4<(((i=t.face.liveness)==null?void 0:i.skipFrames)||0);return t.skipAllowed&&r&&a&&CE===s&&d1[n]?(p4++,d1[n]):(p4=0,new Promise(async l=>{let u=Se.resizeBilinear(e,[Gn!=null&&Gn.inputs[0].shape?Gn.inputs[0].shape[2]:0,Gn!=null&&Gn.inputs[0].shape?Gn.inputs[0].shape[1]:0],!1),c=Gn==null?void 0:Gn.execute(u),p=(await c.data())[0];d1[n]=Math.round(100*p)/100,CE=s,TE=ie(),J([u,c]),l(d1[n])}))}var Jh={};la(Jh,{connected:()=>h1,horizontal:()=>f4,kpt:()=>p1,relative:()=>g4,vertical:()=>m4});var p1=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],f4=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],m4=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],g4=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],h1={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var RE=.005,Bs={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function y4(e){for(let t of f4){let n=e.keypoints.findIndex(r=>r.part===t[0]),s=e.keypoints.findIndex(r=>r.part===t[1]);if(e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[0]<e.keypoints[s].position[0]){let r=e.keypoints[n];e.keypoints[n]=e.keypoints[s],e.keypoints[s]=r}}for(let t of m4){let n=e.keypoints.findIndex(r=>r&&r.part===t[0]),s=e.keypoints.findIndex(r=>r&&r.part===t[1]);e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[1]<e.keypoints[s].position[1]&&e.keypoints.splice(n,1)}for(let[t,n]of g4){let s=e.keypoints.findIndex(u=>u&&u.part===t[0]),r=e.keypoints.findIndex(u=>u&&u.part===t[1]),a=e.keypoints.findIndex(u=>u&&u.part===n[0]),o=e.keypoints.findIndex(u=>u&&u.part===n[1]);if(!e.keypoints[a]||!e.keypoints[o])continue;let i=e.keypoints[s]?[Math.abs(e.keypoints[a].position[0]-e.keypoints[s].position[0]),Math.abs(e.keypoints[o].position[0]-e.keypoints[s].position[0])]:[0,0],l=e.keypoints[r]?[Math.abs(e.keypoints[o].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[a].position[0]-e.keypoints[r].position[0])]:[0,0];if(i[0]>i[1]||l[0]>l[1]){let u=e.keypoints[s];e.keypoints[s]=e.keypoints[r],e.keypoints[r]=u}}}function _E(e){for(let t=0;t<e.length;t++)if(e[t]&&Bs.keypoints[t]){let n=[Math.abs(e[t].positionRaw[0]-Bs.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-Bs.keypoints[t].positionRaw[1])];n[0]<RE&&n[1]<RE?e[t]=Bs.keypoints[t]:Bs.keypoints[t]=e[t]}else Bs.keypoints[t]=e[t];return e}function DE(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;Bs.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],n.pad=Zs(e,Bs.padding),n.resize=Se.resizeBilinear(n.pad,[t,t]);let s=ye(n.resize,"int32");return Object.keys(n).forEach(r=>J(n[r])),s}function $E(e,t){e.keypoints=e.keypoints.filter(s=>s==null?void 0:s.position);for(let s of e.keypoints)s.position=[s.position[0]*(t[0]+Bs.padding[2][0]+Bs.padding[2][1])/t[0]-Bs.padding[2][0],s.position[1]*(t[1]+Bs.padding[1][0]+Bs.padding[1][1])/t[1]-Bs.padding[1][0]],s.positionRaw=[s.position[0]/t[0],s.position[1]/t[1]];let n=Ea(e.keypoints.map(s=>s.position),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var Ar,f1=0,A4=Number.MAX_SAFE_INTEGER,xu={boxes:[],bodies:[],last:0};async function PE(e){return he.initial&&(Ar=null),Ar?e.debug&&ae("cached model:",Ar.modelUrl):(u1(["size"],e),Ar=await je(e.body.modelPath)),f1=Ar.inputs[0].shape?Ar.inputs[0].shape[2]:0,f1<64&&(f1=256),Ar}function yxe(e,t,n){let s=e[0][0],r=[],a=0;for(let c=0;c<s.length;c++)if(a=s[c][2],a>t.body.minConfidence){let p=[s[c][1],s[c][0]];r.push({score:Math.round(100*a)/100,part:p1[c],positionRaw:p,position:[Math.round((n.shape[2]||0)*p[0]),Math.round((n.shape[1]||0)*p[1])]})}a=r.reduce((c,p)=>p.score>c?p.score:c,0);let o=[],i=Ea(r.map(c=>c.position),[n.shape[2],n.shape[1]]),l={};for(let[c,p]of Object.entries(h1)){let d=[];for(let h=0;h<p.length-1;h++){let f=r.find(g=>g.part===p[h]),m=r.find(g=>g.part===p[h+1]);f&&m&&f.score>(t.body.minConfidence||0)&&m.score>(t.body.minConfidence||0)&&d.push([f.position,m.position])}l[c]=d}let u={id:0,score:a,box:i.box,boxRaw:i.boxRaw,keypoints:r,annotations:l};return y4(u),o.push(u),o}function Axe(e,t,n){let s=[];for(let r=0;r<e[0].length;r++){let a=e[0][r],o=Math.round(100*a[51+4])/100;if(o>t.body.minConfidence){let i=[];for(let p=0;p<17;p++){let d=a[3*p+2];if(d>t.body.minConfidence){let h=[a[3*p+1],a[3*p+0]];i.push({part:p1[p],score:Math.round(100*d)/100,positionRaw:h,position:[Math.round((n.shape[2]||0)*h[0]),Math.round((n.shape[1]||0)*h[1])]})}}let l=Ea(i.map(p=>p.position),[n.shape[2],n.shape[1]]),u={};for(let[p,d]of Object.entries(h1)){let h=[];for(let f=0;f<d.length-1;f++){let m=i.find(y=>y.part===d[f]),g=i.find(y=>y.part===d[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&h.push([m.position,g.position])}u[p]=h}let c={id:r,score:o,box:l.box,boxRaw:l.boxRaw,keypoints:[...i],annotations:u};y4(c),s.push(c)}}return s.sort((r,a)=>a.score-r.score),s.length>t.body.maxDetected&&(s.length=t.body.maxDetected),s}async function x4(e,t){if(!Ar||!Ar.inputs[0].shape)return[];t.skipAllowed||(xu.boxes.length=0),A4++;let n=(t.body.skipTime||0)>ie()-xu.last,s=A4<(t.body.skipFrames||0);return t.skipAllowed&&n&&s?xu.bodies:new Promise(async r=>{let a={};A4=0,a.input=DE(e,f1),a.res=Ar==null?void 0:Ar.execute(a.input),xu.last=ie();let o=await a.res.array();xu.bodies=a.res.shape[2]===17?yxe(o,t,e):Axe(o,t,e);for(let i of xu.bodies)$E(i,[e.shape[2]||1,e.shape[1]||1]),_E(i.keypoints);Object.keys(a).forEach(i=>J(a[i])),r(xu.bodies)})}var Nd,m1=[],OE=0,b4=Number.MAX_SAFE_INTEGER,y1=0,g1=2.5;async function ME(e){if(!Nd||he.initial){Nd=await je(e.object.modelPath);let t=Object.values(Nd.modelSignature.inputs);y1=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&ae("cached model:",Nd.modelUrl);return Nd}async function xxe(e,t,n){let s=0,r=[],a=y1;for(let u of[1,2,4]){let c=u*13,p=st(e.find(y=>y.shape[1]===c**2&&(y.shape[2]||0)===wd.length)),d=await p.array(),h=st(e.find(y=>y.shape[1]===c**2&&(y.shape[2]||0)<wd.length)),f=h.reshape([-1,4,h.shape[1]/4]),m=f.argMax(2),g=await m.array();for(let y=0;y<p.shape[0];y++)for(let x=0;x<p.shape[1];x++){let A=d[y][x];if(A>(n.object.minConfidence||0)&&x!==61){let b=(.5+Math.trunc(y%c))/c,w=(.5+Math.trunc(y/c))/c,I=g[y].map(M=>M*(c/u/a)),[k,R]=[b-g1/u*I[0],w-g1/u*I[1]],[_,D]=[b+g1/u*I[2]-k,w+g1/u*I[3]-R],E=[k,R,_,D];E=E.map(M=>Math.max(0,Math.min(M,1)));let P=[E[0]*t[0],E[1]*t[1],E[2]*t[0],E[3]*t[1]],C={id:s++,score:Math.round(100*A)/100,class:x+1,label:wd[x].label,box:P.map(M=>Math.trunc(M)),boxRaw:E};r.push(C)}}J([p,h,f,m])}let o=r.map(u=>[u.boxRaw[1],u.boxRaw[0],u.boxRaw[3],u.boxRaw[2]]),i=r.map(u=>u.score),l=[];if(o&&o.length>0){let u=await Se.nonMaxSuppressionAsync(o,i,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence);l=await u.data(),J(u)}return r=r.filter((u,c)=>l.includes(c)).sort((u,c)=>c.score-u.score),r}async function v4(e,t){let n=(t.object.skipTime||0)>ie()-OE,s=b4<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&m1.length>0?(b4++,m1):(b4=0,!he.kernels.includes("mod")||!he.kernels.includes("sparsetodense")?m1:new Promise(async r=>{let a=[e.shape[2]||0,e.shape[1]||0],o=Se.resizeBilinear(e,[y1,y1],!1),i=fe(o,rt.tf255),l=et(i,[0,3,1,2]),u;t.object.enabled&&(u=Nd.execute(l)),OE=ie();let c=await xxe(u,a,t);m1=c,J([o,i,l,...u]),r(c)}))}var ef=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],bxe=ef.length,Qh=ef.reduce((e,t,n)=>(e[t]=n,e),{}),vxe=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]],PIe=vxe.map(([e,t])=>[Qh[e],Qh[t]]),LE=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];function BE(e){let t=e.reduce(({maxX:n,maxY:s,minX:r,minY:a},{position:{x:o,y:i}})=>({maxX:Math.max(n,o),maxY:Math.max(s,i),minX:Math.min(r,o),minY:Math.min(a,i)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function WE(e,[t,n],[s,r]){let a=t/s,o=n/r,i=(u,c)=>({id:c,score:u.score,boxRaw:[u.box[0]/r,u.box[1]/s,u.box[2]/r,u.box[3]/s],box:[Math.trunc(u.box[0]*o),Math.trunc(u.box[1]*a),Math.trunc(u.box[2]*o),Math.trunc(u.box[3]*a)],keypoints:u.keypoints.map(({score:p,part:d,position:h})=>({score:p,part:d,position:[Math.trunc(h.x*o),Math.trunc(h.y*a)],positionRaw:[h.x/s,h.y/s]})),annotations:{}});return e.map((u,c)=>i(u,c))}var A1=class{constructor(t,n){ge(this,"priorityQueue");ge(this,"numberOfElements");ge(this,"getElementValue");this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=n}enqueue(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)}dequeue(){let t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t}empty(){return this.numberOfElements===-1}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(t){for(;t>0&&this.less(Math.floor(t/2),t);)this.exchange(t,Math.floor(t/2)),t=Math.floor(t/2)}sink(t){for(;2*t<=this.numberOfElements;){let n=2*t;if(n<this.numberOfElements&&this.less(n,n+1)&&n++,!this.less(t,n))break;this.exchange(t,n),t=n}}getValueAt(t){return this.getElementValue(this.priorityQueue[t])}less(t,n){return this.getValueAt(t)<this.getValueAt(n)}exchange(t,n){let s=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[n],this.priorityQueue[n]=s}};function w4(e,t,n,s){return{y:s.get(e,t,n),x:s.get(e,t,n+bxe)}}function k4(e,t,n){let{heatmapY:s,heatmapX:r,id:a}=e,{y:o,x:i}=w4(s,r,a,n);return{x:e.heatmapX*t+i,y:e.heatmapY*t+o}}function I4(e,t,n){return e<t?t:e>n?n:e}function VE(e,t,n,s){let r=n-e,a=s-t;return r*r+a*a}function S4(e,t){return{x:e.x+t.x,y:e.y+t.y}}var Br,kxe=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],x1=1,Ed=16,Ixe=50**2;function UE(e,t,n,s,r,a,o=2){let i=y=>({y:a.get(y.y,y.x,e),x:a.get(y.y,y.x,a.shape[2]/2+e)}),l=(y,x,A)=>({y:I4(Math.round(y.y/Ed),0,x-1),x:I4(Math.round(y.x/Ed),0,A-1)}),[u,c]=s.shape,p=l(t.position,u,c),d=i(p),f=S4(t.position,d);for(let y=0;y<o;y++){let x=l(f,u,c),A=w4(x.y,x.x,n,r);f=S4({x:x.x*Ed,y:x.y*Ed},{x:A.x,y:A.y})}let m=l(f,u,c),g=s.get(m.y,m.x,n);return{position:f,part:ef[n],score:g}}function Sxe(e,t,n,s,r){let a=LE.map(([d,h])=>[Qh[d],Qh[h]]),o=a.map(([,d])=>d),i=a.map(([d])=>d),l=t.shape[2],u=o.length,c=new Array(l),p=k4(e.part,Ed,n);c[e.part.id]={score:e.score,part:ef[e.part.id],position:p};for(let d=u-1;d>=0;--d){let h=o[d],f=i[d];c[h]&&!c[f]&&(c[f]=UE(d,c[h],f,t,n,r))}for(let d=0;d<u;++d){let h=i[d],f=o[d];c[h]&&!c[f]&&(c[f]=UE(d,c[h],f,t,n,s))}return c}function Cxe(e,t,n,s,r){let[a,o]=r.shape,i=!0,l=Math.max(n-x1,0),u=Math.min(n+x1+1,a);for(let c=l;c<u;++c){let p=Math.max(s-x1,0),d=Math.min(s+x1+1,o);for(let h=p;h<d;++h)if(r.get(c,h,e)>t){i=!1;break}if(!i)break}return i}function Txe(e,t){let[n,s,r]=t.shape,a=new A1(n*s*r,({score:o})=>o);for(let o=0;o<n;++o)for(let i=0;i<s;++i)for(let l=0;l<r;++l){let u=t.get(o,i,l);u<e||Cxe(l,u,o,i,t)&&a.enqueue({score:u,part:{heatmapY:o,heatmapX:i,id:l}})}return a}function GE(e,{x:t,y:n},s){return e.some(({keypoints:r})=>{var o;let a=(o=r[s])==null?void 0:o.position;return a?VE(n,t,a.y,a.x)<=Ixe:!1})}function Nxe(e,t){return t.reduce((s,{position:r,score:a},o)=>(GE(e,r,o)||(s+=a),s),0)/t.length}function Exe(e,t,n,s,r,a){let o=[],i=Txe(a,t);for(;o.length<r&&!i.empty();){let l=i.dequeue(),u=k4(l.part,Ed,e);if(GE(o,u,l.part.id))continue;let c=Sxe(l,t,e,n,s);c=c.filter(h=>h.score>a);let p=Nxe(o,c),d=BE(c);p>a&&o.push({keypoints:c,box:d,score:Math.round(100*p)/100})}return o}async function C4(e,t){let n=Z(()=>{if(!Br.inputs[0].shape)return[];let o=Se.resizeBilinear(e,[Br.inputs[0].shape[2],Br.inputs[0].shape[1]]),i=me(fe(ye(o,"float32"),127.5),1),u=Br.execute(i,kxe).map(c=>st(c,[0]));return u[1]=Cn(u[1]),u}),s=await Promise.all(n.map(o=>o.buffer()));for(let o of n)J(o);let r=Exe(s[0],s[1],s[2],s[3],t.body.maxDetected,t.body.minConfidence);return Br.inputs[0].shape?WE(r,[e.shape[1],e.shape[2]],[Br.inputs[0].shape[2],Br.inputs[0].shape[1]]):[]}async function HE(e){return!Br||he.initial?Br=await je(e.body.modelPath):e.debug&&ae("cached model:",Br.modelUrl),Br}var sa,T4=!1;async function N4(e){return!sa||he.initial?sa=await je(e.segmentation.modelPath):e.debug&&ae("cached model:",sa.modelUrl),sa}async function qE(e,t,n){var m,g;if(T4)return{data:[],canvas:null,alpha:null};T4=!0,sa||await N4(n);let s=await Ad(e,n),r=((m=s.tensor)==null?void 0:m.shape[2])||0,a=((g=s.tensor)==null?void 0:g.shape[1])||0;if(!s.tensor)return{data:[],canvas:null,alpha:null};let o={};o.resize=Se.resizeBilinear(s.tensor,[sa.inputs[0].shape?sa.inputs[0].shape[1]:0,sa.inputs[0].shape?sa.inputs[0].shape[2]:0],!1),J(s.tensor),o.norm=fe(o.resize,rt.tf255),o.res=sa.execute(o.norm),o.squeeze=st(o.res,0),o.squeeze.shape[2]===2?(o.softmax=Ql(o.squeeze),[o.bg,o.fg]=En(o.softmax,2),o.expand=Lt(o.fg,2),o.pad=Lt(o.expand,0),o.crop=Se.cropAndResize(o.pad,[[0,0,.5,.5]],[0],[r,a]),o.data=st(o.crop,0)):o.data=Se.resizeBilinear(o.squeeze,[a,r]);let i=Array.from(await o.data.data());if(he.node&&!he.Canvas&&typeof ImageData=="undefined")return n.debug&&ae("canvas support missing"),Object.keys(o).forEach(y=>J(o[y])),{data:i,canvas:null,alpha:null};let l=ls(r,a);Ks&&await Ks.toPixels(o.data,l);let u=l.getContext("2d");n.segmentation.blur&&n.segmentation.blur>0&&(u.filter=`blur(${n.segmentation.blur}px)`);let c=u.getImageData(0,0,r,a),p=ls(r,a),d=p.getContext("2d");s.canvas&&d.drawImage(s.canvas,0,0),d.globalCompositeOperation="darken",n.segmentation.blur&&n.segmentation.blur>0&&(d.filter=`blur(${n.segmentation.blur}px)`),d.drawImage(l,0,0),d.globalCompositeOperation="source-over",d.filter="none";let h=d.getImageData(0,0,r,a);for(let y=0;y<r*a;y++)h.data[4*y+3]=c.data[4*y+0];d.putImageData(h,0,0);let f=null;if(t&&p){f=ls(r,a);let y=await Ad(t,n);J(y.tensor);let x=f.getContext("2d");x.drawImage(y.canvas,0,0,f.width,f.height),x.drawImage(p,0,0)}return Object.keys(o).forEach(y=>J(o[y])),T4=!1,{data:i,canvas:p,alpha:l}}var tf=class{constructor(){ge(this,"ssrnetage",null);ge(this,"gear",null);ge(this,"blazeposedetect",null);ge(this,"blazepose",null);ge(this,"centernet",null);ge(this,"efficientpose",null);ge(this,"mobilefacenet",null);ge(this,"insightface",null);ge(this,"emotion",null);ge(this,"facedetect",null);ge(this,"faceiris",null);ge(this,"facemesh",null);ge(this,"faceres",null);ge(this,"ssrnetgender",null);ge(this,"handpose",null);ge(this,"handskeleton",null);ge(this,"handtrack",null);ge(this,"liveness",null);ge(this,"movenet",null);ge(this,"nanodet",null);ge(this,"posenet",null);ge(this,"segmentation",null);ge(this,"antispoof",null)}},E4=e=>{let t=0,n=0,s=0;for(let a of Object.values(Wr))t+=a.sizeFromManifest,n+=a.sizeLoadedWeights,s+=a.sizeDesired;let r=s>0?n/s:0;return{numLoadedModels:Object.values(Wr).length,numEnabledModels:void 0,numDefinedModels:Object.keys(e.models).length,percentageLoaded:r,totalSizeFromManifest:t,totalSizeWeights:n,totalSizeLoading:s,totalSizeEnabled:void 0,modelStats:Object.values(Wr)}};function o1(e){for(let t of Object.keys(e.models))e.models[t]=null}async function R4(e){var t,n,s,r,a,o,i,l,u,c,p,d,h,f,m,g,y,x,A,b,w,I,k,R,_,D;he.initial&&o1(e),e.config.hand.enabled&&(!e.models.handpose&&((n=(t=e.config.hand.detector)==null?void 0:t.modelPath)==null?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await l4(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&((r=(s=e.config.hand.detector)==null?void 0:s.modelPath)==null?void 0:r.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await l4(e.config))),e.config.body.enabled&&!e.models.blazepose&&((a=e.config.body.modelPath)==null?void 0:a.includes("blazepose"))&&(e.models.blazepose=hN(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&e.config.body.detector&&e.config.body.detector.modelPath&&(e.models.blazeposedetect=pN(e.config)),e.config.body.enabled&&!e.models.efficientpose&&((o=e.config.body.modelPath)==null?void 0:o.includes("efficientpose"))&&(e.models.efficientpose=xN(e.config)),e.config.body.enabled&&!e.models.movenet&&((i=e.config.body.modelPath)==null?void 0:i.includes("movenet"))&&(e.models.movenet=PE(e.config)),e.config.body.enabled&&!e.models.posenet&&((l=e.config.body.modelPath)==null?void 0:l.includes("posenet"))&&(e.models.posenet=HE(e.config)),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=sN(e.config)),e.config.face.enabled&&((u=e.config.face.antispoof)==null?void 0:u.enabled)&&!e.models.antispoof&&(e.models.antispoof=GT(e.config)),e.config.face.enabled&&((c=e.config.face.liveness)==null?void 0:c.enabled)&&!e.models.liveness&&(e.models.liveness=NE(e.config)),e.config.face.enabled&&((p=e.config.face.description)==null?void 0:p.enabled)&&!e.models.faceres&&(e.models.faceres=KN(e.config)),e.config.face.enabled&&((d=e.config.face.emotion)==null?void 0:d.enabled)&&!e.models.emotion&&(e.models.emotion=kN(e.config)),e.config.face.enabled&&((h=e.config.face.iris)==null?void 0:h.enabled)&&!((f=e.config.face.attention)!=null&&f.enabled)&&!e.models.faceiris&&(e.models.faceiris=zN(e.config)),e.config.face.enabled&&((m=e.config.face.mesh)==null?void 0:m.enabled)&&!e.models.facemesh&&(e.models.facemesh=GN(e.config)),e.config.face.enabled&&((g=e.config.face.gear)==null?void 0:g.enabled)&&!e.models.gear&&(e.models.gear=_T(e.config)),e.config.face.enabled&&((y=e.config.face.ssrnet)==null?void 0:y.enabled)&&!e.models.ssrnetage&&(e.models.ssrnetage=OT(e.config)),e.config.face.enabled&&((x=e.config.face.ssrnet)==null?void 0:x.enabled)&&!e.models.ssrnetgender&&(e.models.ssrnetgender=BT(e.config)),e.config.face.enabled&&((A=e.config.face.mobilefacenet)==null?void 0:A.enabled)&&!e.models.mobilefacenet&&(e.models.mobilefacenet=NN(e.config)),e.config.face.enabled&&((b=e.config.face.insightface)==null?void 0:b.enabled)&&!e.models.insightface&&(e.models.insightface=$N(e.config)),e.config.hand.enabled&&!e.models.handtrack&&((I=(w=e.config.hand.detector)==null?void 0:w.modelPath)==null?void 0:I.includes("handtrack"))&&(e.models.handtrack=kE(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&((R=(k=e.config.hand.detector)==null?void 0:k.modelPath)==null?void 0:R.includes("handtrack"))&&(e.models.handskeleton=IE(e.config)),e.config.object.enabled&&!e.models.centernet&&((_=e.config.object.modelPath)==null?void 0:_.includes("centernet"))&&(e.models.centernet=gN(e.config)),e.config.object.enabled&&!e.models.nanodet&&((D=e.config.object.modelPath)==null?void 0:D.includes("nanodet"))&&(e.models.nanodet=ME(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=N4(e.config));for await(let E of Object.keys(e.models))e.models[E]&&typeof e.models[E]!="undefined"&&(e.models[E]=await e.models[E])}var Qs;function Rd(e,t,n){var u;if(e&&(Qs=e),!t||(Qs||ae("instance not registred"),!Qs.config.validateModels))return null;let s=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"],r=["biasadd","fusedbatchnormv3","matmul"],a=[],o=[],i=t.modelUrl,l=t.executor;if((u=l==null?void 0:l.graph)!=null&&u.nodes)for(let c of Object.values(l.graph.nodes)){let p=c.op.toLowerCase();a.includes(p)||a.push(p)}else!l&&Qs.config.debug&&ae("model signature not determined:",n);for(let c of a)!s.includes(c)&&!r.includes(c)&&!Qs.env.kernels.includes(c)&&!Qs.env.kernels.includes(c.replace("_",""))&&!Qs.env.kernels.includes(c.replace("native",""))&&!Qs.env.kernels.includes(c.replace("v2",""))&&o.push(c);return Qs.config.debug&&o.length>0&&ae("model validation failed:",n,o),o.length>0?{name:n,missing:o,ops:a,url:i}:null}function b1(e){Qs=e;let t=[];for(let n of Object.keys(Qs.models)){let s=Qs.models[n];if(!s)continue;let r=Rd(Qs,s,n);r&&t.push(r)}return t}var ds={cacheModels:!0,cacheSupported:!0,verbose:!0,debug:!1,modelBasePath:""},Wr={};async function Rxe(e,t){return ds.debug&&ae("load model fetch:",e,t),fetch(e,t)}function KE(e){ds.cacheModels=e.cacheModels,ds.verbose=e.debug,ds.modelBasePath=e.modelBasePath}async function je(e){var u,c,p;let t=fv(ds.modelBasePath,e||"");t.toLowerCase().endsWith(".json")||(t+=".json");let n=t.includes("/")?t.split("/"):t.split("\\"),s=n[n.length-1].replace(".json",""),r="indexeddb://"+s;Wr[s]={name:s,sizeFromManifest:0,sizeLoadedWeights:0,sizeDesired:gb[s],inCache:!1},ds.cacheSupported=typeof window!="undefined"&&typeof window.localStorage!="undefined"&&typeof window.indexedDB!="undefined";let a={};try{a=ds.cacheSupported&&ds.cacheModels?await Ns.listModels():{}}catch(d){ds.cacheSupported=!1}Wr[s].inCache=ds.cacheSupported&&ds.cacheModels&&Object.keys(a).includes(r);let o=typeof fetch=="undefined"?{}:{fetchFunc:(d,h)=>Rxe(d,h)},i=new Ph(Wr[s].inCache?r:t,o),l=!1;try{i.findIOHandler(),ds.debug&&ae("model load handler:",i.handler);let d=await i.handler.load();Wr[s].sizeFromManifest=((u=d==null?void 0:d.weightData)==null?void 0:u.byteLength)||0,i.loadSync(d),Wr[s].sizeLoadedWeights=((p=(c=i.artifacts)==null?void 0:c.weightData)==null?void 0:p.byteLength)||0,ds.verbose&&ae("load model:",i.modelUrl,{bytes:Wr[s].sizeLoadedWeights},ds),l=!0}catch(d){ae("error loading model:",t,d)}if(l&&ds.cacheModels&&ds.cacheSupported&&!Wr[s].inCache)try{let d=await i.save(r);ae("model saved:",r,d)}catch(d){ae("error saving model:",t,d)}return Rd(null,i,`${e||""}`),i}var _4="2.9.4";var z4={};la(z4,{all:()=>M4,body:()=>Dd,canvas:()=>O4,face:()=>_d,gesture:()=>Fd,hand:()=>$d,object:()=>Pd,options:()=>Hn,person:()=>F4});var er=e=>{if(!e)ae("draw error: invalid canvas");else if(!e.getContext)ae("draw error: canvas context not defined");else{let t=e.getContext("2d");if(!t)ae("draw error: cannot get canvas context");else return t}return null},bu=e=>Math.round(e*180/Math.PI),Fa=(e,t)=>{if(!t.useDepth||typeof e=="undefined")return t.color;let n=Uint8ClampedArray.from([127+2*e,127-2*e,255]);return`rgba(${n[0]}, ${n[1]}, ${n[2]}, ${t.alpha})`};function Oa(e,t,n,s,r){e.fillStyle=Fa(s,r),e.beginPath(),e.arc(t,n,r.pointSize,0,2*Math.PI),e.fill()}function ra(e,t,n,s,r,a){if(e.beginPath(),e.lineWidth=a.lineWidth,a.useCurves){let o=(t+t+s)/2,i=(n+n+r)/2;e.ellipse(o,i,s/2,r/2,0,0,2*Math.PI)}else e.moveTo(t+a.roundRect,n),e.lineTo(t+s-a.roundRect,n),e.quadraticCurveTo(t+s,n,t+s,n+a.roundRect),e.lineTo(t+s,n+r-a.roundRect),e.quadraticCurveTo(t+s,n+r,t+s-a.roundRect,n+r),e.lineTo(t+a.roundRect,n+r),e.quadraticCurveTo(t,n+r,t,n+r-a.roundRect),e.lineTo(t,n+a.roundRect),e.quadraticCurveTo(t,n,t+a.roundRect,n),e.closePath();e.stroke()}function D4(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(let s of t)e.strokeStyle=Fa(s[2]||0,n),e.lineTo(Math.trunc(s[0]),Math.trunc(s[1]));e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function ZE(e,t,n){if(!(t.length<2)){if(e.lineWidth=n.lineWidth,!n.useCurves||t.length<=2){D4(e,t,n);return}e.moveTo(t[0][0],t[0][1]);for(let s=0;s<t.length-2;s++){let r=(t[s][0]+t[s+1][0])/2,a=(t[s][1]+t[s+1][1])/2;e.quadraticCurveTo(t[s][0],t[s][1],r,a)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function $4(e,t,n,s=5){let r,a,o;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),r=Math.atan2(n[1]-t[1],n[0]-t[0]),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.moveTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),e.closePath(),e.stroke(),e.fill()}var Hn={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",alpha:.5,font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawAttention:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1};var ft;function $xe(e,t){var n,s;if(ft.drawLabels){let r=[];if(r.push(`face: ${Math.trunc(100*e.score)}%`),e.genderScore&&r.push(`${e.gender||""} ${Math.trunc(100*e.genderScore)}%`),e.age&&r.push(`age: ${e.age||""}`),e.iris&&r.push(`distance: ${e.iris}`),e.real&&r.push(`real: ${Math.trunc(100*e.real)}%`),e.live&&r.push(`live: ${Math.trunc(100*e.live)}%`),e.emotion&&e.emotion.length>0){let a=e.emotion.map(o=>`${Math.trunc(100*o.score)}% ${o.emotion}`);a.length>3&&(a.length=3),r.push(a.join(" "))}((n=e.rotation)==null?void 0:n.angle)&&((s=e.rotation)==null?void 0:s.gaze)&&(e.rotation.angle.roll&&r.push(`roll: ${bu(e.rotation.angle.roll)}\xB0 yaw:${bu(e.rotation.angle.yaw)}\xB0 pitch:${bu(e.rotation.angle.pitch)}\xB0`),e.rotation.gaze.bearing&&r.push(`gaze: ${bu(e.rotation.gaze.bearing)}\xB0`)),r.length===0&&r.push("face"),t.fillStyle=ft.color;for(let a=r.length-1;a>=0;a--){let o=Math.max(e.box[0],0),i=a*ft.lineHeight+e.box[1];ft.shadowColor&&ft.shadowColor!==""&&(t.fillStyle=ft.shadowColor,t.fillText(r[a],o+5,i+16)),t.fillStyle=ft.labelColor,t.fillText(r[a],o+4,i+15)}}}function Pxe(e,t){var n,s,r,a;if(((n=e.annotations)==null?void 0:n.leftEyeIris)&&((s=e.annotations)==null?void 0:s.leftEyeIris[0])){t.strokeStyle=ft.useDepth?"rgba(255, 200, 255, 0.3)":ft.color,t.beginPath();let o=Math.abs(e.annotations.leftEyeIris[3][0]-e.annotations.leftEyeIris[1][0])/2,i=Math.abs(e.annotations.leftEyeIris[4][1]-e.annotations.leftEyeIris[2][1])/2;t.ellipse(e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1],o,i,0,0,2*Math.PI),t.stroke(),ft.fillPolygons&&(t.fillStyle=ft.useDepth?"rgba(255, 255, 200, 0.3)":ft.color,t.fill())}if(((r=e.annotations)==null?void 0:r.rightEyeIris)&&((a=e.annotations)==null?void 0:a.rightEyeIris[0])){t.strokeStyle=ft.useDepth?"rgba(255, 200, 255, 0.3)":ft.color,t.beginPath();let o=Math.abs(e.annotations.rightEyeIris[3][0]-e.annotations.rightEyeIris[1][0])/2,i=Math.abs(e.annotations.rightEyeIris[4][1]-e.annotations.rightEyeIris[2][1])/2;t.ellipse(e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1],o,i,0,0,2*Math.PI),t.stroke(),ft.fillPolygons&&(t.fillStyle=ft.useDepth?"rgba(255, 255, 200, 0.3)":ft.color,t.fill())}}function Fxe(e,t){var n;if(ft.drawGaze&&((n=e.rotation)==null?void 0:n.angle)&&typeof Path2D!="undefined"){t.strokeStyle="pink";let s=e.box[0]+e.box[2]/2-e.box[3]*bu(e.rotation.angle.yaw)/90,r=e.box[1]+e.box[3]/2+e.box[2]*bu(e.rotation.angle.pitch)/90,a=new Path2D(`
      M ${e.box[0]+e.box[2]/2} ${e.box[1]}
      C
        ${s} ${e.box[1]},
        ${s} ${e.box[1]+e.box[3]},
        ${e.box[0]+e.box[2]/2} ${e.box[1]+e.box[3]}
    `),o=new Path2D(`
      M ${e.box[0]} ${e.box[1]+e.box[3]/2}
      C 
        ${e.box[0]} ${r},
        ${e.box[0]+e.box[2]} ${r},
        ${e.box[0]+e.box[2]} ${e.box[1]+e.box[3]/2}
    `);t.stroke(o),t.stroke(a)}}function Oxe(e,t){var n;if(ft.drawGaze&&((n=e.rotation)==null?void 0:n.gaze.strength)&&e.rotation.gaze.bearing&&e.annotations.leftEyeIris&&e.annotations.rightEyeIris&&e.annotations.leftEyeIris[0]&&e.annotations.rightEyeIris[0]){t.strokeStyle="pink",t.fillStyle="pink";let s=[e.annotations.leftEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.leftEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];$4(t,[e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1]],[s[0],s[1]],4);let r=[e.annotations.rightEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.rightEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];$4(t,[e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1]],[r[0],r[1]],4)}}function Mxe(e,t){if(ft.drawPolygons&&e.mesh.length>=468){t.lineWidth=1;for(let n=0;n<uu.length/3;n++){let s=[uu[n*3+0],uu[n*3+1],uu[n*3+2]].map(r=>e.mesh[r]);D4(t,s,ft)}Pxe(e,t)}}function zxe(e,t){if(ft.drawPoints&&e.mesh.length>=468)for(let n=0;n<e.mesh.length;n++)Oa(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2],ft),ft.drawAttention&&(Kh.includes(n)&&Oa(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]+127,ft),pu.includes(n)&&Oa(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]-127,ft),hu.includes(n)&&Oa(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]-127,ft))}function Lxe(e,t){ft.drawBoxes&&ra(t,e.box[0],e.box[1],e.box[2],e.box[3],ft)}function _d(e,t,n){if(ft=Xt(Hn,n),!t||!e)return;let s=er(e);if(!!s){s.font=ft.font,s.strokeStyle=ft.color,s.fillStyle=ft.color;for(let r of t)Lxe(r,s),$xe(r,s),r.mesh&&r.mesh.length>0&&(zxe(r,s),Mxe(r,s),Fxe(r,s),Oxe(r,s))}}function Dd(e,t,n){let s=Xt(Hn,n);if(!t||!e)return;let r=er(e);if(!!r){r.lineJoin="round";for(let a=0;a<t.length;a++){if(r.strokeStyle=s.color,r.fillStyle=s.color,r.lineWidth=s.lineWidth,r.font=s.font,s.drawBoxes&&t[a].box&&t[a].box.length===4&&(ra(r,t[a].box[0],t[a].box[1],t[a].box[2],t[a].box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`body ${100*t[a].score}%`,t[a].box[0]+3,1+t[a].box[1]+s.lineHeight,t[a].box[2])),r.fillStyle=s.labelColor,r.fillText(`body ${100*t[a].score}%`,t[a].box[0]+2,0+t[a].box[1]+s.lineHeight,t[a].box[2]))),s.drawPoints&&t[a].keypoints)for(let o=0;o<t[a].keypoints.length;o++)!t[a].keypoints[o].score||t[a].keypoints[o].score===0||(r.fillStyle=Fa(t[a].keypoints[o].position[2],s),Oa(r,t[a].keypoints[o].position[0],t[a].keypoints[o].position[1],0,s));if(s.drawLabels&&t[a].keypoints){r.font=s.font;for(let o of t[a].keypoints)!o.score||o.score===0||(r.fillStyle=Fa(o.position[2],s),r.fillText(`${o.part} ${Math.trunc(100*o.score)}%`,o.position[0]+4,o.position[1]+4))}if(s.drawPolygons&&t[a].keypoints&&t[a].annotations)for(let o of Object.values(t[a].annotations))for(let i of o)ZE(r,i,s)}}}function $d(e,t,n){let s=Xt(Hn,n);if(!t||!e)return;let r=er(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a of t){if(s.drawBoxes&&(r.strokeStyle=s.color,r.fillStyle=s.color,ra(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])),r.stroke()),s.drawPoints&&a.keypoints&&a.keypoints.length>0)for(let o of a.keypoints)r.fillStyle=Fa(o[2],s),Oa(r,o[0],o[1],0,s);if(s.drawLabels&&a.annotations){let o=(i,l)=>{if(!i||i.length===0||!i[0])return;let u=i[i.length-1][2]||-256;r.fillStyle=Fa(u,s),r.fillText(l,i[i.length-1][0]+4,i[i.length-1][1]+4)};r.font=s.font,o(a.annotations.index,"index"),o(a.annotations.middle,"middle"),o(a.annotations.ring,"ring"),o(a.annotations.pinky,"pinky"),o(a.annotations.thumb,"thumb"),o(a.annotations.palm,"palm")}if(s.drawPolygons&&a.annotations){let o=i=>{if(!(!i||i.length===0||!i[0]))for(let l=0;l<i.length;l++){r.beginPath();let u=i[l][2]||0;r.strokeStyle=Fa(l*u,s),r.moveTo(i[l>0?l-1:0][0],i[l>0?l-1:0][1]),r.lineTo(i[l][0],i[l][1]),r.stroke()}};r.lineWidth=s.lineWidth,o(a.annotations.index),o(a.annotations.middle),o(a.annotations.ring),o(a.annotations.pinky),o(a.annotations.thumb)}}}}function Pd(e,t,n){let s=Xt(Hn,n);if(!t||!e)return;let r=er(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a of t)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,ra(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels){let o=`${a.label} ${Math.round(100*a.score)}%`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(o,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])}r.stroke()}}}function Fd(e,t,n){let s=Xt(Hn,n);if(!(!t||!e)&&s.drawGestures){let r=er(e);if(!r)return;r.font=s.font,r.fillStyle=s.color;let a=1;for(let o=0;o<t.length;o++){let i=[],l=[];if([i,l]=Object.entries(t[o]),l.length>1&&l[1].length>0){let u=i[1]>0?`#${i[1]}`:"",c=`${i[0]} ${u}: ${l[1]}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(c,8,2+a*s.lineHeight)),r.fillStyle=s.labelColor,r.fillText(c,6,0+a*s.lineHeight),a+=1}}}}var P4=0;function F4(e,t,n){let s=Xt(Hn,n);if(!t||!e)return;let r=er(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a=0;a<t.length;a++)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,ra(r,t[a].box[0],t[a].box[1],t[a].box[2],t[a].box[3],s),s.drawLabels){let o=`person #${a}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,t[a].box[0]+3,1+t[a].box[1]+s.lineHeight,t[a].box[2])),r.fillStyle=s.labelColor,r.fillText(o,t[a].box[0]+2,0+t[a].box[1]+s.lineHeight,t[a].box[2])}r.stroke()}}}function O4(e,t){if(!e||!t)return;let n=er(t);!n||n.drawImage(e,0,0)}async function M4(e,t,n){if(!t||!t.performance||!t||!e)return null;let s=ie(),r=Xt(Hn,n),a=Promise.all([_d(e,t.face,r),Dd(e,t.body,r),$d(e,t.hand,r),Pd(e,t.object,r),Fd(e,t.gesture,r)]);return P4=he.perfadd?P4+Math.round(ie()-s):Math.round(ie()-s),t.performance.draw=P4,a}var Od=.1,L4=.5;function Bxe(e,t,n){let s=!1,r=n.length-1;for(let a=0;a<n.length;r=a++)n[a].y>t!=n[r].y>t&&e<(n[r].x-n[a].x)*(t-n[a].y)/(n[r].y-n[a].y)+n[a].x&&(s=!s);return s}async function YE(e){if(!e.tensor||!e.mesh||e.mesh.length<100)return e.tensor;let t=e.tensor.shape[2]||0,n=e.tensor.shape[1]||0,s=await e.tensor.buffer(),r=[];for(let o of mr.silhouette)r.push({x:(e.mesh[o][0]-e.box[0])/e.box[2],y:(e.mesh[o][1]-e.box[1])/e.box[3]});Od&&Od>0&&(r=r.map(o=>({x:o.x>.5?o.x+Od:o.x-Od,y:o.y>.5?o.y+Od:o.y-Od})));for(let o=0;o<t;o++)for(let i=0;i<n;i++)Bxe(o/t,i/t,r)||(s.set(L4*s.get(0,i,o,0),0,i,o,0),s.set(L4*s.get(0,i,o,1),0,i,o,1),s.set(L4*s.get(0,i,o,2),0,i,o,2));let a=s.toTensor();return J(s),a}var Vxe=e=>{let t=(p,d)=>Math.atan2(p[1]-d[1],p[0]-d[0]);if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};let n=[0,-.1],s=1,r=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),a=r?e.mesh[473]:e.mesh[468],o=r?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],i=r?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],l=[(o[0]-a[0])/i[0]-n[0],s*(a[1]-o[1])/i[1]-n[1]],u=Math.sqrt(l[0]*l[0]+l[1]*l[1]);return u=Math.min(u,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(t([0,0],l)+Math.PI/2)%Math.PI,strength:u}},JE=(e,t)=>{let n=m=>{let g=Math.sqrt(m[0]*m[0]+m[1]*m[1]+m[2]*m[2]);return m[0]/=g,m[1]/=g,m[2]/=g,m},s=(m,g)=>{let y=m[0]-g[0],x=m[1]-g[1],A=m[2]-g[2];return[y,x,A]},r=(m,g)=>{let y=m[1]*g[2]-m[2]*g[1],x=m[2]*g[0]-m[0]*g[2],A=m[0]*g[1]-m[1]*g[0];return[y,x,A]},a=m=>{let[g,y,x,A,b,w,I,k,R]=m,_,D,E;return A<1?A>-1?(E=Math.asin(A),D=Math.atan2(-I,g),_=Math.atan2(-w,b)):(E=-Math.PI/2,D=-Math.atan2(k,R),_=0):(E=Math.PI/2,D=Math.atan2(k,R),_=0),Number.isNaN(_)&&(_=0),Number.isNaN(D)&&(D=0),Number.isNaN(E)&&(E=0),{pitch:2*-_,yaw:2*-D,roll:2*-E}},o=e.meshRaw;if(!o||o.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};let i=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,l=[o[10],o[152],o[234],o[454]].map(m=>[m[0]*t[0]/i,m[1]*t[1]/i,m[2]]),u=n(s(l[1],l[0])),c=n(s(l[3],l[2])),p=n(r(c,u));c=r(u,p);let d=[c[0],c[1],c[2],u[0],u[1],u[2],p[0],p[1],p[2]],h=a(d),f=o.length===478?Vxe(e):{bearing:0,strength:0};return{angle:h,matrix:d,gaze:f}};var B4=async(e,t)=>{var f,m,g,y,x,A,b,w,I,k,R,_,D,E,P,C,M,W,G,X,K,Y,se,ee,le,re,pe,ce,Ae;let n=ie(),s,r,a,o,i,l,u,c,p,d=[];e.state="run:face";let h=await UN(t,e.config);if(e.performance.face=he.perfadd?(e.performance.face||0)+Math.trunc(ie()-n):Math.trunc(ie()-n),!t.shape||t.shape.length!==4)return[];if(!h)return[];for(let oe=0;oe<h.length;oe++){if(e.analyze("Get Face"),!h[oe].tensor||h[oe].tensor.isDisposedInternal){ae("Face object is disposed:",h[oe].tensor);continue}if((f=e.config.face.detector)!=null&&f.mask){let ot=await YE(h[oe]);J(h[oe].tensor),ot&&(h[oe].tensor=ot)}let Re=h[oe].mesh&&h[oe].mesh.length>200?JE(h[oe],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?o=(m=e.config.face.emotion)!=null&&m.enabled?Hb(h[oe].tensor||ct([]),e.config,oe,h.length):[]:(e.state="run:emotion",n=ie(),o=(g=e.config.face.emotion)!=null&&g.enabled?await Hb(h[oe].tensor||ct([]),e.config,oe,h.length):[],e.performance.emotion=he.perfadd?(e.performance.emotion||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?u=(y=e.config.face.antispoof)!=null&&y.enabled?Cb(h[oe].tensor||ct([]),e.config,oe,h.length):0:(e.state="run:antispoof",n=ie(),u=(x=e.config.face.antispoof)!=null&&x.enabled?await Cb(h[oe].tensor||ct([]),e.config,oe,h.length):0,e.performance.antispoof=he.perfadd?(e.performance.antispoof||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?c=(A=e.config.face.liveness)!=null&&A.enabled?h4(h[oe].tensor||ct([]),e.config,oe,h.length):0:(e.state="run:liveness",n=ie(),c=(b=e.config.face.liveness)!=null&&b.enabled?await h4(h[oe].tensor||ct([]),e.config,oe,h.length):0,e.performance.liveness=he.perfadd?(e.performance.antispoof||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?r=(w=e.config.face.gear)!=null&&w.enabled?xb(h[oe].tensor||ct([]),e.config,oe,h.length):null:(e.state="run:gear",n=ie(),r=(I=e.config.face.gear)!=null&&I.enabled?await xb(h[oe].tensor||ct([]),e.config,oe,h.length):null,e.performance.gear=Math.trunc(ie()-n)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(s=(k=e.config.face.ssrnet)!=null&&k.enabled?vb(h[oe].tensor||ct([]),e.config,oe,h.length):null,a=(R=e.config.face.ssrnet)!=null&&R.enabled?Ib(h[oe].tensor||ct([]),e.config,oe,h.length):null):(e.state="run:ssrnet",n=ie(),s=(_=e.config.face.ssrnet)!=null&&_.enabled?await vb(h[oe].tensor||ct([]),e.config,oe,h.length):null,a=(D=e.config.face.ssrnet)!=null&&D.enabled?await Ib(h[oe].tensor||ct([]),e.config,oe,h.length):null,e.performance.ssrnet=Math.trunc(ie()-n)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?i=(E=e.config.face.mobilefacenet)!=null&&E.enabled?qb(h[oe].tensor||ct([]),e.config,oe,h.length):null:(e.state="run:mobilefacenet",n=ie(),i=(P=e.config.face.mobilefacenet)!=null&&P.enabled?await qb(h[oe].tensor||ct([]),e.config,oe,h.length):null,e.performance.mobilefacenet=Math.trunc(ie()-n)),e.analyze("End MobileFaceNet:"),e.analyze("Start InsightFace:"),e.config.async?l=(C=e.config.face.insightface)!=null&&C.enabled?Kb(h[oe].tensor||ct([]),e.config,oe,h.length):null:(e.state="run:mobilefacenet",n=ie(),l=(M=e.config.face.insightface)!=null&&M.enabled?await Kb(h[oe].tensor||ct([]),e.config,oe,h.length):null,e.performance.mobilefacenet=Math.trunc(ie()-n)),e.analyze("End InsightFace:"),e.analyze("Start Description:"),e.config.async?p=t4(h[oe].tensor||ct([]),e.config,oe,h.length):(e.state="run:description",n=ie(),p=await t4(h[oe].tensor||ct([]),e.config,oe,h.length),e.performance.description=he.perfadd?(e.performance.description||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End Description:"),e.config.async&&([s,a,o,i,l,p,r,u,c]=await Promise.all([s,a,o,i,l,p,r,u,c])),e.analyze("Finish Face:"),((W=e.config.face.ssrnet)==null?void 0:W.enabled)&&s&&a&&(p={...p,age:s.age,gender:a.gender,genderScore:a.genderScore}),((G=e.config.face.gear)==null?void 0:G.enabled)&&r&&(p={...p,age:r.age,gender:r.gender,genderScore:r.genderScore,race:r.race}),((X=e.config.face.mobilefacenet)==null?void 0:X.enabled)&&i&&(p.descriptor=i),((K=e.config.face.insightface)==null?void 0:K.enabled)&&l&&(p.descriptor=l),(Y=e.config.face.iris)!=null&&Y.enabled;let _e=((le=(ee=(se=h[oe])==null?void 0:se.annotations)==null?void 0:ee.leftEyeIris)==null?void 0:le[0])&&((ce=(pe=(re=h[oe])==null?void 0:re.annotations)==null?void 0:pe.rightEyeIris)==null?void 0:ce[0])&&h[oe].annotations.leftEyeIris.length>0&&h[oe].annotations.rightEyeIris.length>0&&h[oe].annotations.leftEyeIris[0]!==null&&h[oe].annotations.rightEyeIris[0]!==null?Math.max(Math.abs(h[oe].annotations.leftEyeIris[3][0]-h[oe].annotations.leftEyeIris[1][0]),Math.abs(h[oe].annotations.rightEyeIris[4][1]-h[oe].annotations.rightEyeIris[2][1]))/t.shape[2]:0,Ve=(Ae=e.config.face.detector)!=null&&Ae.return?st(h[oe].tensor):null;J(h[oe].tensor),h[oe].tensor&&delete h[oe].tensor;let Fe={...h[oe],id:oe};p.age&&(Fe.age=p.age),p.gender&&(Fe.gender=p.gender),p.genderScore&&(Fe.genderScore=p.genderScore),p.descriptor&&(Fe.embedding=p.descriptor),p.race&&(Fe.race=p.race),o&&(Fe.emotion=o),u&&(Fe.real=u),c&&(Fe.live=c),_e&&_e!==0&&(Fe.iris=Math.trunc(500/_e/11.7)/100),Re&&(Fe.rotation=Re),Ve&&(Fe.tensor=Ve),d.push(Fe),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),d};var QE=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=e[n].keypoints.find(l=>l.part==="leftWrist"),r=e[n].keypoints.find(l=>l.part==="rightWrist"),a=e[n].keypoints.find(l=>l.part==="nose");a&&s&&r&&s.position[1]<a.position[1]&&r.position[1]<a.position[1]?t.push({body:n,gesture:"i give up"}):a&&s&&s.position[1]<a.position[1]?t.push({body:n,gesture:"raise left hand"}):a&&r&&r.position[1]<a.position[1]&&t.push({body:n,gesture:"raise right hand"});let o=e[n].keypoints.find(l=>l.part==="leftShoulder"),i=e[n].keypoints.find(l=>l.part==="rightShoulder");o&&i&&Math.abs(o.positionRaw[1]-i.positionRaw[1])>.1&&t.push({body:n,gesture:`leaning ${o.position[1]>i.position[1]?"left":"right"}`})}return t},eR=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){let s=(e[n].mesh[33][2]||0)-(e[n].mesh[263][2]||0),r=e[n].mesh[33][0]-e[n].mesh[263][0];Math.abs(s/r)<=.15?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:`facing ${s<0?"left":"right"}`}),Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"}),Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});let i=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));i>10&&t.push({face:n,gesture:`mouth ${Math.trunc(i)}% open`});let l=e[n].mesh[152][2]||0;Math.abs(l)>10&&t.push({face:n,gesture:`head ${l<0?"up":"down"}`})}return t},tR=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){if(!e[n].annotations||!e[n].annotations.leftEyeIris||!e[n].annotations.leftEyeIris[0]||!e[n].annotations.rightEyeIris||!e[n].annotations.rightEyeIris[0])continue;let s=e[n].annotations.leftEyeIris[3][0]-e[n].annotations.leftEyeIris[1][0],r=e[n].annotations.leftEyeIris[4][1]-e[n].annotations.leftEyeIris[2][1],a=Math.abs(s*r),o=e[n].annotations.rightEyeIris[3][0]-e[n].annotations.rightEyeIris[1][0],i=e[n].annotations.rightEyeIris[4][1]-e[n].annotations.rightEyeIris[2][1],l=Math.abs(o*i),u=!1;Math.abs(a-l)/Math.max(a,l)<.25&&(u=!0,t.push({iris:n,gesture:"facing center"}));let p=Math.abs(e[n].mesh[263][0]-e[n].annotations.leftEyeIris[0][0])/e[n].box[2],d=Math.abs(e[n].mesh[33][0]-e[n].annotations.rightEyeIris[0][0])/e[n].box[2];(p>.06||d>.06)&&(u=!1),p>d?p>.05&&t.push({iris:n,gesture:"looking right"}):d>.05&&t.push({iris:n,gesture:"looking left"});let h=Math.abs(e[n].mesh[145][1]-e[n].annotations.rightEyeIris[0][1])/e[n].box[3],f=Math.abs(e[n].mesh[374][1]-e[n].annotations.leftEyeIris[0][1])/e[n].box[3];(f<.01||h<.01||f>.022||h>.022)&&(u=!1),(f<.01||h<.01)&&t.push({iris:n,gesture:"looking down"}),(f>.022||h>.022)&&t.push({iris:n,gesture:"looking up"}),u&&t.push({iris:n,gesture:"looking center"})}return t},nR=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=[];if(e[n].annotations)for(let[r,a]of Object.entries(e[n].annotations))r!=="palmBase"&&Array.isArray(a)&&a[0]&&s.push({name:r.toLowerCase(),position:a[0]});if(s&&s.length>0){let r=s.reduce((o,i)=>(o.position[2]||0)<(i.position[2]||0)?o:i);t.push({hand:n,gesture:`${r.name} forward`});let a=s.reduce((o,i)=>o.position[1]<i.position[1]?o:i);t.push({hand:n,gesture:`${a.name} up`})}if(e[n].keypoints){let r=fE(e[n].keypoints);for(let a of r)t.push({hand:n,gesture:a.name})}}return t};var Ee={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},W4=0;function sR(e,t){var o,i,l,u,c,p,d,h,f,m,g,y,x,A,b,w,I;let n=ie();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};let s=Date.now()-e.timestamp,r=s<1e3?8-Math.log(s+1):1;if(e.canvas&&(Ee.canvas=e.canvas),e.error&&(Ee.error=e.error),!Ee.body||e.body.length!==Ee.body.length)Ee.body=JSON.parse(JSON.stringify(e.body));else for(let k=0;k<e.body.length;k++){let R=e.body[k].box.map((C,M)=>((r-1)*Ee.body[k].box[M]+C)/r),_=e.body[k].boxRaw.map((C,M)=>((r-1)*Ee.body[k].boxRaw[M]+C)/r),D=e.body[k].keypoints.map((C,M)=>{var W,G,X,K,Y,se,ee,le,re;return{score:C.score,part:C.part,position:[Ee.body[k].keypoints[M]?((r-1)*(Ee.body[k].keypoints[M].position[0]||0)+(C.position[0]||0))/r:C.position[0],Ee.body[k].keypoints[M]?((r-1)*(Ee.body[k].keypoints[M].position[1]||0)+(C.position[1]||0))/r:C.position[1],Ee.body[k].keypoints[M]?((r-1)*(Ee.body[k].keypoints[M].position[2]||0)+(C.position[2]||0))/r:C.position[2]],positionRaw:[Ee.body[k].keypoints[M]?((r-1)*(Ee.body[k].keypoints[M].positionRaw[0]||0)+(C.positionRaw[0]||0))/r:C.positionRaw[0],Ee.body[k].keypoints[M]?((r-1)*(Ee.body[k].keypoints[M].positionRaw[1]||0)+(C.positionRaw[1]||0))/r:C.positionRaw[1],Ee.body[k].keypoints[M]?((r-1)*(Ee.body[k].keypoints[M].positionRaw[2]||0)+(C.positionRaw[2]||0))/r:C.positionRaw[2]],distance:[Ee.body[k].keypoints[M]?((r-1)*(((W=Ee.body[k].keypoints[M].distance)==null?void 0:W[0])||0)+(((G=C.distance)==null?void 0:G[0])||0))/r:(X=C.distance)==null?void 0:X[0],Ee.body[k].keypoints[M]?((r-1)*(((K=Ee.body[k].keypoints[M].distance)==null?void 0:K[1])||0)+(((Y=C.distance)==null?void 0:Y[1])||0))/r:(se=C.distance)==null?void 0:se[1],Ee.body[k].keypoints[M]?((r-1)*(((ee=Ee.body[k].keypoints[M].distance)==null?void 0:ee[2])||0)+(((le=C.distance)==null?void 0:le[2])||0))/r:(re=C.distance)==null?void 0:re[2]]}}),E={},P={connected:{}};(o=t.body.modelPath)!=null&&o.includes("efficientpose")?P=Z2:(i=t.body.modelPath)!=null&&i.includes("blazepose")?P=H2:(l=t.body.modelPath)!=null&&l.includes("movenet")&&(P=Jh);for(let[C,M]of Object.entries(P.connected)){let W=[];for(let G=0;G<M.length-1;G++){let X=D.find(Y=>Y.part===M[G]),K=D.find(Y=>Y.part===M[G+1]);X&&K&&W.push([X.position,K.position])}E[C]=W}Ee.body[k]={...e.body[k],box:R,boxRaw:_,keypoints:D,annotations:E}}if(!Ee.hand||e.hand.length!==Ee.hand.length)Ee.hand=JSON.parse(JSON.stringify(e.hand));else for(let k=0;k<e.hand.length;k++){let R=e.hand[k].box.map((P,C)=>((r-1)*Ee.hand[k].box[C]+P)/r),_=e.hand[k].boxRaw.map((P,C)=>((r-1)*Ee.hand[k].boxRaw[C]+P)/r);Ee.hand[k].keypoints.length!==e.hand[k].keypoints.length&&(Ee.hand[k].keypoints=e.hand[k].keypoints);let D=e.hand[k].keypoints&&e.hand[k].keypoints.length>0?e.hand[k].keypoints.map((P,C)=>P.map((M,W)=>((r-1)*(Ee.hand[k].keypoints[C][W]||1)+(M||0))/r)):[],E={};if(Object.keys(Ee.hand[k].annotations).length!==Object.keys(e.hand[k].annotations).length)Ee.hand[k].annotations=e.hand[k].annotations,E=Ee.hand[k].annotations;else if(e.hand[k].annotations)for(let P of Object.keys(e.hand[k].annotations))E[P]=(p=(c=(u=e.hand[k])==null?void 0:u.annotations)==null?void 0:c[P])!=null&&p[0]?e.hand[k].annotations[P].map((C,M)=>C.map((W,G)=>((r-1)*Ee.hand[k].annotations[P][M][G]+W)/r)):null;Ee.hand[k]={...e.hand[k],box:R,boxRaw:_,keypoints:D,annotations:E}}if(!Ee.face||e.face.length!==Ee.face.length)Ee.face=JSON.parse(JSON.stringify(e.face));else for(let k=0;k<e.face.length;k++){let R=e.face[k].box.map((D,E)=>((r-1)*Ee.face[k].box[E]+D)/r),_=e.face[k].boxRaw.map((D,E)=>((r-1)*Ee.face[k].boxRaw[E]+D)/r);if(e.face[k].rotation){let D={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};D.matrix=(d=e.face[k].rotation)==null?void 0:d.matrix,D.angle={roll:((r-1)*(((h=Ee.face[k].rotation)==null?void 0:h.angle.roll)||0)+(((f=e.face[k].rotation)==null?void 0:f.angle.roll)||0))/r,yaw:((r-1)*(((m=Ee.face[k].rotation)==null?void 0:m.angle.yaw)||0)+(((g=e.face[k].rotation)==null?void 0:g.angle.yaw)||0))/r,pitch:((r-1)*(((y=Ee.face[k].rotation)==null?void 0:y.angle.pitch)||0)+(((x=e.face[k].rotation)==null?void 0:x.angle.pitch)||0))/r},D.gaze={bearing:((r-1)*(((A=Ee.face[k].rotation)==null?void 0:A.gaze.bearing)||0)+(((b=e.face[k].rotation)==null?void 0:b.gaze.bearing)||0))/r,strength:((r-1)*(((w=Ee.face[k].rotation)==null?void 0:w.gaze.strength)||0)+(((I=e.face[k].rotation)==null?void 0:I.gaze.strength)||0))/r},Ee.face[k]={...e.face[k],rotation:D,box:R,boxRaw:_}}Ee.face[k]={...e.face[k],box:R,boxRaw:_}}if(!Ee.object||e.object.length!==Ee.object.length)Ee.object=JSON.parse(JSON.stringify(e.object));else for(let k=0;k<e.object.length;k++){let R=e.object[k].box.map((D,E)=>((r-1)*Ee.object[k].box[E]+D)/r),_=e.object[k].boxRaw.map((D,E)=>((r-1)*Ee.object[k].boxRaw[E]+D)/r);Ee.object[k]={...e.object[k],box:R,boxRaw:_}}if(e.persons){let k=e.persons;if(!Ee.persons||k.length!==Ee.persons.length)Ee.persons=JSON.parse(JSON.stringify(k));else for(let R=0;R<k.length;R++)Ee.persons[R].box=k[R].box.map((_,D)=>((r-1)*Ee.persons[R].box[D]+_)/r)}e.gesture&&(Ee.gesture=e.gesture);let a=ie();return W4=he.perfadd?W4+Math.round(a-n):Math.round(a-n),e.performance&&(Ee.performance={...e.performance,interpolate:W4}),Ee}var G4={};la(G4,{distance:()=>nf,match:()=>U4,similarity:()=>V4});function nf(e,t,n={order:2,multiplier:25}){if(!e||!e)return Number.MAX_SAFE_INTEGER;let s=0;for(let r=0;r<e.length;r++){let a=!n.order||n.order===2?e[r]-t[r]:Math.abs(e[r]-t[r]);s+=!n.order||n.order===2?a*a:a**n.order}return(n.multiplier||20)*s}var rR=(e,t,n,s)=>{if(e===0)return 1;let r=t===2?Math.sqrt(e):e**(1/t),a=(1-r/100-n)/(s-n);return Math.max(Math.min(a,1),0)};function V4(e,t,n={order:2,multiplier:25,min:.2,max:.8}){let s=nf(e,t,n);return rR(s,n.order||2,n.min||0,n.max||1)}function U4(e,t,n={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||t.length===0)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let s=Number.MAX_SAFE_INTEGER,r=-1;for(let o=0;o<t.length;o++){let i=t[o].length===e.length?nf(e,t[o],n):Number.MAX_SAFE_INTEGER;if(i<s&&(s=i,r=o),s<(n.threshold||0))break}let a=rR(s,n.order||2,n.min||0,n.max||1);return{index:r,distance:s,similarity:a}}function aR(e,t,n,s,r){var i,l,u,c,p,d;let a=0,o=[];for(let h of e){let f={id:a++,face:h,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(let b of t)h.box[0]>b.box[0]&&h.box[0]<b.box[0]+b.box[2]&&h.box[1]+h.box[3]>b.box[1]&&h.box[1]+h.box[3]<b.box[1]+b.box[3]&&(f.body=b);if(f.body)for(let b of n)b.box[0]+b.box[2]>f.body.box[0]&&b.box[0]+b.box[2]<f.body.box[0]+f.body.box[2]&&b.box[1]+b.box[3]>f.body.box[1]&&b.box[1]+b.box[3]<f.body.box[1]+f.body.box[3]&&f.hands&&(f.hands.left=b),b.box[0]<f.body.box[0]+f.body.box[2]&&b.box[0]>f.body.box[0]&&b.box[1]+b.box[3]>f.body.box[1]&&b.box[1]+b.box[3]<f.body.box[1]+f.body.box[3]&&f.hands&&(f.hands.right=b);for(let b of s)(b.face!==void 0&&b.face===h.id||b.iris!==void 0&&b.iris===h.id||b.body!==void 0&&b.body===((i=f.body)==null?void 0:i.id)||b.hand!==void 0&&b.hand===((l=f.hands.left)==null?void 0:l.id)||b.hand!==void 0&&b.hand===((u=f.hands.right)==null?void 0:u.id))&&f.gestures.push(b);let m=[],g=[],y=b=>{b&&b.length===4&&(m.push(b[0],b[0]+b[2]),g.push(b[1],b[1]+b[3]))};y(f.face.box),y((c=f.body)==null?void 0:c.box),y((p=f.hands.left)==null?void 0:p.box),y((d=f.hands.right)==null?void 0:d.box);let x=Math.min(...m),A=Math.min(...g);f.box=[x,A,Math.max(...m)-x,Math.max(...g)-A],(r==null?void 0:r[1])&&(r==null?void 0:r[2])&&(f.boxRaw=[f.box[0]/r[2],f.box[1]/r[1],f.box[2]/r[2],f.box[3]/r[1]]),o.push(f)}return o}var v1=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,w1=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function Xxe(e){let t=(r,a="application/octet-stream")=>fetch(`data:${a};base64,${r}`).then(o=>o.blob()),n,s;switch(e.config.warmup){case"face":n=await t(v1);break;case"body":case"full":n=await t(w1);break;default:n=null}if(n){let r=await createImageBitmap(n);s=await e.detect(r,e.config),r.close()}return s}async function Kxe(e){return new Promise(t=>{let n;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+v1;break;case"full":case"body":n="data:image/jpeg;base64,"+w1;break;default:n=""}let s;if(typeof Image!="undefined")s=new Image;else if(he.Image)s=new he.Image;else return;s.onload=async()=>{let r=ls(s.naturalWidth,s.naturalHeight);if(!r)ae("Warmup: Canvas not found"),t(void 0);else{let a=r.getContext("2d");a&&a.drawImage(s,0,0);let o=await e.image(r),i=o.tensor?await e.detect(o.tensor,e.config):void 0;t(i)}},n?s.src=n:t(void 0)})}async function Zxe(e){let t=r=>Buffer.from(r,"base64"),n;e.config.warmup==="face"?n=t(v1):n=t(w1);let s;if("node"in Ye&&Ln()==="tensorflow"){let r=(void 0).decodeJpeg(n),a=Lt(r,0);e.tf.dispose(r),s=await e.detect(a,e.config),e.tf.dispose(a)}else e.config.debug&&ae("Warmup tfjs-node not loaded");return s}async function Yxe(e){let t;return typeof createImageBitmap=="function"?t=await Xxe(e):typeof Image!="undefined"||he.Canvas!==void 0?t=await Kxe(e):t=await Zxe(e),t}async function Jxe(e){var i,l,u,c;if(!j().flagRegistry.ENGINE_COMPILE_ONLY)return;let t=Ln(),n=Bn();if(t!=="webgl"&&t!=="humangl"||!n||!n.checkCompileCompletion)return;j().set("ENGINE_COMPILE_ONLY",!0);let s=nn().state.numTensors,r=[];for(let[p,d]of Object.entries(e).filter(([h,f])=>h!==null&&f!==null)){let h=(l=(i=d.inputs)==null?void 0:i[0])!=null&&l.shape?[...d.inputs[0].shape]:[1,64,64,3],f=(c=(u=d.inputs)==null?void 0:u[0])!=null&&c.dtype?d.inputs[0].dtype:"float32";for(let g=0;g<h.length;g++)h[g]===-1&&(h[g]=g===0?1:64);let m=Wt(h,f);try{let g=d.execute(m);r.push(p),Array.isArray(g)?g.forEach(y=>J(y)):J(g)}catch(g){ae("compile fail model:",p)}J(m)}let a=await n.checkCompileCompletionAsync();n.getUniformLocations(),ae("compile pass models:",r),ae("compile pass kernels:",a.length),j().set("ENGINE_COMPILE_ONLY",!1);let o=nn().state.numTensors;o-s>0&&ae("tensor leak:",o-s)}async function oR(e,t){let n=ie();return e.state="warmup",t&&(e.config=Xt(e.config,t)),!e.config.warmup||e.config.warmup.length===0||e.config.warmup==="none"?{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:ie(),persons:[],error:null}:new Promise(async s=>{await Jxe(e.models);let r=await Yxe(e),a=ie();e.config.debug&&ae("warmup",e.config.warmup,Math.round(a-n),"ms"),e.emit("warmup"),s(r)})}var Md,sf,rf,k1,H4=class{constructor(t){ge(this,"version");ge(this,"config");ge(this,"result");ge(this,"state");ge(this,"process");ge(this,"tf");ge(this,"env");ge(this,"draw");ge(this,"models");ge(this,"events");ge(this,"faceTriangulation");ge(this,"faceUVMap");ge(this,"performance");Jd(this,Md,void 0);Jd(this,sf,void 0);Jd(this,rf,void 0);ge(this,"gl");ge(this,"analyze",(...t)=>{if(!Yd(this,sf))return;let n=this.tf.engine().state.numTensors,s=Yd(this,Md);Qd(this,Md,n);let r=n-s;r!==0&&ae(...t,r)});Jd(this,k1,t=>{if(!Yd(this,rf))return null;if(!t)return"input is not defined";if(this.env.node&&!(t instanceof nt))return"input must be a tensor";try{this.tf.getBackend()}catch(n){return"backend not loaded"}return null});ge(this,"similarity",V4);ge(this,"distance",nf);ge(this,"match",U4);ge(this,"emit",t=>{var n;(n=this.events)!=null&&n.dispatchEvent&&this.events.dispatchEvent(new Event(t))});this.env=he;let n=(Gh.tfjs||Ky).replace(/-(.*)/,"");Wa.wasmPath=`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${n}/dist/`,Wa.modelBasePath=he.browser?"../models/":"file://models/",Wa.backend=he.browser?"humangl":"tensorflow",this.version=_4,Object.defineProperty(this,"version",{value:_4}),this.config=JSON.parse(JSON.stringify(Wa)),Object.seal(this.config),this.config.cacheModels=typeof indexedDB!="undefined",t&&(this.config=Xt(this.config,t)),KE(this.config),this.tf=Ye,this.state="idle",Qd(this,Md,0),Qd(this,sf,!1),Qd(this,rf,!1),this.performance={},this.events=typeof EventTarget!="undefined"?new EventTarget:void 0,this.models=new tf,this.draw={options:Hn,canvas:(s,r)=>O4(s,r),face:(s,r,a)=>_d(s,r,a),body:(s,r,a)=>Dd(s,r,a),hand:(s,r,a)=>$d(s,r,a),gesture:(s,r,a)=>Fd(s,r,a),object:(s,r,a)=>Pd(s,r,a),person:(s,r,a)=>F4(s,r,a),all:(s,r,a)=>M4(s,r,a)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=HN,this.faceUVMap=jN,this.gl=Rt,Rd(this,null,""),this.emit("create")}reset(){let t=this.config.backend;this.config=JSON.parse(JSON.stringify(Wa)),this.config.backend=t}validate(t){return a3(Wa,t||this.config)}check(){return b1(this)}now(){return ie()}image(t,n=!0){return Ad(t,this.config,n)}async segmentation(t,n){return qE(t,n,this.config)}enhance(t){return e4(t)}compare(t,n){return NT(this.config,t,n)}async init(){await l1(this,!0),await this.tf.ready()}async load(t){this.state="load";let n=ie(),s=Object.values(this.models).filter(o=>o).length;t&&(this.config=Xt(this.config,t)),this.env.initial&&(this.config.debug&&ae(`version: ${this.version}`),this.config.debug&&ae(`tfjs version: ${this.tf.version["tfjs-core"]}`),await l1(this)||ae("error: backend check failed"),await Wc(),this.env.browser&&(this.config.debug&&ae("configuration:",this.config),this.config.debug&&ae("environment:",this.env),this.config.debug&&ae("tf flags:",this.tf.ENV.flags))),await R4(this),this.env.initial&&this.config.debug&&ae("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter(o=>o).length!==s&&(b1(this),this.emit("load"));let a=Math.trunc(ie()-n);a>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+a:a)}next(t=this.result){return sR(t,this.config)}getModelStats(){return E4(this)}async warmup(t){let n=ie(),s=await oR(this,t),r=ie();return this.performance.warmup=Math.trunc(r-n),s}async profile(t,n){let s=await this.tf.profile(()=>this.detect(t,n)),r={},a=0;for(let i of s.kernels)r[i.name]?r[i.name]+=i.kernelTimeMs:r[i.name]=i.kernelTimeMs,a+=i.kernelTimeMs;let o=[];Object.entries(r).forEach(i=>o.push({kernel:i[0],time:i[1],perc:0}));for(let i of o)i.perc=Math.round(1e3*i.time/a)/1e3,i.time=Math.round(1e3*i.time)/1e3;return o.sort((i,l)=>l.time-i.time),o.length=20,o}async detect(t,n){return this.state="detect",new Promise(async s=>{var g,y,x,A,b,w,I,k,R,_,D,E,P,C,M,W,G,X,K,Y,se;this.state="config";let r;this.config=Xt(this.config,n),this.state="check";let a=Yd(this,k1).call(this,t);a&&(ae(a,t),this.emit("error"),s({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ie(),persons:[],error:a}));let o=ie();await l1(this),await this.load(),r=ie(),this.state="image";let i=await Ad(t,this.config);if(this.process=i,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(ie()-r):Math.trunc(ie()-r),this.analyze("Get Image:"),!i.tensor){this.config.debug&&ae("could not convert input to tensor"),this.emit("error"),s({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ie(),persons:[],error:"could not convert input to tensor"});return}this.emit("image"),r=ie(),this.config.skipAllowed=await TT(this.config,i.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(ie()-r):Math.trunc(ie()-r),this.analyze("Check Changed:");let l=[],u=[],c=[],p=[];this.state="detect:face",this.config.async?(l=this.config.face.enabled?B4(this,i.tensor):[],this.performance.face&&delete this.performance.face):(r=ie(),l=this.config.face.enabled?await B4(this,i.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.config.async&&(this.config.body.maxDetected===-1||this.config.hand.maxDetected===-1)&&(l=await l),this.analyze("Start Body:"),this.state="detect:body";let d=this.config.body.maxDetected===-1?Xt(this.config,{body:{maxDetected:this.config.face.enabled?1*l.length:1}}):this.config;this.config.async?((g=this.config.body.modelPath)!=null&&g.includes("posenet")?u=this.config.body.enabled?C4(i.tensor,d):[]:(y=this.config.body.modelPath)!=null&&y.includes("blazepose")?u=this.config.body.enabled?Ob(i.tensor,d):[]:(x=this.config.body.modelPath)!=null&&x.includes("efficientpose")?u=this.config.body.enabled?Ub(i.tensor,d):[]:(A=this.config.body.modelPath)!=null&&A.includes("movenet")&&(u=this.config.body.enabled?x4(i.tensor,d):[]),this.performance.body&&delete this.performance.body):(r=ie(),(b=this.config.body.modelPath)!=null&&b.includes("posenet")?u=this.config.body.enabled?await C4(i.tensor,d):[]:(w=this.config.body.modelPath)!=null&&w.includes("blazepose")?u=this.config.body.enabled?await Ob(i.tensor,d):[]:(I=this.config.body.modelPath)!=null&&I.includes("efficientpose")?u=this.config.body.enabled?await Ub(i.tensor,d):[]:(k=this.config.body.modelPath)!=null&&k.includes("movenet")&&(u=this.config.body.enabled?await x4(i.tensor,d):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";let h=this.config.hand.maxDetected===-1?Xt(this.config,{hand:{maxDetected:this.config.face.enabled?2*l.length:1}}):this.config;this.config.async?((_=(R=this.config.hand.detector)==null?void 0:R.modelPath)!=null&&_.includes("handdetect")?c=this.config.hand.enabled?i4(i.tensor,h):[]:(E=(D=this.config.hand.detector)==null?void 0:D.modelPath)!=null&&E.includes("handtrack")&&(c=this.config.hand.enabled?d4(i.tensor,h):[]),this.performance.hand&&delete this.performance.hand):(r=ie(),(C=(P=this.config.hand.detector)==null?void 0:P.modelPath)!=null&&C.includes("handdetect")?c=this.config.hand.enabled?await i4(i.tensor,h):[]:(W=(M=this.config.hand.detector)==null?void 0:M.modelPath)!=null&&W.includes("handtrack")&&(c=this.config.hand.enabled?await d4(i.tensor,h):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?((G=this.config.object.modelPath)!=null&&G.includes("nanodet")?p=this.config.object.enabled?v4(i.tensor,this.config):[]:(X=this.config.object.modelPath)!=null&&X.includes("centernet")&&(p=this.config.object.enabled?Lb(i.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(r=ie(),(K=this.config.object.modelPath)!=null&&K.includes("nanodet")?p=this.config.object.enabled?await v4(i.tensor,this.config):[]:(Y=this.config.object.modelPath)!=null&&Y.includes("centernet")&&(p=this.config.object.enabled?await Lb(i.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([l,u,c,p]=await Promise.all([l,u,c,p])),this.state="detect:gesture";let f=[];this.config.gesture.enabled&&(r=ie(),f=[...eR(l),...QE(u),...nR(c),...tR(l)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(ie()-o):Math.trunc(ie()-o);let m=((se=this.process.tensor)==null?void 0:se.shape)||[];this.result={face:l,body:u,hand:c,gesture:f,object:p,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return aR(l,u,c,f,m)}},J(i.tensor),this.emit("detect"),this.state="idle",s(this.result)})}};Md=new WeakMap,sf=new WeakMap,rf=new WeakMap,k1=new WeakMap;return a_(ebe);})();
